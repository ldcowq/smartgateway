///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        09/Dec/2021  00:14:24 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\Source\cJSON.c     /
//    Command line       =  -f D:\developer_tool_install\IAR\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\ /
//                          ..\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ        /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f D:\developer_tool_install\IAR\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\ /
//                          ..\Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO      /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00010000                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFF3                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\developer_tool_install\ /
//                          IAR\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\ /
//                          SMGW\Source\cJSON.c -D ZTOOL_P1 -D xMT_TASK -D    /
//                          xMT_SYS_FUNC -D xMT_ZDO_FUNC -D                   /
//                          xLCD_SUPPORTED=DEBUG -lC                          /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\Coordinat /
//                          orEB\List\ -lA D:\developer_tool_install\IAR\ZSta /
//                          ck-CC2530-2.5.1a\Projects\zstack\Samples\SMGW\CC2 /
//                          530DB\CoordinatorEB\List\ --diag_suppress         /
//                          Pe001,Pa010 -o D:\developer_tool_install\IAR\ZSta /
//                          ck-CC2530-2.5.1a\Projects\zstack\Samples\SMGW\CC2 /
//                          530DB\CoordinatorEB\Obj\ -e --no_code_motion      /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I D:\developer_tool_install\IAR\ZStack-CC2530-2. /
//                          5.1a\Projects\zstack\Samples\SMGW\CC2530DB\ -I    /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\Source /
//                          \ -I D:\developer_tool_install\IAR\ZStack-CC2530- /
//                          2.5.1a\Projects\zstack\Samples\SMGW\CC2530DB\..\. /
//                          .\..\ZMain\TI2530DB\ -I                           /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\hal\include\ -I                  /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\hal\target\CC2530EB\ -I          /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\mac\include\ -I                  /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\mac\high_level\ -I               /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\mac\low_level\srf04\ -I          /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\mac\low_level\srf04\single_chip\ /
//                           -I D:\developer_tool_install\IAR\ZStack-CC2530-2 /
//                          .5.1a\Projects\zstack\Samples\SMGW\CC2530DB\..\.. /
//                          \..\..\..\Components\mt\ -I                       /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\osal\include\ -I                 /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\services\saddr\ -I               /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\services\sdata\ -I               /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\af\ -I                     /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\nwk\ -I                    /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\sapi\ -I                   /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\sec\ -I                    /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\sys\ -I                    /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\stack\zdo\ -I                    /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\zmac\ -I                         /
//                          D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\..\..\..\ /
//                          ..\..\Components\zmac\f8w\ -Ohz                   /
//                          --require_prototypes                              /
//    List file          =  D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1 /
//                          a\Projects\zstack\Samples\SMGW\CC2530DB\Coordinat /
//                          orEB\List\cJSON.s51                               /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME cJSON

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_DIV
        EXTERN ?FLT_EQ
        EXTERN ?FLT_GE
        EXTERN ?FLT_LT
        EXTERN ?FLT_MUL
        EXTERN ?FLT_SUB
        EXTERN ?FLT_TO_L
        EXTERN ?L_ADD_X
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_TO_FLT
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK_I_FOUR
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?UC_SWITCH_SPARSE
        EXTERN ?UL_GE_X
        EXTERN ?UL_SHR
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        FUNCTION ??add_item_to_array?relay,0203H
        FUNCTION ??add_item_to_object?relay,0203H
        FUNCTION ??buffer_skip_whitespace?relay,0203H
        PUBLIC ??cJSON_AddArrayToObject?relay
        FUNCTION ??cJSON_AddArrayToObject?relay,0203H
        PUBLIC ??cJSON_AddBoolToObject?relay
        FUNCTION ??cJSON_AddBoolToObject?relay,0203H
        PUBLIC ??cJSON_AddFalseToObject?relay
        FUNCTION ??cJSON_AddFalseToObject?relay,0203H
        PUBLIC ??cJSON_AddItemReferenceToArray?relay
        FUNCTION ??cJSON_AddItemReferenceToArray?relay,0203H
        PUBLIC ??cJSON_AddItemReferenceToObject?relay
        FUNCTION ??cJSON_AddItemReferenceToObject?relay,0203H
        PUBLIC ??cJSON_AddItemToArray?relay
        FUNCTION ??cJSON_AddItemToArray?relay,0203H
        PUBLIC ??cJSON_AddItemToObject?relay
        FUNCTION ??cJSON_AddItemToObject?relay,0203H
        PUBLIC ??cJSON_AddItemToObjectCS?relay
        FUNCTION ??cJSON_AddItemToObjectCS?relay,0203H
        PUBLIC ??cJSON_AddNullToObject?relay
        FUNCTION ??cJSON_AddNullToObject?relay,0203H
        PUBLIC ??cJSON_AddNumberToObject?relay
        FUNCTION ??cJSON_AddNumberToObject?relay,0203H
        PUBLIC ??cJSON_AddObjectToObject?relay
        FUNCTION ??cJSON_AddObjectToObject?relay,0203H
        PUBLIC ??cJSON_AddRawToObject?relay
        FUNCTION ??cJSON_AddRawToObject?relay,0203H
        PUBLIC ??cJSON_AddStringToObject?relay
        FUNCTION ??cJSON_AddStringToObject?relay,0203H
        PUBLIC ??cJSON_AddTrueToObject?relay
        FUNCTION ??cJSON_AddTrueToObject?relay,0203H
        PUBLIC ??cJSON_Compare?relay
        FUNCTION ??cJSON_Compare?relay,0203H
        PUBLIC ??cJSON_CreateArray?relay
        FUNCTION ??cJSON_CreateArray?relay,0203H
        PUBLIC ??cJSON_CreateArrayReference?relay
        FUNCTION ??cJSON_CreateArrayReference?relay,0203H
        PUBLIC ??cJSON_CreateBool?relay
        FUNCTION ??cJSON_CreateBool?relay,0203H
        PUBLIC ??cJSON_CreateDoubleArray?relay
        FUNCTION ??cJSON_CreateDoubleArray?relay,0203H
        PUBLIC ??cJSON_CreateFalse?relay
        FUNCTION ??cJSON_CreateFalse?relay,0203H
        PUBLIC ??cJSON_CreateFloatArray?relay
        FUNCTION ??cJSON_CreateFloatArray?relay,0203H
        PUBLIC ??cJSON_CreateIntArray?relay
        FUNCTION ??cJSON_CreateIntArray?relay,0203H
        PUBLIC ??cJSON_CreateNull?relay
        FUNCTION ??cJSON_CreateNull?relay,0203H
        PUBLIC ??cJSON_CreateNumber?relay
        FUNCTION ??cJSON_CreateNumber?relay,0203H
        PUBLIC ??cJSON_CreateObject?relay
        FUNCTION ??cJSON_CreateObject?relay,0203H
        PUBLIC ??cJSON_CreateObjectReference?relay
        FUNCTION ??cJSON_CreateObjectReference?relay,0203H
        PUBLIC ??cJSON_CreateRaw?relay
        FUNCTION ??cJSON_CreateRaw?relay,0203H
        PUBLIC ??cJSON_CreateString?relay
        FUNCTION ??cJSON_CreateString?relay,0203H
        PUBLIC ??cJSON_CreateStringArray?relay
        FUNCTION ??cJSON_CreateStringArray?relay,0203H
        PUBLIC ??cJSON_CreateStringReference?relay
        FUNCTION ??cJSON_CreateStringReference?relay,0203H
        PUBLIC ??cJSON_CreateTrue?relay
        FUNCTION ??cJSON_CreateTrue?relay,0203H
        PUBLIC ??cJSON_Delete?relay
        FUNCTION ??cJSON_Delete?relay,0203H
        PUBLIC ??cJSON_DeleteItemFromArray?relay
        FUNCTION ??cJSON_DeleteItemFromArray?relay,0203H
        PUBLIC ??cJSON_DeleteItemFromObject?relay
        FUNCTION ??cJSON_DeleteItemFromObject?relay,0203H
        PUBLIC ??cJSON_DeleteItemFromObjectCaseSensitive?relay
        FUNCTION ??cJSON_DeleteItemFromObjectCaseSensitive?relay,0203H
        PUBLIC ??cJSON_DetachItemFromArray?relay
        FUNCTION ??cJSON_DetachItemFromArray?relay,0203H
        PUBLIC ??cJSON_DetachItemFromObject?relay
        FUNCTION ??cJSON_DetachItemFromObject?relay,0203H
        PUBLIC ??cJSON_DetachItemFromObjectCaseSensitive?relay
        FUNCTION ??cJSON_DetachItemFromObjectCaseSensitive?relay,0203H
        PUBLIC ??cJSON_DetachItemViaPointer?relay
        FUNCTION ??cJSON_DetachItemViaPointer?relay,0203H
        PUBLIC ??cJSON_Duplicate?relay
        FUNCTION ??cJSON_Duplicate?relay,0203H
        PUBLIC ??cJSON_GetArrayItem?relay
        FUNCTION ??cJSON_GetArrayItem?relay,0203H
        PUBLIC ??cJSON_GetArraySize?relay
        FUNCTION ??cJSON_GetArraySize?relay,0203H
        PUBLIC ??cJSON_GetErrorPtr?relay
        FUNCTION ??cJSON_GetErrorPtr?relay,0203H
        PUBLIC ??cJSON_GetNumberValue?relay
        FUNCTION ??cJSON_GetNumberValue?relay,0203H
        PUBLIC ??cJSON_GetObjectItem?relay
        FUNCTION ??cJSON_GetObjectItem?relay,0203H
        PUBLIC ??cJSON_GetObjectItemCaseSensitive?relay
        FUNCTION ??cJSON_GetObjectItemCaseSensitive?relay,0203H
        PUBLIC ??cJSON_GetStringValue?relay
        FUNCTION ??cJSON_GetStringValue?relay,0203H
        PUBLIC ??cJSON_HasObjectItem?relay
        FUNCTION ??cJSON_HasObjectItem?relay,0203H
        PUBLIC ??cJSON_InitHooks?relay
        FUNCTION ??cJSON_InitHooks?relay,0203H
        PUBLIC ??cJSON_InsertItemInArray?relay
        FUNCTION ??cJSON_InsertItemInArray?relay,0203H
        PUBLIC ??cJSON_IsArray?relay
        FUNCTION ??cJSON_IsArray?relay,0203H
        PUBLIC ??cJSON_IsBool?relay
        FUNCTION ??cJSON_IsBool?relay,0203H
        PUBLIC ??cJSON_IsFalse?relay
        FUNCTION ??cJSON_IsFalse?relay,0203H
        PUBLIC ??cJSON_IsInvalid?relay
        FUNCTION ??cJSON_IsInvalid?relay,0203H
        PUBLIC ??cJSON_IsNull?relay
        FUNCTION ??cJSON_IsNull?relay,0203H
        PUBLIC ??cJSON_IsNumber?relay
        FUNCTION ??cJSON_IsNumber?relay,0203H
        PUBLIC ??cJSON_IsObject?relay
        FUNCTION ??cJSON_IsObject?relay,0203H
        PUBLIC ??cJSON_IsRaw?relay
        FUNCTION ??cJSON_IsRaw?relay,0203H
        PUBLIC ??cJSON_IsString?relay
        FUNCTION ??cJSON_IsString?relay,0203H
        PUBLIC ??cJSON_IsTrue?relay
        FUNCTION ??cJSON_IsTrue?relay,0203H
        PUBLIC ??cJSON_Minify?relay
        FUNCTION ??cJSON_Minify?relay,0203H
        FUNCTION ??cJSON_New_Item?relay,0203H
        PUBLIC ??cJSON_Parse?relay
        FUNCTION ??cJSON_Parse?relay,0203H
        PUBLIC ??cJSON_ParseWithLength?relay
        FUNCTION ??cJSON_ParseWithLength?relay,0203H
        PUBLIC ??cJSON_ParseWithLengthOpts?relay
        FUNCTION ??cJSON_ParseWithLengthOpts?relay,0203H
        PUBLIC ??cJSON_ParseWithOpts?relay
        FUNCTION ??cJSON_ParseWithOpts?relay,0203H
        PUBLIC ??cJSON_Print?relay
        FUNCTION ??cJSON_Print?relay,0203H
        PUBLIC ??cJSON_PrintBuffered?relay
        FUNCTION ??cJSON_PrintBuffered?relay,0203H
        PUBLIC ??cJSON_PrintPreallocated?relay
        FUNCTION ??cJSON_PrintPreallocated?relay,0203H
        PUBLIC ??cJSON_PrintUnformatted?relay
        FUNCTION ??cJSON_PrintUnformatted?relay,0203H
        PUBLIC ??cJSON_ReplaceItemInArray?relay
        FUNCTION ??cJSON_ReplaceItemInArray?relay,0203H
        PUBLIC ??cJSON_ReplaceItemInObject?relay
        FUNCTION ??cJSON_ReplaceItemInObject?relay,0203H
        PUBLIC ??cJSON_ReplaceItemInObjectCaseSensitive?relay
        FUNCTION ??cJSON_ReplaceItemInObjectCaseSensitive?relay,0203H
        PUBLIC ??cJSON_ReplaceItemViaPointer?relay
        FUNCTION ??cJSON_ReplaceItemViaPointer?relay,0203H
        PUBLIC ??cJSON_SetNumberHelper?relay
        FUNCTION ??cJSON_SetNumberHelper?relay,0203H
        PUBLIC ??cJSON_SetValuestring?relay
        FUNCTION ??cJSON_SetValuestring?relay,0203H
        PUBLIC ??cJSON_Version?relay
        FUNCTION ??cJSON_Version?relay,0203H
        PUBLIC ??cJSON_free?relay
        FUNCTION ??cJSON_free?relay,0203H
        PUBLIC ??cJSON_malloc?relay
        FUNCTION ??cJSON_malloc?relay,0203H
        FUNCTION ??cJSON_strdup?relay,0203H
        FUNCTION ??case_insensitive_strcmp?relay,0203H
        FUNCTION ??compare_double?relay,0203H
        FUNCTION ??create_reference?relay,0203H
        FUNCTION ??ensure?relay,0203H
        PUBWEAK ??free?relay
        FUNCTION ??free?relay,0203H
        FUNCTION ??get_array_item?relay,0203H
        FUNCTION ??get_object_item?relay,0203H
        PUBWEAK ??malloc?relay
        FUNCTION ??malloc?relay,0203H
        FUNCTION ??minify_string?relay,0203H
        FUNCTION ??parse_array?relay,0203H
        FUNCTION ??parse_hex4?relay,0203H
        FUNCTION ??parse_number?relay,0203H
        FUNCTION ??parse_object?relay,0203H
        FUNCTION ??parse_string?relay,0203H
        FUNCTION ??parse_value?relay,0203H
        FUNCTION ??print?relay,0203H
        FUNCTION ??print_array?relay,0203H
        FUNCTION ??print_number?relay,0203H
        FUNCTION ??print_object?relay,0203H
        FUNCTION ??print_string_ptr?relay,0203H
        FUNCTION ??print_value?relay,0203H
        PUBWEAK ??realloc?relay
        FUNCTION ??realloc?relay,0203H
        FUNCTION ??replace_item_in_object?relay,0203H
        FUNCTION ??suffix_object?relay,0203H
        FUNCTION ??update_offset?relay,0203H
        FUNCTION ??utf16_literal_to_utf8?relay,0203H
        PUBWEAK __Constant_0
        PUBWEAK __Constant_10000
        PUBWEAK __Constant_110000
        PUBWEAK __Constant_34000000
        PUBWEAK __Constant_46fffe00
        PUBWEAK __Constant_80
        PUBWEAK __Constant_800
        PUBWEAK __Constant_c6fffffe
        FUNCTION add_item_to_array,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION add_item_to_object,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        FUNCTION buffer_skip_whitespace,0203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 4, STACK
        PUBLIC cJSON_AddArrayToObject
        FUNCTION cJSON_AddArrayToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddBoolToObject
        FUNCTION cJSON_AddBoolToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddFalseToObject
        FUNCTION cJSON_AddFalseToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddItemReferenceToArray
        FUNCTION cJSON_AddItemReferenceToArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_AddItemReferenceToObject
        FUNCTION cJSON_AddItemReferenceToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_AddItemToArray
        FUNCTION cJSON_AddItemToArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_AddItemToObject
        FUNCTION cJSON_AddItemToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_AddItemToObjectCS
        FUNCTION cJSON_AddItemToObjectCS,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_AddNullToObject
        FUNCTION cJSON_AddNullToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddNumberToObject
        FUNCTION cJSON_AddNumberToObject,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC cJSON_AddObjectToObject
        FUNCTION cJSON_AddObjectToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddRawToObject
        FUNCTION cJSON_AddRawToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddStringToObject
        FUNCTION cJSON_AddStringToObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_AddTrueToObject
        FUNCTION cJSON_AddTrueToObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_Compare
        FUNCTION cJSON_Compare,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 22, STACK
        PUBLIC cJSON_CreateArray
        FUNCTION cJSON_CreateArray,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateArrayReference
        FUNCTION cJSON_CreateArrayReference,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateBool
        FUNCTION cJSON_CreateBool,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateDoubleArray
        FUNCTION cJSON_CreateDoubleArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_CreateFalse
        FUNCTION cJSON_CreateFalse,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateFloatArray
        FUNCTION cJSON_CreateFloatArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_CreateIntArray
        FUNCTION cJSON_CreateIntArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC cJSON_CreateNull
        FUNCTION cJSON_CreateNull,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateNumber
        FUNCTION cJSON_CreateNumber,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_CreateObject
        FUNCTION cJSON_CreateObject,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateObjectReference
        FUNCTION cJSON_CreateObjectReference,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateRaw
        FUNCTION cJSON_CreateRaw,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_CreateString
        FUNCTION cJSON_CreateString,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_CreateStringArray
        FUNCTION cJSON_CreateStringArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC cJSON_CreateStringReference
        FUNCTION cJSON_CreateStringReference,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_CreateTrue
        FUNCTION cJSON_CreateTrue,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_Delete
        FUNCTION cJSON_Delete,021203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_DeleteItemFromArray
        FUNCTION cJSON_DeleteItemFromArray,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_DeleteItemFromObject
        FUNCTION cJSON_DeleteItemFromObject,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_DeleteItemFromObjectCaseSensitive
        FUNCTION cJSON_DeleteItemFromObjectCaseSensitive,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_DetachItemFromArray
        FUNCTION cJSON_DetachItemFromArray,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_DetachItemFromObject
        FUNCTION cJSON_DetachItemFromObject,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_DetachItemFromObjectCaseSensitive
        FUNCTION cJSON_DetachItemFromObjectCaseSensitive,021203H
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_DetachItemViaPointer
        FUNCTION cJSON_DetachItemViaPointer,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        PUBLIC cJSON_Duplicate
        FUNCTION cJSON_Duplicate,021203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        PUBLIC cJSON_GetArrayItem
        FUNCTION cJSON_GetArrayItem,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_GetArraySize
        FUNCTION cJSON_GetArraySize,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_GetErrorPtr
        FUNCTION cJSON_GetErrorPtr,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_GetNumberValue
        FUNCTION cJSON_GetNumberValue,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_GetObjectItem
        FUNCTION cJSON_GetObjectItem,021203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_GetObjectItemCaseSensitive
        FUNCTION cJSON_GetObjectItemCaseSensitive,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_GetStringValue
        FUNCTION cJSON_GetStringValue,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_HasObjectItem
        FUNCTION cJSON_HasObjectItem,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC cJSON_InitHooks
        FUNCTION cJSON_InitHooks,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_InsertItemInArray
        FUNCTION cJSON_InsertItemInArray,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_IsArray
        FUNCTION cJSON_IsArray,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsBool
        FUNCTION cJSON_IsBool,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsFalse
        FUNCTION cJSON_IsFalse,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsInvalid
        FUNCTION cJSON_IsInvalid,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsNull
        FUNCTION cJSON_IsNull,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsNumber
        FUNCTION cJSON_IsNumber,0203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsObject
        FUNCTION cJSON_IsObject,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsRaw
        FUNCTION cJSON_IsRaw,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsString
        FUNCTION cJSON_IsString,0203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_IsTrue
        FUNCTION cJSON_IsTrue,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_Minify
        FUNCTION cJSON_Minify,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 3, STACK
        LOCFRAME XSTACK, 4, STACK
        FUNCTION cJSON_New_Item,021203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_Parse
        FUNCTION cJSON_Parse,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_ParseWithLength
        FUNCTION cJSON_ParseWithLength,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC cJSON_ParseWithLengthOpts
        FUNCTION cJSON_ParseWithLengthOpts,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 32, STACK
        PUBLIC cJSON_ParseWithOpts
        FUNCTION cJSON_ParseWithOpts,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        PUBLIC cJSON_Print
        FUNCTION cJSON_Print,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_PrintBuffered
        FUNCTION cJSON_PrintBuffered,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC cJSON_PrintPreallocated
        FUNCTION cJSON_PrintPreallocated,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 28, STACK
        PUBLIC cJSON_PrintUnformatted
        FUNCTION cJSON_PrintUnformatted,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_ReplaceItemInArray
        FUNCTION cJSON_ReplaceItemInArray,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC cJSON_ReplaceItemInObject
        FUNCTION cJSON_ReplaceItemInObject,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_ReplaceItemInObjectCaseSensitive
        FUNCTION cJSON_ReplaceItemInObjectCaseSensitive,021203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_ReplaceItemViaPointer
        FUNCTION cJSON_ReplaceItemViaPointer,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 11, STACK
        PUBLIC cJSON_SetNumberHelper
        FUNCTION cJSON_SetNumberHelper,0203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_SetValuestring
        FUNCTION cJSON_SetValuestring,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC cJSON_Version
        FUNCTION cJSON_Version,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC cJSON_free
        FUNCTION cJSON_free,0203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC cJSON_malloc
        FUNCTION cJSON_malloc,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION cJSON_strdup,021203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        FUNCTION case_insensitive_strcmp,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 9, STACK
        FUNCTION compare_double,0203H
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 24, STACK
        FUNCTION create_reference,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        FUNCTION ensure,021203H
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBWEAK free
        FUNCTION free,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION get_array_item,0203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        FUNCTION get_object_item,021203H
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBWEAK malloc
        FUNCTION malloc,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION minify_string,0203H
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        FUNCTION parse_array,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        FUNCTION parse_hex4,0203H
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION parse_number,0a1203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 86, STACK
        FUNCTION parse_object,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 16, STACK
        FUNCTION parse_string,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 22, STACK
        FUNCTION parse_value,021203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        FUNCTION print,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 36, STACK
        FUNCTION print_array,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        FUNCTION print_number,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 50, STACK
        FUNCTION print_object,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 14, STACK
        FUNCTION print_string_ptr,021203H
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        FUNCTION print_value,021203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBWEAK realloc
        FUNCTION realloc,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        FUNCTION replace_item_in_object,021203H
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        FUNCTION suffix_object,0203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        FUNCTION update_offset,021203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION utf16_literal_to_utf8,021203H
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
__xdata_malloc      SYMBOL "__xdata_malloc"
__xdata_realloc     SYMBOL "__xdata_realloc"
__xdata_free        SYMBOL "__xdata_free"
sprintf             SYMBOL "sprintf"
strlen              SYMBOL "strlen"
memcpy              SYMBOL "memcpy"
memset              SYMBOL "memset"
strtod              SYMBOL "strtod"
strcpy              SYMBOL "strcpy"
sscanf              SYMBOL "sscanf"
strncmp             SYMBOL "strncmp"
strcmp              SYMBOL "strcmp"
??__xdata_free?relay SYMBOL "?relay", __xdata_free
??__xdata_malloc?relay SYMBOL "?relay", __xdata_malloc
??__xdata_realloc?relay SYMBOL "?relay", __xdata_realloc
??memcpy?relay      SYMBOL "?relay", memcpy
??memset?relay      SYMBOL "?relay", memset
??sprintf?relay     SYMBOL "?relay", sprintf
??sscanf?relay      SYMBOL "?relay", sscanf
??strcmp?relay      SYMBOL "?relay", strcmp
??strcpy?relay      SYMBOL "?relay", strcpy
??strlen?relay      SYMBOL "?relay", strlen
??strncmp?relay     SYMBOL "?relay", strncmp
??strtod?relay      SYMBOL "?relay", strtod
cJSON_AddArrayToObject SYMBOL "cJSON_AddArrayToObject"
??cJSON_AddArrayToObject?relay SYMBOL "?relay", cJSON_AddArrayToObject
cJSON_AddBoolToObject SYMBOL "cJSON_AddBoolToObject"
??cJSON_AddBoolToObject?relay SYMBOL "?relay", cJSON_AddBoolToObject
cJSON_AddFalseToObject SYMBOL "cJSON_AddFalseToObject"
??cJSON_AddFalseToObject?relay SYMBOL "?relay", cJSON_AddFalseToObject
cJSON_AddItemReferenceToArray SYMBOL "cJSON_AddItemReferenceToArray"
??cJSON_AddItemReferenceToArray?relay SYMBOL "?relay", cJSON_AddItemReferenceToArray
cJSON_AddItemReferenceToObject SYMBOL "cJSON_AddItemReferenceToObject"
??cJSON_AddItemReferenceToObject?relay SYMBOL "?relay", cJSON_AddItemReferenceToObject
cJSON_AddItemToArray SYMBOL "cJSON_AddItemToArray"
??cJSON_AddItemToArray?relay SYMBOL "?relay", cJSON_AddItemToArray
cJSON_AddItemToObject SYMBOL "cJSON_AddItemToObject"
??cJSON_AddItemToObject?relay SYMBOL "?relay", cJSON_AddItemToObject
cJSON_AddItemToObjectCS SYMBOL "cJSON_AddItemToObjectCS"
??cJSON_AddItemToObjectCS?relay SYMBOL "?relay", cJSON_AddItemToObjectCS
cJSON_AddNullToObject SYMBOL "cJSON_AddNullToObject"
??cJSON_AddNullToObject?relay SYMBOL "?relay", cJSON_AddNullToObject
cJSON_AddNumberToObject SYMBOL "cJSON_AddNumberToObject"
??cJSON_AddNumberToObject?relay SYMBOL "?relay", cJSON_AddNumberToObject
cJSON_AddObjectToObject SYMBOL "cJSON_AddObjectToObject"
??cJSON_AddObjectToObject?relay SYMBOL "?relay", cJSON_AddObjectToObject
cJSON_AddRawToObject SYMBOL "cJSON_AddRawToObject"
??cJSON_AddRawToObject?relay SYMBOL "?relay", cJSON_AddRawToObject
cJSON_AddStringToObject SYMBOL "cJSON_AddStringToObject"
??cJSON_AddStringToObject?relay SYMBOL "?relay", cJSON_AddStringToObject
cJSON_AddTrueToObject SYMBOL "cJSON_AddTrueToObject"
??cJSON_AddTrueToObject?relay SYMBOL "?relay", cJSON_AddTrueToObject
cJSON_Compare       SYMBOL "cJSON_Compare"
??cJSON_Compare?relay SYMBOL "?relay", cJSON_Compare
cJSON_CreateArray   SYMBOL "cJSON_CreateArray"
??cJSON_CreateArray?relay SYMBOL "?relay", cJSON_CreateArray
cJSON_CreateArrayReference SYMBOL "cJSON_CreateArrayReference"
??cJSON_CreateArrayReference?relay SYMBOL "?relay", cJSON_CreateArrayReference
cJSON_CreateBool    SYMBOL "cJSON_CreateBool"
??cJSON_CreateBool?relay SYMBOL "?relay", cJSON_CreateBool
cJSON_CreateDoubleArray SYMBOL "cJSON_CreateDoubleArray"
??cJSON_CreateDoubleArray?relay SYMBOL "?relay", cJSON_CreateDoubleArray
cJSON_CreateFalse   SYMBOL "cJSON_CreateFalse"
??cJSON_CreateFalse?relay SYMBOL "?relay", cJSON_CreateFalse
cJSON_CreateFloatArray SYMBOL "cJSON_CreateFloatArray"
??cJSON_CreateFloatArray?relay SYMBOL "?relay", cJSON_CreateFloatArray
cJSON_CreateIntArray SYMBOL "cJSON_CreateIntArray"
??cJSON_CreateIntArray?relay SYMBOL "?relay", cJSON_CreateIntArray
cJSON_CreateNull    SYMBOL "cJSON_CreateNull"
??cJSON_CreateNull?relay SYMBOL "?relay", cJSON_CreateNull
cJSON_CreateNumber  SYMBOL "cJSON_CreateNumber"
??cJSON_CreateNumber?relay SYMBOL "?relay", cJSON_CreateNumber
cJSON_CreateObject  SYMBOL "cJSON_CreateObject"
??cJSON_CreateObject?relay SYMBOL "?relay", cJSON_CreateObject
cJSON_CreateObjectReference SYMBOL "cJSON_CreateObjectReference"
??cJSON_CreateObjectReference?relay SYMBOL "?relay", cJSON_CreateObjectReference
cJSON_CreateRaw     SYMBOL "cJSON_CreateRaw"
??cJSON_CreateRaw?relay SYMBOL "?relay", cJSON_CreateRaw
cJSON_CreateString  SYMBOL "cJSON_CreateString"
??cJSON_CreateString?relay SYMBOL "?relay", cJSON_CreateString
cJSON_CreateStringArray SYMBOL "cJSON_CreateStringArray"
??cJSON_CreateStringArray?relay SYMBOL "?relay", cJSON_CreateStringArray
cJSON_CreateStringReference SYMBOL "cJSON_CreateStringReference"
??cJSON_CreateStringReference?relay SYMBOL "?relay", cJSON_CreateStringReference
cJSON_CreateTrue    SYMBOL "cJSON_CreateTrue"
??cJSON_CreateTrue?relay SYMBOL "?relay", cJSON_CreateTrue
cJSON_Delete        SYMBOL "cJSON_Delete"
??cJSON_Delete?relay SYMBOL "?relay", cJSON_Delete
cJSON_DeleteItemFromArray SYMBOL "cJSON_DeleteItemFromArray"
??cJSON_DeleteItemFromArray?relay SYMBOL "?relay", cJSON_DeleteItemFromArray
cJSON_DeleteItemFromObject SYMBOL "cJSON_DeleteItemFromObject"
??cJSON_DeleteItemFromObject?relay SYMBOL "?relay", cJSON_DeleteItemFromObject
cJSON_DeleteItemFromObjectCaseSensitive SYMBOL "cJSON_DeleteItemFromObjectCaseSensitive"
??cJSON_DeleteItemFromObjectCaseSensitive?relay SYMBOL "?relay", cJSON_DeleteItemFromObjectCaseSensitive
cJSON_DetachItemFromArray SYMBOL "cJSON_DetachItemFromArray"
??cJSON_DetachItemFromArray?relay SYMBOL "?relay", cJSON_DetachItemFromArray
cJSON_DetachItemFromObject SYMBOL "cJSON_DetachItemFromObject"
??cJSON_DetachItemFromObject?relay SYMBOL "?relay", cJSON_DetachItemFromObject
cJSON_DetachItemFromObjectCaseSensitive SYMBOL "cJSON_DetachItemFromObjectCaseSensitive"
??cJSON_DetachItemFromObjectCaseSensitive?relay SYMBOL "?relay", cJSON_DetachItemFromObjectCaseSensitive
cJSON_DetachItemViaPointer SYMBOL "cJSON_DetachItemViaPointer"
??cJSON_DetachItemViaPointer?relay SYMBOL "?relay", cJSON_DetachItemViaPointer
cJSON_Duplicate     SYMBOL "cJSON_Duplicate"
??cJSON_Duplicate?relay SYMBOL "?relay", cJSON_Duplicate
cJSON_GetArrayItem  SYMBOL "cJSON_GetArrayItem"
??cJSON_GetArrayItem?relay SYMBOL "?relay", cJSON_GetArrayItem
cJSON_GetArraySize  SYMBOL "cJSON_GetArraySize"
??cJSON_GetArraySize?relay SYMBOL "?relay", cJSON_GetArraySize
cJSON_GetErrorPtr   SYMBOL "cJSON_GetErrorPtr"
??cJSON_GetErrorPtr?relay SYMBOL "?relay", cJSON_GetErrorPtr
cJSON_GetNumberValue SYMBOL "cJSON_GetNumberValue"
??cJSON_GetNumberValue?relay SYMBOL "?relay", cJSON_GetNumberValue
cJSON_GetObjectItem SYMBOL "cJSON_GetObjectItem"
??cJSON_GetObjectItem?relay SYMBOL "?relay", cJSON_GetObjectItem
cJSON_GetObjectItemCaseSensitive SYMBOL "cJSON_GetObjectItemCaseSensitive"
??cJSON_GetObjectItemCaseSensitive?relay SYMBOL "?relay", cJSON_GetObjectItemCaseSensitive
cJSON_GetStringValue SYMBOL "cJSON_GetStringValue"
??cJSON_GetStringValue?relay SYMBOL "?relay", cJSON_GetStringValue
cJSON_HasObjectItem SYMBOL "cJSON_HasObjectItem"
??cJSON_HasObjectItem?relay SYMBOL "?relay", cJSON_HasObjectItem
cJSON_InitHooks     SYMBOL "cJSON_InitHooks"
??cJSON_InitHooks?relay SYMBOL "?relay", cJSON_InitHooks
cJSON_InsertItemInArray SYMBOL "cJSON_InsertItemInArray"
??cJSON_InsertItemInArray?relay SYMBOL "?relay", cJSON_InsertItemInArray
cJSON_IsArray       SYMBOL "cJSON_IsArray"
??cJSON_IsArray?relay SYMBOL "?relay", cJSON_IsArray
cJSON_IsBool        SYMBOL "cJSON_IsBool"
??cJSON_IsBool?relay SYMBOL "?relay", cJSON_IsBool
cJSON_IsFalse       SYMBOL "cJSON_IsFalse"
??cJSON_IsFalse?relay SYMBOL "?relay", cJSON_IsFalse
cJSON_IsInvalid     SYMBOL "cJSON_IsInvalid"
??cJSON_IsInvalid?relay SYMBOL "?relay", cJSON_IsInvalid
cJSON_IsNull        SYMBOL "cJSON_IsNull"
??cJSON_IsNull?relay SYMBOL "?relay", cJSON_IsNull
cJSON_IsNumber      SYMBOL "cJSON_IsNumber"
??cJSON_IsNumber?relay SYMBOL "?relay", cJSON_IsNumber
cJSON_IsObject      SYMBOL "cJSON_IsObject"
??cJSON_IsObject?relay SYMBOL "?relay", cJSON_IsObject
cJSON_IsRaw         SYMBOL "cJSON_IsRaw"
??cJSON_IsRaw?relay SYMBOL "?relay", cJSON_IsRaw
cJSON_IsString      SYMBOL "cJSON_IsString"
??cJSON_IsString?relay SYMBOL "?relay", cJSON_IsString
cJSON_IsTrue        SYMBOL "cJSON_IsTrue"
??cJSON_IsTrue?relay SYMBOL "?relay", cJSON_IsTrue
cJSON_Minify        SYMBOL "cJSON_Minify"
??cJSON_Minify?relay SYMBOL "?relay", cJSON_Minify
cJSON_Parse         SYMBOL "cJSON_Parse"
??cJSON_Parse?relay SYMBOL "?relay", cJSON_Parse
cJSON_ParseWithLength SYMBOL "cJSON_ParseWithLength"
??cJSON_ParseWithLength?relay SYMBOL "?relay", cJSON_ParseWithLength
cJSON_ParseWithLengthOpts SYMBOL "cJSON_ParseWithLengthOpts"
??cJSON_ParseWithLengthOpts?relay SYMBOL "?relay", cJSON_ParseWithLengthOpts
cJSON_ParseWithOpts SYMBOL "cJSON_ParseWithOpts"
??cJSON_ParseWithOpts?relay SYMBOL "?relay", cJSON_ParseWithOpts
cJSON_Print         SYMBOL "cJSON_Print"
??cJSON_Print?relay SYMBOL "?relay", cJSON_Print
cJSON_PrintBuffered SYMBOL "cJSON_PrintBuffered"
??cJSON_PrintBuffered?relay SYMBOL "?relay", cJSON_PrintBuffered
cJSON_PrintPreallocated SYMBOL "cJSON_PrintPreallocated"
??cJSON_PrintPreallocated?relay SYMBOL "?relay", cJSON_PrintPreallocated
cJSON_PrintUnformatted SYMBOL "cJSON_PrintUnformatted"
??cJSON_PrintUnformatted?relay SYMBOL "?relay", cJSON_PrintUnformatted
cJSON_ReplaceItemInArray SYMBOL "cJSON_ReplaceItemInArray"
??cJSON_ReplaceItemInArray?relay SYMBOL "?relay", cJSON_ReplaceItemInArray
cJSON_ReplaceItemInObject SYMBOL "cJSON_ReplaceItemInObject"
??cJSON_ReplaceItemInObject?relay SYMBOL "?relay", cJSON_ReplaceItemInObject
cJSON_ReplaceItemInObjectCaseSensitive SYMBOL "cJSON_ReplaceItemInObjectCaseSensitive"
??cJSON_ReplaceItemInObjectCaseSensitive?relay SYMBOL "?relay", cJSON_ReplaceItemInObjectCaseSensitive
cJSON_ReplaceItemViaPointer SYMBOL "cJSON_ReplaceItemViaPointer"
??cJSON_ReplaceItemViaPointer?relay SYMBOL "?relay", cJSON_ReplaceItemViaPointer
cJSON_SetNumberHelper SYMBOL "cJSON_SetNumberHelper"
??cJSON_SetNumberHelper?relay SYMBOL "?relay", cJSON_SetNumberHelper
cJSON_SetValuestring SYMBOL "cJSON_SetValuestring"
??cJSON_SetValuestring?relay SYMBOL "?relay", cJSON_SetValuestring
cJSON_Version       SYMBOL "cJSON_Version"
??cJSON_Version?relay SYMBOL "?relay", cJSON_Version
cJSON_free          SYMBOL "cJSON_free"
??cJSON_free?relay  SYMBOL "?relay", cJSON_free
cJSON_malloc        SYMBOL "cJSON_malloc"
??cJSON_malloc?relay SYMBOL "?relay", cJSON_malloc
free                SYMBOL "free"
??free?relay        SYMBOL "?relay", free
malloc              SYMBOL "malloc"
??malloc?relay      SYMBOL "?relay", malloc
realloc             SYMBOL "realloc"
??realloc?relay     SYMBOL "?relay", realloc

        EXTERN __xdata_malloc
        FUNCTION __xdata_malloc,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN __xdata_realloc
        FUNCTION __xdata_realloc,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN __xdata_free
        FUNCTION __xdata_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sprintf
        FUNCTION sprintf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strlen
        FUNCTION strlen,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memcpy
        FUNCTION memcpy,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN memset
        FUNCTION memset,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strtod
        FUNCTION strtod,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strcpy
        FUNCTION strcpy,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sscanf
        FUNCTION sscanf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strncmp
        FUNCTION strncmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN strcmp
        FUNCTION strcmp,010202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??__xdata_free?relay
        FUNCTION ??__xdata_free?relay,00H
        EXTERN ??__xdata_malloc?relay
        FUNCTION ??__xdata_malloc?relay,00H
        EXTERN ??__xdata_realloc?relay
        FUNCTION ??__xdata_realloc?relay,00H
        EXTERN ??memcpy?relay
        FUNCTION ??memcpy?relay,00H
        EXTERN ??memset?relay
        FUNCTION ??memset?relay,00H
        EXTERN ??sprintf?relay
        FUNCTION ??sprintf?relay,00H
        EXTERN ??sscanf?relay
        FUNCTION ??sscanf?relay,00H
        EXTERN ??strcmp?relay
        FUNCTION ??strcmp?relay,00H
        EXTERN ??strcpy?relay
        FUNCTION ??strcpy?relay,00H
        EXTERN ??strlen?relay
        FUNCTION ??strlen?relay,00H
        EXTERN ??strncmp?relay
        FUNCTION ??strncmp?relay,00H
        EXTERN ??strtod?relay
        FUNCTION ??strtod?relay,00H
        EXTERN _Small_Ctype

// D:\developer_tool_install\IAR\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\SMGW\Source\cJSON.c
//    1 /*
//    2   Copyright (c) 2009-2017 Dave Gamble and cJSON contributors
//    3 
//    4   Permission is hereby granted, free of charge, to any person obtaining a copy
//    5   of this software and associated documentation files (the "Software"), to deal
//    6   in the Software without restriction, including without limitation the rights
//    7   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//    8   copies of the Software, and to permit persons to whom the Software is
//    9   furnished to do so, subject to the following conditions:
//   10 
//   11   The above copyright notice and this permission notice shall be included in
//   12   all copies or substantial portions of the Software.
//   13 
//   14   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//   15   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//   16   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//   17   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//   18   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//   19   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//   20   THE SOFTWARE.
//   21 */
//   22 
//   23 /* cJSON */
//   24 /* JSON parser in C. */
//   25 
//   26 /* disable warnings about old C89 functions in MSVC */
//   27 #if !defined(_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER)
//   28 #define _CRT_SECURE_NO_DEPRECATE
//   29 #endif
//   30 
//   31 #ifdef __GNUC__
//   32 #pragma GCC visibility push(default)
//   33 #endif
//   34 #if defined(_MSC_VER)
//   35 #pragma warning (push)
//   36 /* disable warning about single line comments in system headers */
//   37 #pragma warning (disable : 4001)
//   38 #endif
//   39 
//   40 #include <string.h>
//   41 #include <stdio.h>
//   42 #include <math.h>
//   43 #include <stdlib.h>

        RSEG BANKED_CODE:CODE:NOROOT(0)
// __banked_func __xdata_reentrant void *malloc(size_t)
malloc:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function malloc
        CODE
        FUNCALL malloc, __xdata_malloc
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function __xdata_malloc
        LCALL   ??__xdata_malloc?relay
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock0

        RSEG BANKED_CODE:CODE:NOROOT(0)
// __banked_func __xdata_reentrant void *realloc(void *, size_t)
realloc:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function realloc
        CODE
        FUNCALL realloc, __xdata_realloc
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function __xdata_realloc
        LCALL   ??__xdata_realloc?relay
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:CODE:NOROOT(0)
// __banked_func __xdata_reentrant void free(void *)
free:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function free
        CODE
        FUNCALL free, __xdata_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function __xdata_free
        LCALL   ??__xdata_free?relay
        POP     DPH
        CFI DPH0 SameValue
        CFI CFA_SP SP+-4
        POP     DPL
        CFI DPL0 SameValue
        CFI CFA_SP SP+-3
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//   44 #include <limits.h>
//   45 #include <ctype.h>
//   46 #include <float.h>
//   47 
//   48 #ifdef ENABLE_LOCALES
//   49 #include <locale.h>
//   50 #endif
//   51 
//   52 #if defined(_MSC_VER)
//   53 #pragma warning (pop)
//   54 #endif
//   55 #ifdef __GNUC__
//   56 #pragma GCC visibility pop
//   57 #endif
//   58 
//   59 #include "cJSON.h"
//   60 
//   61 /* define our own boolean type */
//   62 #ifdef true
//   63 #undef true
//   64 #endif
//   65 #define true ((cJSON_bool)1)
//   66 
//   67 #ifdef false
//   68 #undef false
//   69 #endif
//   70 #define false ((cJSON_bool)0)
//   71 
//   72 /* define isnan and isinf for ANSI C, if in C99 or above, isnan and isinf has been defined in math.h */
//   73 #ifndef isinf
//   74 #define isinf(d) (isnan((d - d)) && !isnan(d))
//   75 #endif
//   76 #ifndef isnan
//   77 #define isnan(d) (d != d)
//   78 #endif
//   79 
//   80 #ifndef NAN
//   81 #ifdef _WIN32
//   82 #define NAN sqrt(-1.0)
//   83 #else
//   84 #define NAN 0.0/0.0
//   85 #endif
//   86 #endif
//   87 
//   88 typedef struct {
//   89     const unsigned char *json;
//   90     size_t position;
//   91 } error;

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   92 static error global_error = { NULL, 0 };
global_error:
        DS 4
        REQUIRE __INIT_XDATA_Z
//   93 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   94 CJSON_PUBLIC(const char *) cJSON_GetErrorPtr(void)
cJSON_GetErrorPtr:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function cJSON_GetErrorPtr
        CODE
//   95 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   96     return (const char*) (global_error.json + global_error.position);
        MOV     DPTR,#global_error + 2
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_608:
        MOV     DPTR,#global_error
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV     R3,A
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock3
//   97 }
//   98 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   99 CJSON_PUBLIC(char *) cJSON_GetStringValue(const cJSON * const item) 
cJSON_GetStringValue:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function cJSON_GetStringValue
        CODE
//  100 {
        FUNCALL cJSON_GetStringValue, cJSON_IsString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  101     if (!cJSON_IsString(item)) 
        ; Setup parameters for call to function cJSON_IsString
        LCALL   ??cJSON_IsString?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??cJSON_GetStringValue_0
//  102     {
//  103         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??CrossCallReturnLabel_390
//  104     }
//  105 
//  106     return item->valuestring;
??cJSON_GetStringValue_0:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_390:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock4
//  107 }
//  108 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  109 CJSON_PUBLIC(double) cJSON_GetNumberValue(const cJSON * const item) 
cJSON_GetNumberValue:
        CFI Block cfiBlock5 Using cfiCommon0
        CFI Function cJSON_GetNumberValue
        CODE
//  110 {
        FUNCALL cJSON_GetNumberValue, cJSON_IsNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  111     if (!cJSON_IsNumber(item)) 
        ; Setup parameters for call to function cJSON_IsNumber
        LCALL   ??cJSON_IsNumber?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??cJSON_GetNumberValue_0
//  112     {
//  113         return (double) NAN;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        MOV     DPTR,#__Constant_0
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        SJMP    ??cJSON_GetNumberValue_1
//  114     }
//  115 
//  116     return item->valuedouble;
??cJSON_GetNumberValue_0:
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_135:
        LCALL   ?XLOAD_R2345
??cJSON_GetNumberValue_1:
        LJMP    ??Subroutine151_0 & 0xFFFF
        CFI EndBlock cfiBlock5
//  117 }
//  118 
//  119 /* This is a safeguard to prevent copy-pasters from using incompatible C and header files */
//  120 #if (CJSON_VERSION_MAJOR != 1) || (CJSON_VERSION_MINOR != 7) || (CJSON_VERSION_PATCH != 15)
//  121     #error cJSON.h and cJSON.c have different versions. Make sure that both have the same.
//  122 #endif
//  123 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  124 CJSON_PUBLIC(const char*) cJSON_Version(void)
cJSON_Version:
        CFI Block cfiBlock6 Using cfiCommon0
        CFI Function cJSON_Version
        CODE
//  125 {
        FUNCALL cJSON_Version, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  126     static char version[15];
//  127     sprintf(version, "%i.%i.%i", CJSON_VERSION_MAJOR, CJSON_VERSION_MINOR, CJSON_VERSION_PATCH);
        ; Setup parameters for call to function sprintf
        MOV     ?V0 + 0,#0xf
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,#0x7
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x1
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     R4,#`?<Constant "%i.%i.%i">` & 0xff
        MOV     R5,#(`?<Constant "%i.%i.%i">` >> 8) & 0xff
        MOV     R2,#??version & 0xff
        MOV     R3,#(??version >> 8) & 0xff
        LCALL   ??sprintf?relay
        MOV     A,#0x6
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  128 
//  129     return version;
        MOV     R2,#??version & 0xff
        MOV     R3,#(??version >> 8) & 0xff
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock6
//  130 }

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
??version:
        DS 15
        REQUIRE __INIT_XDATA_Z
//  131 
//  132 /* Case insensitive string comparison, doesn't consider two NULL pointers equal though */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  133 static int case_insensitive_strcmp(const unsigned char *string1, const unsigned char *string2)
case_insensitive_strcmp:
        CFI Block cfiBlock7 Using cfiCommon0
        CFI Function case_insensitive_strcmp
        CODE
//  134 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//  135     if ((string1 == NULL) || (string2 == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??case_insensitive_strcmp_0
        MOV     A,R4
        ORL     A,R5
        JNZ     ??case_insensitive_strcmp_1
//  136     {
//  137         return 1;
??case_insensitive_strcmp_0:
        MOV     R2,#0x1
??case_insensitive_strcmp_2:
        MOV     R3,#0x0
        SJMP    ??case_insensitive_strcmp_3
//  138     }
//  139 
//  140     if (string1 == string2)
??case_insensitive_strcmp_1:
        MOV     A,R4
        XRL     A,R2
        JNZ     ??case_insensitive_strcmp_4
        MOV     A,R5
        XRL     A,R3
??case_insensitive_strcmp_4:
        JNZ     ??case_insensitive_strcmp_5
//  141     {
//  142         return 0;
??case_insensitive_strcmp_6:
        MOV     R2,#0x0
        SJMP    ??case_insensitive_strcmp_2
//  143     }
//  144 
//  145     for(; tolower(*string1) == tolower(*string2); (void)string1++, string2++)
//  146     {
//  147         if (*string1 == '\0')
??case_insensitive_strcmp_7:
        MOVX    A,@DPTR
        JZ      ??case_insensitive_strcmp_6
//  148         {
//  149             return 0;
//  150         }
//  151     }
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        MOV     R4,DPL
        MOV     R5,DPH
??case_insensitive_strcmp_5:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_5:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        JNC     ??case_insensitive_strcmp_8
        ORL     A,#0x20
??case_insensitive_strcmp_8:
        MOV     R6,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_6:
        JNC     ??case_insensitive_strcmp_9
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ORL     A,#0x20
        MOV     R0,A
??case_insensitive_strcmp_9:
        MOV     A,R0
        XRL     A,R6
        MOV     DPL,R2
        MOV     DPH,R3
        JZ      ??case_insensitive_strcmp_7
//  152 
//  153     return tolower(*string1) - tolower(*string2);
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_7:
        JNC     ??case_insensitive_strcmp_10
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ORL     A,#0x20
        MOV     R0,A
??case_insensitive_strcmp_10:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,#(_Small_Ctype + 1) & 0xff
        ADD     A,R2
        MOV     DPL,A
        MOV     A,#((_Small_Ctype + 1) >> 8) & 0xff
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_344:
        CLR     A
        MOVC    A,@A+DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??case_insensitive_strcmp_11
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ORL     A,#0x20
        MOV     R2,A
??case_insensitive_strcmp_11:
        MOV     A,R0
        CLR     C
        SUBB    A,R2
        MOV     R2,A
        SUBB    A,0xE0 /* A   */
        MOV     R3,A
??case_insensitive_strcmp_3:
        LJMP    ??Subroutine186_0 & 0xFFFF
        CFI EndBlock cfiBlock7
//  154 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
        CFI Block cfiCond8 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_5
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond9 Using cfiCommon0
        CFI (cfiCond9) NoFunction
        CFI (cfiCond9) Conditional ??CrossCallReturnLabel_6
        CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond9) CFA_SP SP+0
        CFI (cfiCond9) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond10 Using cfiCommon0
        CFI (cfiCond10) NoFunction
        CFI (cfiCond10) Conditional ??CrossCallReturnLabel_7
        CFI (cfiCond10) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond10) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond10) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond10) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond10) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond10) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond10) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond10) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond10) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond10) CFA_SP SP+0
        CFI (cfiCond10) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker11 Using cfiCommon1
        CFI (cfiPicker11) NoFunction
        CFI (cfiPicker11) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#(_Small_Ctype + 1) & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#((_Small_Ctype + 1) >> 8) & 0xff
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_644:
        CLR     A
        MOVC    A,@A+DPTR
        MOV     C,0xE0 /* A   */.0
        RET
        CFI EndBlock cfiCond8
        CFI EndBlock cfiCond9
        CFI EndBlock cfiCond10
        CFI EndBlock cfiPicker11
//  155 
//  156 typedef struct internal_hooks
//  157 {
//  158     void *(CJSON_CDECL *allocate)(size_t size);
//  159     void (CJSON_CDECL *deallocate)(void *pointer);
//  160     void *(CJSON_CDECL *reallocate)(void *pointer, size_t size);
//  161 } internal_hooks;
//  162 
//  163 #if defined(_MSC_VER)
//  164 /* work around MSVC error C2322: '...' address of dllimport '...' is not static */
//  165 static void * CJSON_CDECL internal_malloc(size_t size)
//  166 {
//  167     return malloc(size);
//  168 }
//  169 static void CJSON_CDECL internal_free(void *pointer)
//  170 {
//  171     free(pointer);
//  172 }
//  173 static void * CJSON_CDECL internal_realloc(void *pointer, size_t size)
//  174 {
//  175     return realloc(pointer, size);
//  176 }
//  177 #else
//  178 #define internal_malloc malloc
//  179 #define internal_free free
//  180 #define internal_realloc realloc
//  181 #endif
//  182 
//  183 /* strlen of character literals resolved at compile time */
//  184 #define static_strlen(string_literal) (sizeof(string_literal) - sizeof(""))
//  185 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  186 static internal_hooks global_hooks = { internal_malloc, internal_free, internal_realloc };
global_hooks:
        DATA8
        DS 6
        REQUIRE `?<Initializer for global_hooks>`
        REQUIRE __INIT_XDATA_I
//  187 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  188 static unsigned char* cJSON_strdup(const unsigned char* string, const internal_hooks * const hooks)
cJSON_strdup:
        CFI Block cfiBlock12 Using cfiCommon0
        CFI Function cJSON_strdup
        CODE
//  189 {
        FUNCALL cJSON_strdup, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_strdup, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
//  190     size_t length = 0;
//  191     unsigned char *copy = NULL;
//  192 
//  193     if (string == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??cJSON_strdup_0
//  194     {
//  195         return NULL;
??cJSON_strdup_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_strdup_2
//  196     }
//  197 
//  198     length = strlen((const char*)string) + sizeof("");
??cJSON_strdup_0:
        ; Setup parameters for call to function strlen
        LCALL   ??strlen?relay
        LCALL   ?Subroutine90 & 0xFFFF
//  199     copy = (unsigned char*)hooks->allocate(length);
??CrossCallReturnLabel_145:
        ; Setup parameters for indirect call
        INC     R2
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL   ?CALL_IND
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  200     if (copy == NULL)
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??cJSON_strdup_1
//  201     {
//  202         return NULL;
//  203     }
//  204     memcpy(copy, string, length);
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_280:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
//  205 
//  206     return copy;
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??cJSON_strdup_2:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock12
//  207 }
//  208 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  209 CJSON_PUBLIC(void) cJSON_InitHooks(cJSON_Hooks* hooks)
cJSON_InitHooks:
        CFI Block cfiBlock13 Using cfiCommon0
        CFI Function cJSON_InitHooks
        CODE
//  210 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  211     if (hooks == NULL)
        MOV     A,R2
        ORL     A,R3
        MOV     DPTR,#global_hooks
        JNZ     ??cJSON_InitHooks_0
//  212     {
//  213         /* Reset hooks */
//  214         global_hooks.allocate = malloc;
        MOV     A,#??malloc?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??malloc?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  215         global_hooks.deallocate = free;
        INC     DPTR
        MOV     A,#??free?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??free?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  216         global_hooks.reallocate = realloc;
        INC     DPTR
        SJMP    ??cJSON_InitHooks_1
//  217         return;
//  218     }
//  219 
//  220     global_hooks.allocate = malloc;
??cJSON_InitHooks_0:
        MOV     A,#??malloc?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??malloc?relay >> 8) & 0xff
        LCALL   ?Subroutine102 & 0xFFFF
//  221     if (hooks->malloc_fn != NULL)
??CrossCallReturnLabel_159:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_442:
        JZ      ??CrossCallReturnLabel_414
//  222     {
//  223         global_hooks.allocate = hooks->malloc_fn;
        MOV     DPTR,#global_hooks
        LCALL   ??Subroutine195_0 & 0xFFFF
//  224     }
//  225 
//  226     global_hooks.deallocate = free;
??CrossCallReturnLabel_414:
        MOV     DPTR,#global_hooks + 2
        MOV     A,#??free?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??free?relay >> 8) & 0xff
        LCALL   ?Subroutine102 & 0xFFFF
//  227     if (hooks->free_fn != NULL)
??CrossCallReturnLabel_160:
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_470:
        JZ      ??CrossCallReturnLabel_415
//  228     {
//  229         global_hooks.deallocate = hooks->free_fn;
        MOV     DPTR,#global_hooks + 2
        LCALL   ??Subroutine195_0 & 0xFFFF
//  230     }
//  231 
//  232     /* use realloc only if both free and malloc are used */
//  233     global_hooks.reallocate = NULL;
??CrossCallReturnLabel_415:
        MOV     DPTR,#global_hooks + 4
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  234     if ((global_hooks.allocate == malloc) && (global_hooks.deallocate == free))
        MOV     DPTR,#global_hooks
        MOVX    A,@DPTR
        XRL     A,#??malloc?relay & 0xff
        JNZ     ??cJSON_InitHooks_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#(??malloc?relay >> 8) & 0xff
??cJSON_InitHooks_2:
        JNZ     ??cJSON_InitHooks_3
        MOV     DPTR,#global_hooks + 2
        MOVX    A,@DPTR
        XRL     A,#??free?relay & 0xff
        JNZ     ??cJSON_InitHooks_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#(??free?relay >> 8) & 0xff
??cJSON_InitHooks_4:
        JNZ     ??cJSON_InitHooks_3
//  235     {
//  236         global_hooks.reallocate = realloc;
        MOV     DPTR,#global_hooks + 4
??cJSON_InitHooks_1:
        MOV     A,#??realloc?relay & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(??realloc?relay >> 8) & 0xff
        MOVX    @DPTR,A
//  237     }
??cJSON_InitHooks_3:
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock13
//  238 }
//  239 
//  240 /* Internal constructor. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  241 static cJSON *cJSON_New_Item(const internal_hooks * const hooks)
cJSON_New_Item:
        CFI Block cfiBlock14 Using cfiCommon0
        CFI Function cJSON_New_Item
        CODE
//  242 {
        FUNCALL cJSON_New_Item, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     DPL,R2
        MOV     DPH,R3
//  243     cJSON* node = (cJSON*)hooks->allocate(sizeof(cJSON));
        ; Setup parameters for indirect call
        MOV     R2,#0x12
        MOV     R3,#0x0
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL   ?CALL_IND
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  244     if (node)
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_New_Item_0
//  245     {
//  246         memset(node, '\0', sizeof(cJSON));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0x12
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//  247     }
//  248 
//  249     return node;
??cJSON_New_Item_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock14
//  250 }
//  251 
//  252 /* Delete a cJSON structure. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  253 CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
cJSON_Delete:
        CFI Block cfiBlock15 Using cfiCommon0
        CFI Function cJSON_Delete
        CODE
//  254 {
        FUNCALL cJSON_Delete, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  255     cJSON *next = NULL;
        LJMP    ??cJSON_Delete_0 & 0xFFFF
//  256     while (item != NULL)
//  257     {
//  258         next = item->next;
??cJSON_Delete_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine38 & 0xFFFF
//  259         if (!(item->type & cJSON_IsReference) && (item->child != NULL))
??CrossCallReturnLabel_54:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        JNZ     ??cJSON_Delete_2
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_472:
        JZ      ??cJSON_Delete_2
//  260         {
//  261             cJSON_Delete(item->child);
        ; Setup parameters for call to function cJSON_Delete
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine187_0 & 0xFFFF
//  262         }
??CrossCallReturnLabel_388:
        LCALL   ??cJSON_Delete?relay
//  263         if (!(item->type & cJSON_IsReference) && (item->valuestring != NULL))
??cJSON_Delete_2:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        JNZ     ??cJSON_Delete_3
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_480:
        JZ      ??cJSON_Delete_3
//  264         {
//  265             global_hooks.deallocate(item->valuestring);
        ; Setup parameters for indirect call
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine23 & 0xFFFF
//  266         }
??CrossCallReturnLabel_23:
        LCALL   ?CALL_IND
//  267         if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
??cJSON_Delete_3:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??cJSON_Delete_4
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_641:
        MOV     A,R7
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_345:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_443:
        JZ      ??cJSON_Delete_4
//  268         {
//  269             global_hooks.deallocate(item->string);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine144 & 0xFFFF
//  270         }
??CrossCallReturnLabel_642:
        MOV     A,R7
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_346:
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL   ?CALL_IND
//  271         global_hooks.deallocate(item);
??cJSON_Delete_4:
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPTR,#global_hooks + 2
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_251:
        LCALL   ?CALL_IND
//  272         item = next;
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
//  273     }
??cJSON_Delete_0:
        MOV     A,R6
        ORL     A,R7
        JZ      $+5
        LJMP    ??cJSON_Delete_1 & 0xFFFF
//  274 }
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock15
//  275 
//  276 /* get the decimal point character of the current locale */
//  277 static unsigned char get_decimal_point(void)
//  278 {
//  279 #ifdef ENABLE_LOCALES
//  280     struct lconv *lconv = localeconv();
//  281     return (unsigned char) lconv->decimal_point[0];
//  282 #else
//  283     return '.';
//  284 #endif
//  285 }
//  286 
//  287 typedef struct
//  288 {
//  289     const unsigned char *content;
//  290     size_t length;
//  291     size_t offset;
//  292     size_t depth; /* How deeply nested (in arrays/objects) is the input at the current offset. */
//  293     internal_hooks hooks;
//  294 } parse_buffer;
//  295 
//  296 /* check if the given size is left to read in a given parse buffer (starting with 1) */
//  297 #define can_read(buffer, size) ((buffer != NULL) && (((buffer)->offset + size) <= (buffer)->length))
//  298 /* check if the buffer can be accessed at the given index (starting with 0) */
//  299 #define can_access_at_index(buffer, index) ((buffer != NULL) && (((buffer)->offset + index) < (buffer)->length))
//  300 #define cannot_access_at_index(buffer, index) (!can_access_at_index(buffer, index))
//  301 /* get a pointer to the buffer at the position */
//  302 #define buffer_at_offset(buffer) ((buffer)->content + (buffer)->offset)
//  303 
//  304 /* Parse the input text to generate a number, and populate the result into item. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  305 static cJSON_bool parse_number(cJSON * const item, parse_buffer * const input_buffer)
parse_number:
        CFI Block cfiBlock16 Using cfiCommon0
        CFI Function parse_number
        CODE
//  306 {
        FUNCALL parse_number, strtod
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 86, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 86, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 66
        MOV     A,#-0x42
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 86)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  307     double number = 0;
//  308     unsigned char *after_end = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  309     unsigned char number_c_string[64];
//  310     unsigned char decimal_point = get_decimal_point();
//  311     size_t i = 0;
//  312 
//  313     if ((input_buffer == NULL) || (input_buffer->content == NULL))
        MOV     A,R6
        ORL     A,R7
        JZ      ??parse_number_0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_444:
        JNZ     ??parse_number_1
//  314     {
//  315         return false;
??parse_number_0:
        MOV     R2,#0x0
        LJMP    ??parse_number_2 & 0xFFFF
//  316     }
//  317 
//  318     /* copy the number into a temporary buffer and replace '.' with the decimal point
//  319      * of the current locale (for strtod)
//  320      * This also takes care of '\0' not necessarily being available for marking the end of the input */
//  321     for (i = 0; (i < (sizeof(number_c_string) - 1)) && can_access_at_index(input_buffer, i); i++)
??parse_number_1:
        MOV     R0,#0x0
        MOV     R1,#0x0
??parse_number_3:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine179_0 & 0xFFFF
??CrossCallReturnLabel_361:
        JNC     ??parse_number_4
//  322     {
//  323         switch (buffer_at_offset(input_buffer)[i])
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL   ?UC_SWITCH_SPARSE
`?<Jumptable for parse_number>_0`:
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        1
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        48
        DATA
        DATA8
        DATA
        DATA8
        DB        57
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        43
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        45
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        46
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_6
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        69
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA8
        DATA
        DATA8
        DATA
        DATA8
        DB        101
        DATA
        DATA16
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_5
        DATA
        DATA16
        DATA
        DATA16
        DW        ??parse_number_4
        CODE
//  324         {
//  325             case '0':
//  326             case '1':
//  327             case '2':
//  328             case '3':
//  329             case '4':
//  330             case '5':
//  331             case '6':
//  332             case '7':
//  333             case '8':
//  334             case '9':
//  335             case '+':
//  336             case '-':
//  337             case 'e':
//  338             case 'E':
//  339                 number_c_string[i] = buffer_at_offset(input_buffer)[i];
??parse_number_5:
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_27:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_120:
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??parse_number_7
//  340                 break;
//  341 
//  342             case '.':
//  343                 number_c_string[i] = decimal_point;
??parse_number_6:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine78 & 0xFFFF
//  344                 break;
//  345 
//  346             default:
//  347                 goto loop_end;
//  348         }
//  349     }
??CrossCallReturnLabel_121:
        MOV     A,#0x2e
??parse_number_7:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_223:
        CLR     C
        MOV     A,R0
        SUBB    A,#0x3f
        MOV     A,R1
        SUBB    A,#0x0
        JC      ??parse_number_3
//  350 loop_end:
//  351     number_c_string[i] = '\0';
??parse_number_4:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_122:
        CLR     A
        LCALL   ??Subroutine165_0 & 0xFFFF
//  352 
//  353     number = strtod((const char*)number_c_string, (char**)&after_end);
??CrossCallReturnLabel_286:
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??strtod?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
//  354     if (number_c_string == after_end)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_609:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     A,DPL
        XRL     A,R0
        JNZ     ??parse_number_8
        MOV     A,DPH
        XRL     A,R1
??parse_number_8:
        JNZ     $+5
        LJMP    ??parse_number_0 & 0xFFFF
//  355     {
//  356         return false; /* parse_error */
//  357     }
//  358 
//  359     item->valuedouble = number;
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_132:
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
//  360 
//  361     /* use saturation in case of overflow */
//  362     if (number >= INT_MAX)
        MOV     DPTR,#__Constant_46fffe00
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_GE
        JNC     ??parse_number_9
//  363     {
//  364         item->valueint = INT_MAX;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7f
        SJMP    ??parse_number_10
//  365     }
//  366     else if (number <= (double)INT_MIN)
??parse_number_9:
        MOV     DPTR,#__Constant_c6fffffe
        MOV     R0,#?V0 + 8
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 8
        LCALL   ?FLT_LT
        JNC     ??parse_number_11
//  367     {
//  368         item->valueint = INT_MIN;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        SJMP    ??parse_number_10
//  369     }
//  370     else
//  371     {
//  372         item->valueint = (int)number;
??parse_number_11:
        MOV     R0,#?V0 + 4
        LCALL   ?FLT_TO_L
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
//  373     }
??parse_number_10:
        LCALL   ?Subroutine92 & 0xFFFF
//  374 
//  375     item->type = cJSON_Number;
??CrossCallReturnLabel_147:
        MOV     A,#0x8
        LCALL   ??Subroutine212_0 & 0xFFFF
//  376 
//  377     input_buffer->offset += (size_t)(after_end - number_c_string);
??CrossCallReturnLabel_543:
        MOV     A,R6
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_377:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R2
        CLR     C
        SUBB    A,DPL
        MOV     R2,A
        MOV     A,R3
        SUBB    A,DPH
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine219_0 & 0xFFFF
//  378     return true;
??CrossCallReturnLabel_570:
        MOV     R2,#0x1
??parse_number_2:
        MOV     R3,#0x0
        MOV     A,#0x42
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        LJMP    ?Subroutine5 & 0xFFFF
        CFI EndBlock cfiBlock16
//  379 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
        CFI Block cfiCond17 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_223
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond18 Using cfiCommon0
        CFI (cfiCond18) NoFunction
        CFI (cfiCond18) Conditional ??CrossCallReturnLabel_224
        CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond18) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond18) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond18) CFA_SP SP+0
        CFI (cfiCond18) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiPicker19 Using cfiCommon1
        CFI (cfiPicker19) NoFunction
        CFI (cfiPicker19) Picker
        MOVX    @DPTR,A
        CFI EndBlock cfiCond17
        CFI EndBlock cfiCond18
        CFI EndBlock cfiPicker19
        REQUIRE ??Subroutine150_0
        ; // Fall through to label ??Subroutine150_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine150_0:
        CFI Block cfiCond20 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_225
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond21 Using cfiCommon0
        CFI (cfiCond21) NoFunction
        CFI (cfiCond21) Conditional ??CrossCallReturnLabel_226
        CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond21) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond21) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond21) CFA_SP SP+0
        CFI (cfiCond21) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond22 Using cfiCommon0
        CFI (cfiCond22) NoFunction
        CFI (cfiCond22) Conditional ??CrossCallReturnLabel_223
        CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond22) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond22) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond22) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond22) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond22) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond22) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond22) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond22) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond22) CFA_SP SP+0
        CFI (cfiCond22) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond23 Using cfiCommon0
        CFI (cfiCond23) NoFunction
        CFI (cfiCond23) Conditional ??CrossCallReturnLabel_224
        CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond23) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond23) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond23) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond23) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond23) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond23) CFA_SP SP+0
        CFI (cfiCond23) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiPicker24 Using cfiCommon1
        CFI (cfiPicker24) NoFunction
        CFI (cfiPicker24) Picker
        MOV     A,R0
        ADD     A,#0x1
        INC     R0
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond20
        CFI EndBlock cfiCond21
        CFI EndBlock cfiCond22
        CFI EndBlock cfiCond23
        CFI EndBlock cfiPicker24

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
        CFI Block cfiCond25 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_120
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond26 Using cfiCommon0
        CFI (cfiCond26) NoFunction
        CFI (cfiCond26) Conditional ??CrossCallReturnLabel_121
        CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond26) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond26) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond26) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond26) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond26) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond26) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond26) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond26) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond26) CFA_SP SP+0
        CFI (cfiCond26) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond27 Using cfiCommon0
        CFI (cfiCond27) NoFunction
        CFI (cfiCond27) Conditional ??CrossCallReturnLabel_122
        CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond27) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond27) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond27) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond27) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond27) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond27) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond27) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond27) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond27) CFA_SP SP+0
        CFI (cfiCond27) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiPicker28 Using cfiCommon1
        CFI (cfiPicker28) NoFunction
        CFI (cfiPicker28) Picker
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_214:
        RET
        CFI EndBlock cfiCond25
        CFI EndBlock cfiCond26
        CFI EndBlock cfiCond27
        CFI EndBlock cfiPicker28

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
        CFI Block cfiCond29 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_120
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond30 Using cfiCommon0
        CFI (cfiCond30) NoFunction
        CFI (cfiCond30) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_121
        CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond30) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond30) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond30) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond30) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond30) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond30) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond30) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond30) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond30) CFA_SP SP+0
        CFI (cfiCond30) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond31 Using cfiCommon0
        CFI (cfiCond31) NoFunction
        CFI (cfiCond31) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_122
        CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond31) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond31) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond31) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond31) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond31) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond31) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond31) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond31) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond31) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond31) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond31) CFA_SP SP+0
        CFI (cfiCond31) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond32 Using cfiCommon0
        CFI (cfiCond32) NoFunction
        CFI (cfiCond32) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_118
        CFI (cfiCond32) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond32) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond32) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond32) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond32) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond32) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond32) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond32) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond32) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond32) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond32) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond32) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond32) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond32) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond32) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond32) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond32) CFA_SP SP+0
        CFI (cfiCond32) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond33 Using cfiCommon0
        CFI (cfiCond33) NoFunction
        CFI (cfiCond33) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_119
        CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond33) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond33) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond33) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond33) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond33) CFA_SP SP+0
        CFI (cfiCond33) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiPicker34 Using cfiCommon1
        CFI (cfiPicker34) NoFunction
        CFI (cfiPicker34) Picker
        MOV     A,DPL
        ADD     A,R0
        MOV     DPL,A
        MOV     A,DPH
        ADDC    A,R1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond29
        CFI EndBlock cfiCond30
        CFI EndBlock cfiCond31
        CFI EndBlock cfiCond32
        CFI EndBlock cfiCond33
        CFI EndBlock cfiPicker34

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
        CFI Block cfiCond35 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond36 Using cfiCommon0
        CFI (cfiCond36) NoFunction
        CFI (cfiCond36) Conditional ??CrossCallReturnLabel_27
        CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond36) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond36) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond36) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond36) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond36) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond36) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond36) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond36) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond36) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond36) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond36) CFA_SP SP+0
        CFI (cfiCond36) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiPicker37 Using cfiCommon1
        CFI (cfiPicker37) NoFunction
        CFI (cfiPicker37) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_540:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond35
        CFI EndBlock cfiCond36
        CFI EndBlock cfiPicker37

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
        CFI Block cfiCond38 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_208
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond39 Using cfiCommon0
        CFI (cfiCond39) NoFunction
        CFI (cfiCond39) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_26
        CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond39) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond39) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond39) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond39) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond39) CFA_SP SP+0
        CFI (cfiCond39) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond40 Using cfiCommon0
        CFI (cfiCond40) NoFunction
        CFI (cfiCond40) Conditional ??CrossCallReturnLabel_210, ??CrossCallReturnLabel_27
        CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond40) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond40) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond40) CFA_SP SP+0
        CFI (cfiCond40) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond41 Using cfiCommon0
        CFI (cfiCond41) NoFunction
        CFI (cfiCond41) Conditional ??CrossCallReturnLabel_209
        CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond41) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond41) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond41) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond41) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond41) CFA_SP SP+0
        CFI (cfiCond41) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker42 Using cfiCommon1
        CFI (cfiPicker42) NoFunction
        CFI (cfiPicker42) Picker
        MOVX    A,@DPTR
        ADD     A,R2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R3
        MOV     R3,A
        RET
        CFI EndBlock cfiCond38
        CFI EndBlock cfiCond39
        CFI EndBlock cfiCond40
        CFI EndBlock cfiCond41
        CFI EndBlock cfiPicker42
//  380 
//  381 /* don't ask me, but the original cJSON_SetNumberValue returns an integer or double */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  382 CJSON_PUBLIC(double) cJSON_SetNumberHelper(cJSON *object, double number)
cJSON_SetNumberHelper:
        CFI Block cfiBlock43 Using cfiCommon0
        CFI Function cJSON_SetNumberHelper
        CODE
//  383 {
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  384     if (number >= INT_MAX)
        MOV     DPTR,#__Constant_46fffe00
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JNC     ??cJSON_SetNumberHelper_0
//  385     {
//  386         object->valueint = INT_MAX;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7f
        SJMP    ??cJSON_SetNumberHelper_1
//  387     }
//  388     else if (number <= (double)INT_MIN)
??cJSON_SetNumberHelper_0:
        MOV     DPTR,#__Constant_c6fffffe
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_LT
        JNC     ??cJSON_SetNumberHelper_2
//  389     {
//  390         object->valueint = INT_MIN;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        SJMP    ??cJSON_SetNumberHelper_1
//  391     }
//  392     else
//  393     {
//  394         object->valueint = (int)number;
??cJSON_SetNumberHelper_2:
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
??cJSON_SetNumberHelper_1:
        MOVX    @DPTR,A
//  395     }
//  396 
//  397     return object->valuedouble = number;
        MOV     A,R2
        ADD     A,#0xc
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?XLOAD_R2345
        SJMP    ??Subroutine151_0
        CFI EndBlock cfiBlock43
//  398 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
        CFI Block cfiBlock44 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock44
        REQUIRE ??Subroutine151_0
        ; // Fall through to label ??Subroutine151_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine151_0:
        CFI Block cfiBlock45 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock45
//  399 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  400 CJSON_PUBLIC(char*) cJSON_SetValuestring(cJSON *object, const char *valuestring)
cJSON_SetValuestring:
        CFI Block cfiBlock46 Using cfiCommon0
        CFI Function cJSON_SetValuestring
        CODE
//  401 {
        FUNCALL cJSON_SetValuestring, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_SetValuestring, cJSON_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  402     char *copy = NULL;
//  403     /* if object's type is not cJSON_String or is cJSON_IsReference, it should not set valuestring */
//  404     if (!(object->type & cJSON_String) || (object->type & cJSON_IsReference))
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x10
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x1
        MOV     R1,A
        MOV     A,#0x10
        XRL     A,R0
        JNZ     ??cJSON_SetValuestring_0
        MOV     A,R1
??cJSON_SetValuestring_0:
        JZ      ??cJSON_SetValuestring_1
//  405     {
//  406         return NULL;
??cJSON_SetValuestring_2:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??cJSON_SetValuestring_3 & 0xFFFF
//  407     }
//  408     if (strlen(valuestring) <= strlen(object->valuestring))
??cJSON_SetValuestring_1:
        ; Setup parameters for call to function strlen
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_95:
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        ; Setup parameters for call to function strlen
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??strlen?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        CLR     C
        MOV     A,?V0 + 2
        SUBB    A,?V0 + 4
        MOV     A,?V0 + 3
        SUBB    A,?V0 + 5
        JC      ??cJSON_SetValuestring_4
//  409     {
//  410         strcpy(object->valuestring, valuestring);
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_173:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        ; Setup parameters for call to function strcpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_378:
        LCALL   ??strcpy?relay
//  411         return object->valuestring;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??cJSON_SetValuestring_5
//  412     }
//  413     copy = (char*) cJSON_strdup((const unsigned char*)valuestring, &global_hooks);
??cJSON_SetValuestring_4:
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_strdup?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
//  414     if (copy == NULL)
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_SetValuestring_2
//  415     {
//  416         return NULL;
//  417     }
//  418     if (object->valuestring != NULL)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_481:
        JZ      ??CrossCallReturnLabel_97
//  419     {
//  420         cJSON_free(object->valuestring);
        ; Setup parameters for call to function cJSON_free
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine64 & 0xFFFF
//  421     }
//  422     object->valuestring = copy;
??CrossCallReturnLabel_97:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
//  423 
//  424     return copy;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
??cJSON_SetValuestring_5:
        MOV     R3,A
??cJSON_SetValuestring_3:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock46
//  425 }
//  426 
//  427 typedef struct
//  428 {
//  429     unsigned char *buffer;
//  430     size_t length;
//  431     size_t offset;
//  432     size_t depth; /* current nesting depth (for formatted printing) */
//  433     cJSON_bool noalloc;
//  434     cJSON_bool format; /* is this print a formatted print */
//  435     internal_hooks hooks;
//  436 } printbuffer;
//  437 
//  438 /* realloc printbuffer if necessary to have at least "needed" bytes more */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  439 static unsigned char* ensure(printbuffer * const p, size_t needed)
ensure:
        CFI Block cfiBlock47 Using cfiCommon0
        CFI Function ensure
        CODE
//  440 {
        FUNCALL ensure, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  441     unsigned char *newbuffer = NULL;
//  442     size_t newsize = 0;
//  443 
//  444     if ((p == NULL) || (p->buffer == NULL))
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??ensure_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_445:
        JNZ     ??ensure_1
//  445     {
//  446         return NULL;
??ensure_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??ensure_2 & 0xFFFF
//  447     }
//  448 
//  449     if ((p->length > 0) && (p->offset >= p->length))
??ensure_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_471:
        JZ      ??ensure_3
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_8:
        JNC     ??ensure_0
//  450     {
//  451         /* make sure that offset is valid */
//  452         return NULL;
//  453     }
//  454 
//  455     if (needed > INT_MAX)
??ensure_3:
        CLR     C
        MOV     A,R5
        SUBB    A,#-0x80
        JNC     ??ensure_0
//  456     {
//  457         /* sizes bigger than INT_MAX are currently not supported */
//  458         return NULL;
//  459     }
//  460 
//  461     needed += p->offset + 1;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_39:
        MOV     A,R4
        ADD     A,R0
        MOV     R4,A
        MOV     A,R5
        ADDC    A,R1
        MOV     R5,A
//  462     if (needed <= p->length)
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R4
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R5
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        JC      ??ensure_4
//  463     {
//  464         return p->buffer + p->offset;
        DEC     R0
        LCALL   ?Subroutine51 & 0xFFFF
//  465     }
??CrossCallReturnLabel_77:
        LJMP    ??ensure_5 & 0xFFFF
//  466 
//  467     if (p->noalloc) {
??ensure_4:
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_473:
        JNZ     ??ensure_0
//  468         return NULL;
//  469     }
//  470 
//  471     /* calculate new buffer size */
//  472     if (needed > (INT_MAX / 2))
        CLR     C
        MOV     A,R5
        SUBB    A,#0x40
        JC      ??ensure_6
//  473     {
//  474         /* overflow of int, use INT_MAX if possible */
//  475         if (needed <= INT_MAX)
        CLR     C
        MOV     A,R5
        SUBB    A,#-0x80
        JNC     ??ensure_0
//  476         {
//  477             newsize = INT_MAX;
        MOV     R6,#-0x1
        MOV     R7,#0x7f
        SJMP    ??ensure_7
//  478         }
//  479         else
//  480         {
//  481             return NULL;
//  482         }
//  483     }
//  484     else
//  485     {
//  486         newsize = needed * 2;
??ensure_6:
        MOV     A,R4
        CLR     C
        RLC     A
        MOV     R4,A
        MOV     A,R5
        RLC     A
        MOV     R5,A
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  487     }
//  488 
//  489     if (p->hooks.reallocate != NULL)
??ensure_7:
        MOV     A,R2
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_636:
        MOV     A,R3
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_347:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_446:
        JZ      ??ensure_8
//  490     {
//  491         /* reallocate with realloc if available */
//  492         newbuffer = (unsigned char*)p->hooks.reallocate(p->buffer, newsize);
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_603:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  493         if (newbuffer == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??ensure_9
//  494         {
//  495             p->hooks.deallocate(p->buffer);
??ensure_10:
        ; Setup parameters for indirect call
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_28:
        LCALL   ?CALL_IND
//  496             p->length = 0;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine161_0 & 0xFFFF
//  497             p->buffer = NULL;
//  498 
//  499             return NULL;
//  500         }
//  501     }
??CrossCallReturnLabel_245:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        LJMP    ??ensure_0 & 0xFFFF
//  502     else
//  503     {
//  504         /* otherwise reallocate manually */
//  505         newbuffer = (unsigned char*)p->hooks.allocate(newsize);
??ensure_8:
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_133:
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_252:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  506         if (!newbuffer)
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??ensure_10
//  507         {
//  508             p->hooks.deallocate(p->buffer);
//  509             p->length = 0;
//  510             p->buffer = NULL;
//  511 
//  512             return NULL;
//  513         }
//  514         
//  515         memcpy(newbuffer, p->buffer, p->offset + 1);
        ; Setup parameters for call to function memcpy
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_49:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
//  516         p->hooks.deallocate(p->buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine26 & 0xFFFF
//  517     }
??CrossCallReturnLabel_29:
        LCALL   ?CALL_IND
//  518     p->length = newsize;
??ensure_9:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine96 & 0xFFFF
//  519     p->buffer = newbuffer;
??CrossCallReturnLabel_243:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ??Subroutine161_0 & 0xFFFF
//  520 
//  521     return newbuffer + p->offset;
??CrossCallReturnLabel_246:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_615:
        MOV     A,?V0 + 2
        ADD     A,R0
        MOV     R2,A
        MOV     A,?V0 + 3
??ensure_5:
        ADDC    A,R1
        MOV     R3,A
??ensure_2:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock47
//  522 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
        CFI Block cfiCond48 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_132
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond49 Using cfiCommon0
        CFI (cfiCond49) NoFunction
        CFI (cfiCond49) Conditional ??CrossCallReturnLabel_133
        CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond49) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond49) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond49) CFA_SP SP+0
        CFI (cfiCond49) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond50 Using cfiCommon0
        CFI (cfiCond50) NoFunction
        CFI (cfiCond50) Conditional ??CrossCallReturnLabel_134
        CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond50) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond50) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond50) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond50) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond50) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond50) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond50) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond50) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond50) CFA_SP SP+0
        CFI (cfiCond50) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker51 Using cfiCommon1
        CFI (cfiPicker51) NoFunction
        CFI (cfiPicker51) Picker
        MOV     A,?V0 + 0
        ADD     A,#0xc
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_649:
        RET
        CFI EndBlock cfiCond48
        CFI EndBlock cfiCond49
        CFI EndBlock cfiCond50
        CFI EndBlock cfiPicker51

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
        CFI Block cfiCond52 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond53 Using cfiCommon0
        CFI (cfiCond53) NoFunction
        CFI (cfiCond53) Conditional ??CrossCallReturnLabel_29
        CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond53) CFA_SP SP+0
        CFI (cfiCond53) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker54 Using cfiCommon1
        CFI (cfiPicker54) NoFunction
        CFI (cfiPicker54) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_532:
        MOV     A,?V0 + 0
        ADD     A,#0xe
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_647:
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_275:
        RET
        CFI EndBlock cfiCond52
        CFI EndBlock cfiCond53
        CFI EndBlock cfiPicker54
//  523 
//  524 /* calculate the new length of the string in a printbuffer and update the offset */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  525 static void update_offset(printbuffer * const buffer)
update_offset:
        CFI Block cfiBlock55 Using cfiCommon0
        CFI Function update_offset
        CODE
//  526 {
        FUNCALL update_offset, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  527     const unsigned char *buffer_pointer = NULL;
//  528     if ((buffer == NULL) || (buffer->buffer == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??update_offset_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_447:
        JZ      ??update_offset_0
//  529     {
//  530         return;
//  531     }
//  532     buffer_pointer = buffer->buffer + buffer->offset;
//  533 
//  534     buffer->offset += strlen((const char*)buffer_pointer);
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        ; Setup parameters for call to function strlen
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_78:
        ADDC    A,R1
        MOV     R3,A
        LCALL   ??strlen?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOVX    @DPTR,A
//  535 }
??update_offset_0:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock55

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
        CFI Block cfiCond56 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_77
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond57 Using cfiCommon0
        CFI (cfiCond57) NoFunction
        CFI (cfiCond57) Conditional ??CrossCallReturnLabel_78
        CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond57) CFA_SP SP+0
        CFI (cfiCond57) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker58 Using cfiCommon1
        CFI (cfiPicker58) NoFunction
        CFI (cfiPicker58) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond56
        CFI EndBlock cfiCond57
        CFI EndBlock cfiPicker58
//  536 
//  537 /* securely comparison of floating-point variables */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  538 static cJSON_bool compare_double(double a, double b)
compare_double:
        CFI Block cfiBlock59 Using cfiCommon0
        CFI Function compare_double
        CODE
//  539 {
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  540     double maxVal = fabs(a) > fabs(b) ? fabs(a) : fabs(b);
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 9,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 11,?V0 + 7
        MOV     A,?V0 + 11
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 11,A
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     ?V0 + 14,R4
        MOV     A,R5
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 15,A
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_LT
        JNC     ??compare_double_0
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 10,R4
        MOV     A,R5
        SJMP    ??compare_double_1
??compare_double_0:
        MOV     ?V0 + 11,?V0 + 7
        MOV     A,?V0 + 11
??compare_double_1:
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 11,A
//  541     return (fabs(a - b) <= maxVal * DBL_EPSILON);
        MOV     DPTR,#__Constant_34000000
        MOV     R0,#?V0 + 12
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 12
        LCALL   ?FLT_MUL
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_SUB
        MOV     A,?V0 + 3
        CLR     0xE0 /* A   */.7
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 8
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_GE
        JNC     ??compare_double_2
        SETB    B.0
        SJMP    ??compare_double_3
??compare_double_2:
        CLR     B.0
??compare_double_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
        MOV     R3,#0x0
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock59
//  542 }
//  543 
//  544 /* Render the number nicely from the given item into a string. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  545 static cJSON_bool print_number(const cJSON * const item, printbuffer * const output_buffer)
print_number:
        CFI Block cfiBlock60 Using cfiCommon0
        CFI Function print_number
        CODE
//  546 {
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sscanf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, compare_double
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 50, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 50, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_number, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 30
        MOV     A,#-0x1e
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  547     unsigned char *output_pointer = NULL;
//  548     double d = item->valuedouble;
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_138:
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
//  549     int length = 0;
//  550     size_t i = 0;
//  551     unsigned char number_buffer[26] = {0}; /* temporary buffer to print the number into */
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {0}>` >> 8) & 0xff
        MOV     DPL,#`?<Constant {0}>` & 0xff
        MOV     A,#0x1a
        LCALL   ?MOVE_LONG8_XDATA_XDATA
//  552     unsigned char decimal_point = get_decimal_point();
//  553     double test = 0.0;
        MOV     DPTR,#__Constant_0
        LCALL   ?XLOAD_R2345
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R2345
//  554 
//  555     if (output_buffer == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??print_number_0
//  556     {
//  557         return false;
??print_number_1:
        MOV     R2,#0x0
        LJMP    ??print_number_2 & 0xFFFF
//  558     }
//  559 
//  560     /* This checks for NaN and Infinity */
//  561     if (isnan(d) || isinf(d))
??print_number_0:
        MOV     R0,#?V0 + 4
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_EQ
        JNZ     ??print_number_3
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,?V0 + 5
        MOV     ?V0 + 2,?V0 + 6
        MOV     ?V0 + 3,?V0 + 7
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_SUB
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 0
        LCALL   ?FLT_EQ
        JZ      ??print_number_4
//  562     {
//  563         length = sprintf((char*)number_buffer, "null");
??print_number_3:
        ; Setup parameters for call to function sprintf
        MOV     R4,#`?<Constant "null">` & 0xff
        MOV     R5,#(`?<Constant "null">` >> 8) & 0xff
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        LJMP    ??print_number_5 & 0xFFFF
//  564     }
//  565     else
//  566     {
//  567         /* Try 15 decimal places of precision to avoid nonsignificant nonzero digits */
//  568         length = sprintf((char*)number_buffer, "%1.15g", d);
??print_number_4:
        ; Setup parameters for call to function sprintf
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     R4,#`?<Constant "%1.15g">` & 0xff
        MOV     R5,#(`?<Constant "%1.15g">` >> 8) & 0xff
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  569 
//  570         /* Check whether the original double can be recovered */
//  571         if ((sscanf((char*)number_buffer, "%lg", &test) != 1) || !compare_double((double)test, d))
        ; Setup parameters for call to function sscanf
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 48)
        MOV     R4,#`?<Constant "%lg">` & 0xff
        MOV     R5,#(`?<Constant "%lg">` >> 8) & 0xff
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sscanf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
        MOV     ?V0 + 2,R2
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??print_number_6
        MOV     A,R3
??print_number_6:
        JNZ     ??print_number_7
        ; Setup parameters for call to function compare_double
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?XLOAD_R2345
        LCALL   ??compare_double?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??print_number_8
//  572         {
//  573             /* If not, print with 17 decimal places of precision */
//  574             length = sprintf((char*)number_buffer, "%1.17g", d);
??print_number_7:
        ; Setup parameters for call to function sprintf
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_FOUR
        CFI CFA_XSP16 add(XSP16, 50)
        MOV     R4,#`?<Constant "%1.17g">` & 0xff
        MOV     R5,#(`?<Constant "%1.17g">` >> 8) & 0xff
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sprintf?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 46)
??print_number_5:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  575         }
//  576     }
//  577 
//  578     /* sprintf failed or buffer overrun occurred */
//  579     if ((length < 0) || (length > (int)(sizeof(number_buffer) - 1)))
??print_number_8:
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,#0x1a
        MOV     A,?V0 + 1
        SUBB    A,#0x0
        JC      $+5
        LJMP    ??print_number_1 & 0xFFFF
//  580     {
//  581         return false;
//  582     }
//  583 
//  584     /* reserve appropriate space in the output */
//  585     output_pointer = ensure(output_buffer, (size_t)length + sizeof(""));
        ; Setup parameters for call to function ensure
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ??Subroutine169_0 & 0xFFFF
//  586     if (output_pointer == NULL)
??CrossCallReturnLabel_303:
        JNZ     $+5
        LJMP    ??print_number_1 & 0xFFFF
//  587     {
//  588         return false;
//  589     }
//  590 
//  591     /* copy the printed number to the output and replace locale
//  592      * dependent decimal point with '.' */
//  593     for (i = 0; i < ((size_t)length); i++)
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??CrossCallReturnLabel_224
//  594     {
//  595         if (number_buffer[i] == decimal_point)
//  596         {
//  597             output_pointer[i] = '.';
//  598             continue;
//  599         }
//  600 
//  601         output_pointer[i] = number_buffer[i];
??print_number_9:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_118:
        PUSH    A
        CFI CFA_SP SP+-1
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_115:
        POP     A
        CFI CFA_SP SP+0
??print_number_10:
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_224:
        CLR     C
        MOV     A,R0
        SUBB    A,?V0 + 0
        MOV     A,R1
        SUBB    A,?V0 + 1
        JNC     ??print_number_11
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_119:
        XRL     A,#0x2e
        JNZ     ??print_number_9
        LCALL   ?Subroutine76 & 0xFFFF
//  602     }
??CrossCallReturnLabel_116:
        MOV     A,#0x2e
        SJMP    ??print_number_10
//  603     output_pointer[i] = '\0';
??print_number_11:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL   ??Subroutine177_0 & 0xFFFF
//  604 
//  605     output_buffer->offset += (size_t)length;
??CrossCallReturnLabel_340:
        ADD     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 1
        MOVX    @DPTR,A
//  606 
//  607     return true;
        MOV     R2,#0x1
??print_number_2:
        MOV     R3,#0x0
        MOV     A,#0x1e
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock60
//  608 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
        CFI Block cfiCond61 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_118
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond62 Using cfiCommon0
        CFI (cfiCond62) NoFunction
        CFI (cfiCond62) Conditional ??CrossCallReturnLabel_119
        CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond62) CFA_SP SP+0
        CFI (cfiCond62) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiPicker63 Using cfiCommon1
        CFI (cfiPicker63) NoFunction
        CFI (cfiPicker63) Picker
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_213:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond61
        CFI EndBlock cfiCond62
        CFI EndBlock cfiPicker63

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
        CFI Block cfiCond64 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_115
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond65 Using cfiCommon0
        CFI (cfiCond65) NoFunction
        CFI (cfiCond65) Conditional ??CrossCallReturnLabel_116
        CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond65) CFA_SP SP+0
        CFI (cfiCond65) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond66 Using cfiCommon0
        CFI (cfiCond66) NoFunction
        CFI (cfiCond66) Conditional ??CrossCallReturnLabel_117
        CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond66) CFA_SP SP+0
        CFI (cfiCond66) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiPicker67 Using cfiCommon1
        CFI (cfiPicker67) NoFunction
        CFI (cfiPicker67) Picker
        MOV     A,R2
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R1
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond64
        CFI EndBlock cfiCond65
        CFI EndBlock cfiCond66
        CFI EndBlock cfiPicker67
//  609 
//  610 /* parse 4 digit hexadecimal number */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  611 static unsigned parse_hex4(const unsigned char * const input)
parse_hex4:
        CFI Block cfiBlock68 Using cfiCommon0
        CFI Function parse_hex4
        CODE
//  612 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  613     unsigned int h = 0;
        MOV     R0,#0x0
        MOV     R1,#0x0
//  614     size_t i = 0;
//  615 
//  616     for (i = 0; i < 4; i++)
        MOV     R4,#0x0
        MOV     R5,#0x0
//  617     {
//  618         /* parse digit */
//  619         if ((input[i] >= '0') && (input[i] <= '9'))
??parse_hex4_0:
        MOV     A,R2
        ADD     A,R4
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R5
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#-0x30
        CLR     C
        SUBB    A,#0xa
        MOVX    A,@DPTR
        JNC     ??parse_hex4_1
//  620         {
//  621             h += (unsigned int) input[i] - '0';
        ADD     A,#-0x30
??parse_hex4_2:
        MOV     R6,A
        CLR     A
        ADDC    A,#-0x1
        MOV     R7,A
        MOV     A,R0
        ADD     A,R6
        MOV     R0,A
        MOV     A,R1
        ADDC    A,R7
        MOV     R1,A
//  622         }
//  623         else if ((input[i] >= 'A') && (input[i] <= 'F'))
//  624         {
//  625             h += (unsigned int) 10 + input[i] - 'A';
//  626         }
//  627         else if ((input[i] >= 'a') && (input[i] <= 'f'))
//  628         {
//  629             h += (unsigned int) 10 + input[i] - 'a';
//  630         }
//  631         else /* invalid */
//  632         {
//  633             return 0;
//  634         }
//  635 
//  636         if (i < 3)
        CLR     C
        MOV     A,R4
        SUBB    A,#0x3
        MOV     A,R5
        SUBB    A,#0x0
        JNC     ??parse_hex4_3
//  637         {
//  638             /* shift left to make place for the next nibble */
//  639             h = h << 4;
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
//  640         }
??parse_hex4_3:
        LCALL   ??Subroutine180_0 & 0xFFFF
??CrossCallReturnLabel_367:
        CLR     C
        MOV     A,R4
        SUBB    A,#0x4
        MOV     A,R5
        SUBB    A,#0x0
        JC      ??parse_hex4_0
//  641     }
//  642 
//  643     return h;
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
??parse_hex4_4:
        LJMP    ??Subroutine160_0 & 0xFFFF
??parse_hex4_1:
        ADD     A,#-0x41
        CLR     C
        SUBB    A,#0x6
        MOVX    A,@DPTR
        JNC     ??parse_hex4_5
        ADD     A,#-0x37
        SJMP    ??parse_hex4_2
??parse_hex4_5:
        ADD     A,#-0x61
        CLR     C
        SUBB    A,#0x6
        JNC     ??parse_hex4_6
        MOVX    A,@DPTR
        ADD     A,#-0x57
        SJMP    ??parse_hex4_2
??parse_hex4_6:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??parse_hex4_4
        CFI EndBlock cfiBlock68
//  644 }
//  645 
//  646 /* converts a UTF-16 literal to UTF-8
//  647  * A literal can be one or two sequences of the form \uXXXX */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  648 static unsigned char utf16_literal_to_utf8(const unsigned char * const input_pointer, const unsigned char * const input_end, unsigned char **output_pointer)
utf16_literal_to_utf8:
        CFI Block cfiBlock69 Using cfiCommon0
        CFI Function utf16_literal_to_utf8
        CODE
//  649 {
        FUNCALL utf16_literal_to_utf8, parse_hex4
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL utf16_literal_to_utf8, parse_hex4
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
//  650     long unsigned int codepoint = 0;
//  651     unsigned int first_code = 0;
//  652     const unsigned char *first_sequence = input_pointer;
//  653     unsigned char utf8_length = 0;
//  654     unsigned char utf8_position = 0;
//  655     unsigned char sequence_length = 0;
//  656     unsigned char first_byte_mark = 0;
??CrossCallReturnLabel_83:
        MOV     R7,#0x0
//  657 
//  658     if ((input_end - first_sequence) < 6)
        MOV     A,R4
        CLR     C
        SUBB    A,?V0 + 0
        MOV     R0,A
        MOV     A,R5
        SUBB    A,?V0 + 1
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x6
        MOV     A,R1
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_490:
        JNC     $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  659     {
//  660         /* input ends unexpectedly */
//  661         goto fail;
//  662     }
//  663 
//  664     /* get the first utf16 sequence */
//  665     first_code = parse_hex4(first_sequence + 2);
        ; Setup parameters for call to function parse_hex4
        MOV     A,R2
        ADD     A,#0x2
        INC     R2
        INC     R2
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??parse_hex4?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
//  666 
//  667     /* check that the code is valid */
//  668     if (((first_code >= 0xDC00) && (first_code <= 0xDFFF)))
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_179:
        JNC     $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  669     {
//  670         goto fail;
//  671     }
//  672 
//  673     /* UTF16 surrogate pair */
//  674     if ((first_code >= 0xD800) && (first_code <= 0xDBFF))
        MOV     A,R2
        ADD     A,#0x0
        MOV     A,R3
        ADDC    A,#0x28
        CLR     C
        SUBB    A,#0x4
        JNC     ??utf16_literal_to_utf8_1
//  675     {
//  676         const unsigned char *second_sequence = first_sequence + 6;
        MOV     A,?V0 + 0
        ADD     A,#0x6
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
//  677         unsigned int second_code = 0;
//  678         sequence_length = 12; /* \uXXXX\uXXXX */
        MOV     R6,#0xc
//  679 
//  680         if ((input_end - second_sequence) < 6)
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R0
        MOV     R2,A
        MOV     A,?V0 + 3
        SUBB    A,R1
        MOV     R3,A
        CLR     C
        MOV     A,R2
        SUBB    A,#0x6
        MOV     A,R3
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_491:
        JNC     $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  681         {
//  682             /* input ends unexpectedly */
//  683             goto fail;
//  684         }
//  685 
//  686         if ((second_sequence[0] != '\\') || (second_sequence[1] != 'u'))
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JZ      $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x75
        JZ      $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  687         {
//  688             /* missing second half of the surrogate pair */
//  689             goto fail;
//  690         }
//  691 
//  692         /* get the second utf16 sequence */
//  693         second_code = parse_hex4(second_sequence + 2);
        ; Setup parameters for call to function parse_hex4
        MOV     A,R0
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??parse_hex4?relay
        MOV     ?V0 + 0,R2
//  694         /* check that the code is valid */
//  695         if ((second_code < 0xDC00) || (second_code > 0xDFFF))
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_180:
        JC      $+5
        LJMP    ??utf16_literal_to_utf8_0 & 0xFFFF
//  696         {
//  697             /* invalid second half of the surrogate pair */
//  698             goto fail;
//  699         }
//  700 
//  701 
//  702         /* calculate the unicode codepoint from the surrogate pair */
//  703         codepoint = 0x10000 + (((first_code & 0x3FF) << 10) | (second_code & 0x3FF));
        MOV     A,#0xa
        MOV     R0,#?V0 + 6
        LCALL   ?S_SHL
        MOV     A,R3
        ANL     A,#0x3
        MOV     R1,A
        MOV     A,?V0 + 7
        ORL     A,R1
        MOV     ?V0 + 1,A
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     DPTR,#__Constant_10000
        MOV     R0,#?V0 + 0
        LCALL   ?L_ADD_X
        SJMP    ??utf16_literal_to_utf8_2
//  704     }
//  705     else
//  706     {
//  707         sequence_length = 6; /* \uXXXX */
??utf16_literal_to_utf8_1:
        MOV     R6,#0x6
//  708         codepoint = first_code;
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
//  709     }
//  710 
//  711     /* encode as UTF-8
//  712      * takes at maximum 4 bytes to encode:
//  713      * 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx */
//  714     if (codepoint < 0x80)
??utf16_literal_to_utf8_2:
        MOV     DPTR,#__Constant_80
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_3
//  715     {
//  716         /* normal ascii, encoding 0xxxxxxx */
//  717         utf8_length = 1;
        MOV     R1,#0x1
        SJMP    ??utf16_literal_to_utf8_4
//  718     }
//  719     else if (codepoint < 0x800)
??utf16_literal_to_utf8_3:
        MOV     DPTR,#__Constant_800
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_5
//  720     {
//  721         /* two bytes, encoding 110xxxxx 10xxxxxx */
//  722         utf8_length = 2;
        MOV     R1,#0x2
//  723         first_byte_mark = 0xC0; /* 11000000 */
        MOV     R7,#-0x40
        SJMP    ??utf16_literal_to_utf8_4
//  724     }
//  725     else if (codepoint < 0x10000)
??utf16_literal_to_utf8_5:
        MOV     DPTR,#__Constant_10000
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_6
//  726     {
//  727         /* three bytes, encoding 1110xxxx 10xxxxxx 10xxxxxx */
//  728         utf8_length = 3;
        MOV     R1,#0x3
//  729         first_byte_mark = 0xE0; /* 11100000 */
        MOV     R7,#-0x20
        SJMP    ??utf16_literal_to_utf8_4
//  730     }
//  731     else if (codepoint <= 0x10FFFF)
??utf16_literal_to_utf8_6:
        MOV     DPTR,#__Constant_110000
        MOV     R0,#?V0 + 0
        LCALL   ?UL_GE_X
        JC      ??utf16_literal_to_utf8_0
//  732     {
//  733         /* four bytes, encoding 1110xxxx 10xxxxxx 10xxxxxx 10xxxxxx */
//  734         utf8_length = 4;
        MOV     R1,#0x4
//  735         first_byte_mark = 0xF0; /* 11110000 */
        MOV     R7,#-0x10
//  736     }
//  737     else
//  738     {
//  739         /* invalid unicode codepoint */
//  740         goto fail;
//  741     }
//  742 
//  743     /* encode as utf8 */
//  744     for (utf8_position = (unsigned char)(utf8_length - 1); utf8_position > 0; utf8_position--)
??utf16_literal_to_utf8_4:
        MOV     A,#-0x1
        ADD     A,R1
        MOV     R2,A
        SJMP    ??utf16_literal_to_utf8_7
//  745     {
//  746         /* 10xxxxxx */
//  747         (*output_pointer)[utf8_position] = (unsigned char)((codepoint | 0x80) & 0xBF);
??utf16_literal_to_utf8_8:
        MOV     A,?V0 + 0
        ANL     A,#0xbf
        ORL     A,#0x80
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,R2
        MOV     R4,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        ADD     A,R4
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     DPL,R0
        MOV     DPH,A
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  748         codepoint >>= 6;
        MOV     A,#0x6
        MOV     R0,#?V0 + 0
        LCALL   ?UL_SHR
//  749     }
        DEC     R2
??utf16_literal_to_utf8_7:
        MOV     A,R2
        JNZ     ??utf16_literal_to_utf8_8
//  750     /* encode first byte */
//  751     if (utf8_length > 1)
        MOV     A,R1
        CLR     C
        SUBB    A,#0x2
        MOV     A,?V0 + 0
        JC      ??utf16_literal_to_utf8_9
//  752     {
//  753         (*output_pointer)[0] = (unsigned char)((codepoint | first_byte_mark) & 0xFF);
        ORL     A,R7
        SJMP    ??utf16_literal_to_utf8_10
//  754     }
//  755     else
//  756     {
//  757         (*output_pointer)[0] = (unsigned char)(codepoint & 0x7F);
??utf16_literal_to_utf8_9:
        ANL     A,#0x7f
??utf16_literal_to_utf8_10:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
//  758     }
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_253:
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  759 
//  760     *output_pointer += utf8_length;
        MOV     A,R1
        MOV     R0,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ??Subroutine195_0 & 0xFFFF
//  761 
//  762     return sequence_length;
??CrossCallReturnLabel_416:
        MOV     A,R6
        MOV     R1,A
        SJMP    ??utf16_literal_to_utf8_11
//  763 
//  764 fail:
//  765     return 0;
??utf16_literal_to_utf8_0:
        MOV     R1,#0x0
??utf16_literal_to_utf8_11:
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock69
//  766 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
        CFI Block cfiCond70 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_179
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond71 Using cfiCommon0
        CFI (cfiCond71) NoFunction
        CFI (cfiCond71) Conditional ??CrossCallReturnLabel_180
        CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond71) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond71) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond71) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond71) CFA_SP SP+0
        CFI (cfiCond71) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker72 Using cfiCommon1
        CFI (cfiPicker72) NoFunction
        CFI (cfiPicker72) Picker
        MOV     A,R2
        ADD     A,#0x0
        MOV     A,R3
        ADDC    A,#0x24
        CLR     C
        SUBB    A,#0x4
        RET
        CFI EndBlock cfiCond70
        CFI EndBlock cfiCond71
        CFI EndBlock cfiPicker72
//  767 
//  768 /* Parse the input text into an unescaped cinput, and populate item. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  769 static cJSON_bool parse_string(cJSON * const item, parse_buffer * const input_buffer)
parse_string:
        CFI Block cfiBlock73 Using cfiCommon0
        CFI Function parse_string
        CODE
//  770 {
        FUNCALL parse_string, utf16_literal_to_utf8
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_229:
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  771     const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
//  772     const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  773     unsigned char *output_pointer = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  774     unsigned char *output = NULL;
//  775 
//  776     /* not a string */
//  777     if (buffer_at_offset(input_buffer)[0] != '\"')
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,#0x22
        JZ      $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  778     {
//  779         goto fail;
//  780     }
//  781 
//  782     {
//  783         /* calculate approximate size of the output (overestimate) */
//  784         size_t allocation_length = 0;
//  785         size_t skipped_bytes = 0;
        MOV     R0,#0x0
        MOV     R1,#0x0
        SJMP    ??parse_string_1
//  786         while (((size_t)(input_end - input_buffer->content) < input_buffer->length) && (*input_end != '\"'))
//  787         {
//  788             /* is escape sequence */
//  789             if (input_end[0] == '\\')
??parse_string_2:
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JNZ     ??parse_string_3
//  790             {
//  791                 if ((size_t)(input_end + 1 - input_buffer->content) >= input_buffer->length)
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_379:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     A,DPL
        CLR     C
        SUBB    A,R2
        MOV     R4,A
        MOV     A,DPH
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_363:
        JC      $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  792                 {
//  793                     /* prevent buffer overflow when last input character is a backslash */
//  794                     goto fail;
//  795                 }
//  796                 skipped_bytes++;
        LCALL   ??Subroutine150_0 & 0xFFFF
//  797                 input_end++;
??CrossCallReturnLabel_225:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  798             }
//  799             input_end++;
??parse_string_3:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
//  800         }
??parse_string_1:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_380:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R2
        MOV     R4,A
        MOV     A,?V0 + 3
        LCALL   ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_364:
        JC      $+5
        LJMP    ??parse_string_0 & 0xFFFF
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        XRL     A,#0x22
        JNZ     ??parse_string_2
        MOVX    A,@DPTR
        XRL     A,#0x22
        JZ      $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  801         if (((size_t)(input_end - input_buffer->content) >= input_buffer->length) || (*input_end != '\"'))
//  802         {
//  803             goto fail; /* string ended unexpectedly */
//  804         }
//  805 
//  806         /* This is at most how much we need for the output */
//  807         allocation_length = (size_t) (input_end - buffer_at_offset(input_buffer)) - skipped_bytes;
//  808         output = (unsigned char*)input_buffer->hooks.allocate(allocation_length + sizeof(""));
        ; Setup parameters for indirect call
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_79:
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R2
        MOV     R2,A
        MOV     A,?V0 + 3
        SUBB    A,R3
        MOV     R3,A
        MOV     A,R2
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,R3
        SUBB    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0x1
        MOV     R2,A
        MOV     A,R1
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_143:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL   ?CALL_IND
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
//  809         if (output == NULL)
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??parse_string_0 & 0xFFFF
//  810         {
//  811             goto fail; /* allocation failure */
//  812         }
//  813     }
//  814 
//  815     output_pointer = output;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        SJMP    ??parse_string_4
//  816     /* loop through the string literal */
//  817     while (input_pointer < input_end)
//  818     {
//  819         if (*input_pointer != '\\')
//  820         {
//  821             *output_pointer++ = *input_pointer++;
??parse_string_5:
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        LCALL   ?Subroutine69 & 0xFFFF
//  822         }
??CrossCallReturnLabel_267:
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_40:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??parse_string_4:
        MOVX    @DPTR,A
??parse_string_6:
        CLR     C
        MOV     A,R6
        SUBB    A,?V0 + 2
        MOV     A,R7
        SUBB    A,?V0 + 3
        JC      $+5
        LJMP    ??parse_string_7 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JNZ     ??parse_string_5
//  823         /* escape sequence */
//  824         else
//  825         {
//  826             unsigned char sequence_length = 2;
        MOV     ?V0 + 8,#0x2
//  827             if ((input_end - input_pointer) < 1)
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R6
        MOV     R0,A
        MOV     A,?V0 + 3
        SUBB    A,R7
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x1
        MOV     A,R1
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_492:
        JNC     $+5
        LJMP    ??parse_string_8 & 0xFFFF
//  828             {
//  829                 goto fail;
//  830             }
//  831 
//  832             switch (input_pointer[1])
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#-0x22
        JZ      ??parse_string_9
        ADD     A,#-0xd
        JZ      ??parse_string_9
        ADD     A,#-0x2d
        JZ      ??parse_string_9
        ADD     A,#-0x6
        JZ      ??parse_string_10
        ADD     A,#-0x4
        JZ      ??parse_string_11
        ADD     A,#-0x8
        JZ      ??parse_string_12
        ADD     A,#-0x4
        JZ      ??parse_string_13
        ADD     A,#-0x2
        JZ      ??parse_string_14
        DEC     A
        JZ      ??parse_string_15
        LJMP    ??parse_string_8 & 0xFFFF
//  833             {
//  834                 case 'b':
//  835                     *output_pointer++ = '\b';
??parse_string_10:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_268:
        MOV     A,#0x8
??parse_string_16:
        LCALL   ?Subroutine32 & 0xFFFF
//  836                     break;
??CrossCallReturnLabel_38:
        SJMP    ??parse_string_17
//  837                 case 'f':
//  838                     *output_pointer++ = '\f';
??parse_string_11:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_269:
        MOV     A,#0xc
        SJMP    ??parse_string_16
//  839                     break;
//  840                 case 'n':
//  841                     *output_pointer++ = '\n';
??parse_string_12:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_270:
        MOV     A,#0xa
        SJMP    ??parse_string_16
//  842                     break;
//  843                 case 'r':
//  844                     *output_pointer++ = '\r';
??parse_string_13:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_271:
        MOV     A,#0xd
        SJMP    ??parse_string_16
//  845                     break;
//  846                 case 't':
//  847                     *output_pointer++ = '\t';
??parse_string_14:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_272:
        MOV     A,#0x9
        SJMP    ??parse_string_16
//  848                     break;
//  849                 case '\"':
//  850                 case '\\':
//  851                 case '/':
//  852                     *output_pointer++ = input_pointer[1];
??parse_string_9:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        CFI CFA_SP SP+-1
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_273:
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??parse_string_16
//  853                     break;
//  854 
//  855                 /* UTF-16 literal */
//  856                 case 'u':
//  857                     sequence_length = utf16_literal_to_utf8(input_pointer, input_end, &output_pointer);
??parse_string_15:
        ; Setup parameters for call to function utf16_literal_to_utf8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 8,DPL
        MOV     ?V0 + 9,DPH
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??utf16_literal_to_utf8?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R1
        MOV     ?V0 + 8,A
//  858                     if (sequence_length == 0)
        JZ      ??parse_string_8
//  859                     {
//  860                         /* failed to convert UTF16-literal to UTF-8 */
//  861                         goto fail;
//  862                     }
//  863                     break;
//  864 
//  865                 default:
//  866                     goto fail;
//  867             }
//  868             input_pointer += sequence_length;
??parse_string_17:
        MOV     A,R6
        ADD     A,?V0 + 8
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        LJMP    ??parse_string_6 & 0xFFFF
//  869         }
//  870     }
//  871 
//  872     /* zero terminate the output */
//  873     *output_pointer = '\0';
??parse_string_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine62 & 0xFFFF
//  874 
//  875     item->type = cJSON_String;
??CrossCallReturnLabel_93:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x10
        LCALL   ?Subroutine97 & 0xFFFF
//  876     item->valuestring = (char*)output;
??CrossCallReturnLabel_152:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ??Subroutine161_0 & 0xFFFF
//  877 
//  878     input_buffer->offset = (size_t) (input_end - input_buffer->content);
//  879     input_buffer->offset++;
??CrossCallReturnLabel_247:
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_610:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,?V0 + 3
        SUBB    A,R1
        MOV     R1,A
        LCALL   ??Subroutine150_0 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL   ?Subroutine95 & 0xFFFF
//  880 
//  881     return true;
??CrossCallReturnLabel_437:
        MOV     R2,#0x1
        SJMP    ??parse_string_18
//  882 
//  883 fail:
//  884     if (output != NULL)
//  885     {
//  886         input_buffer->hooks.deallocate(output);
??parse_string_8:
        ; Setup parameters for indirect call
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine162_0 & 0xFFFF
//  887     }
??CrossCallReturnLabel_255:
        LCALL   ?CALL_IND
//  888 
//  889     if (input_pointer != NULL)
??parse_string_0:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_438
//  890     {
//  891         input_buffer->offset = (size_t)(input_pointer - input_buffer->content);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine45 & 0xFFFF
//  892     }
??CrossCallReturnLabel_67:
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,R7
        SUBB    A,R1
        MOV     R1,A
        LCALL   ?Subroutine95 & 0xFFFF
//  893 
//  894     return false;
??CrossCallReturnLabel_438:
        MOV     R2,#0x0
??parse_string_18:
        MOV     R3,#0x0
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock73
//  895 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
        CFI Block cfiCond74 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_229
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond75 Using cfiCommon0
        CFI (cfiCond75) NoFunction
        CFI (cfiCond75) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond75) CFA_SP SP+0
        CFI (cfiCond75) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker76 Using cfiCommon1
        CFI (cfiPicker76) NoFunction
        CFI (cfiPicker76) Picker
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond74
        CFI EndBlock cfiCond75
        CFI EndBlock cfiPicker76
        REQUIRE ??Subroutine152_0
        ; // Fall through to label ??Subroutine152_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine152_0:
        CFI Block cfiCond77 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_228
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond78 Using cfiCommon0
        CFI (cfiCond78) NoFunction
        CFI (cfiCond78) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond78) CFA_SP SP+0
        CFI (cfiCond78) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond79 Using cfiCommon0
        CFI (cfiCond79) NoFunction
        CFI (cfiCond79) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond79) CFA_SP SP+0
        CFI (cfiCond79) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker80 Using cfiCommon1
        CFI (cfiPicker80) NoFunction
        CFI (cfiPicker80) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond77
        CFI EndBlock cfiCond78
        CFI EndBlock cfiCond79
        CFI EndBlock cfiPicker80
        REQUIRE ??Subroutine153_0
        ; // Fall through to label ??Subroutine153_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine153_0:
        CFI Block cfiCond81 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_227
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond82 Using cfiCommon0
        CFI (cfiCond82) NoFunction
        CFI (cfiCond82) Conditional ??CrossCallReturnLabel_228
        CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond82) CFA_SP SP+0
        CFI (cfiCond82) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond83 Using cfiCommon0
        CFI (cfiCond83) NoFunction
        CFI (cfiCond83) Conditional ??CrossCallReturnLabel_229
        CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond83) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond83) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond83) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond83) CFA_SP SP+0
        CFI (cfiCond83) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond84 Using cfiCommon0
        CFI (cfiCond84) NoFunction
        CFI (cfiCond84) Conditional ??CrossCallReturnLabel_230
        CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond84) CFA_SP SP+0
        CFI (cfiCond84) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker85 Using cfiCommon1
        CFI (cfiPicker85) NoFunction
        CFI (cfiPicker85) Picker
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_633:
        MOV     DPL,R4
        MOV     DPH,R5
        RET
        CFI EndBlock cfiCond81
        CFI EndBlock cfiCond82
        CFI EndBlock cfiCond83
        CFI EndBlock cfiCond84
        CFI EndBlock cfiPicker85
//  896 
//  897 /* Render the cstring provided to an escaped version that can be printed. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  898 static cJSON_bool print_string_ptr(const unsigned char * const input, printbuffer * const output_buffer)
print_string_ptr:
        CFI Block cfiBlock86 Using cfiCommon0
        CFI Function print_string_ptr
        CODE
//  899 {
        FUNCALL print_string_ptr, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_string_ptr, sprintf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
//  900     const unsigned char *input_pointer = NULL;
//  901     unsigned char *output = NULL;
//  902     unsigned char *output_pointer = NULL;
//  903     size_t output_length = 0;
//  904     /* numbers of additional characters needed for escaping */
//  905     size_t escape_characters = 0;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
//  906 
//  907     if (output_buffer == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??print_string_ptr_0
//  908     {
//  909         return false;
??print_string_ptr_1:
        MOV     R2,#0x0
??print_string_ptr_2:
        MOV     R3,#0x0
        LJMP    ??print_string_ptr_3 & 0xFFFF
//  910     }
//  911 
//  912     /* empty string */
//  913     if (input == NULL)
??print_string_ptr_0:
        MOV     A,?V0 + 6
        ORL     A,?V0 + 7
        JNZ     ??print_string_ptr_4
//  914     {
//  915         output = ensure(output_buffer, sizeof("\"\""));
        ; Setup parameters for call to function ensure
        MOV     R4,#0x3
        MOV     R5,#0x0
        LCALL   ??ensure?relay
        MOV     ?V0 + 3,R3
//  916         if (output == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??print_string_ptr_1
//  917         {
//  918             return false;
//  919         }
//  920         strcpy((char*)output, "\"\"");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "\\"\\"">` & 0xff
        MOV     R5,#(`?<Constant "\\"\\"">` >> 8) & 0xff
        LCALL   ??strcpy?relay
//  921 
//  922         return true;
        MOV     R2,#0x1
        SJMP    ??print_string_ptr_2
//  923     }
//  924 
//  925     /* set "flag" to 1 if something needs to be escaped */
//  926     for (input_pointer = input; *input_pointer; input_pointer++)
??print_string_ptr_4:
        MOV     ?V0 + 0,?V0 + 6
        MOV     ?V0 + 1,?V0 + 7
        SJMP    ??print_string_ptr_5
//  927     {
//  928         switch (*input_pointer)
//  929         {
//  930             case '\"':
//  931             case '\\':
//  932             case '\b':
//  933             case '\f':
//  934             case '\n':
//  935             case '\r':
//  936             case '\t':
//  937                 /* one character escape sequence */
//  938                 escape_characters++;
//  939                 break;
//  940             default:
//  941                 if (*input_pointer < 32)
??print_string_ptr_6:
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x20
        JNC     ??print_string_ptr_7
//  942                 {
//  943                     /* UTF-16 escape sequence uXXXX */
//  944                     escape_characters += 5;
        MOV     A,?V0 + 4
        ADD     A,#0x5
??print_string_ptr_8:
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
//  945                 }
??print_string_ptr_7:
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
??print_string_ptr_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        JZ      ??print_string_ptr_9
        ADD     A,#-0x8
        JZ      ??print_string_ptr_10
        DEC     A
        JZ      ??print_string_ptr_10
        DEC     A
        JZ      ??print_string_ptr_10
        ADD     A,#-0x2
        JZ      ??print_string_ptr_10
        DEC     A
        JZ      ??print_string_ptr_10
        ADD     A,#-0x15
        JZ      ??print_string_ptr_10
        ADD     A,#-0x3a
        JNZ     ??print_string_ptr_6
??print_string_ptr_10:
        MOV     A,?V0 + 4
        ADD     A,#0x1
        SJMP    ??print_string_ptr_8
//  946                 break;
//  947         }
//  948     }
//  949     output_length = (size_t)(input_pointer - input) + escape_characters;
??print_string_ptr_9:
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 6
        MOV     R0,A
        MOV     A,?V0 + 1
        SUBB    A,?V0 + 7
        MOV     R1,A
        MOV     A,R0
        ADD     A,?V0 + 4
        MOV     ?V0 + 8,A
        MOV     A,R1
        ADDC    A,?V0 + 5
        MOV     ?V0 + 9,A
//  950 
//  951     output = ensure(output_buffer, output_length + sizeof("\"\""));
        ; Setup parameters for call to function ensure
        MOV     A,?V0 + 8
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,?V0 + 9
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ??ensure?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
//  952     if (output == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??print_string_ptr_1 & 0xFFFF
//  953     {
//  954         return false;
//  955     }
//  956 
//  957     /* no characters have to be escaped */
//  958     if (escape_characters == 0)
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     ??print_string_ptr_11
//  959     {
//  960         output[0] = '\"';
        MOV     A,#0x22
        MOVX    @DPTR,A
//  961         memcpy(output + 1, input, output_length);
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_282:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
//  962         output[output_length + 1] = '\"';
        LJMP    ??print_string_ptr_12 & 0xFFFF
//  963         output[output_length + 2] = '\0';
//  964 
//  965         return true;
//  966     }
//  967 
//  968     output[0] = '\"';
??print_string_ptr_11:
        MOV     A,#0x22
        MOVX    @DPTR,A
//  969     output_pointer = output + 1;
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
//  970     /* copy the string */
//  971     for (input_pointer = input; *input_pointer != '\0'; (void)input_pointer++, output_pointer++)
        MOV     ?V0 + 0,?V0 + 6
        MOV     ?V0 + 1,?V0 + 7
        SJMP    ??print_string_ptr_13
//  972     {
//  973         if ((*input_pointer > 31) && (*input_pointer != '\"') && (*input_pointer != '\\'))
//  974         {
//  975             /* normal character, copy */
//  976             *output_pointer = *input_pointer;
//  977         }
//  978         else
//  979         {
//  980             /* character needs to be escaped */
//  981             *output_pointer++ = '\\';
//  982             switch (*input_pointer)
//  983             {
//  984                 case '\\':
//  985                     *output_pointer = '\\';
//  986                     break;
//  987                 case '\"':
//  988                     *output_pointer = '\"';
//  989                     break;
//  990                 case '\b':
//  991                     *output_pointer = 'b';
//  992                     break;
//  993                 case '\f':
//  994                     *output_pointer = 'f';
//  995                     break;
//  996                 case '\n':
//  997                     *output_pointer = 'n';
//  998                     break;
//  999                 case '\r':
// 1000                     *output_pointer = 'r';
// 1001                     break;
// 1002                 case '\t':
// 1003                     *output_pointer = 't';
// 1004                     break;
// 1005                 default:
// 1006                     /* escape and print as unicode codepoint */
// 1007                     sprintf((char*)output_pointer, "u%04x", *input_pointer);
??print_string_ptr_14:
        ; Setup parameters for call to function sprintf
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,#`?<Constant "u%04x">` & 0xff
        MOV     R5,#(`?<Constant "u%04x">` >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sprintf?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
// 1008                     output_pointer += 4;
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 1009                     break;
??print_string_ptr_15:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
??print_string_ptr_13:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        JZ      ??print_string_ptr_12
        CLR     C
        SUBB    A,#0x20
        JC      ??print_string_ptr_16
        MOVX    A,@DPTR
        XRL     A,#0x22
        JZ      ??print_string_ptr_16
        MOVX    A,@DPTR
        XRL     A,#0x5c
        JZ      ??print_string_ptr_16
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
??print_string_ptr_17:
        MOVX    @DPTR,A
        SJMP    ??print_string_ptr_15
??print_string_ptr_16:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x5c
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        ADD     A,#-0x8
        JZ      ??print_string_ptr_18
        DEC     A
        JZ      ??print_string_ptr_19
        DEC     A
        JZ      ??print_string_ptr_20
        ADD     A,#-0x2
        JZ      ??print_string_ptr_21
        DEC     A
        JZ      ??print_string_ptr_22
        ADD     A,#-0x15
        JZ      ??print_string_ptr_23
        ADD     A,#-0x3a
        JZ      $+5
        LJMP    ??print_string_ptr_14 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x5c
        SJMP    ??print_string_ptr_17
??print_string_ptr_23:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x22
        SJMP    ??print_string_ptr_17
??print_string_ptr_18:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x62
        SJMP    ??print_string_ptr_17
??print_string_ptr_21:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x66
        SJMP    ??print_string_ptr_17
??print_string_ptr_20:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x6e
        SJMP    ??print_string_ptr_17
??print_string_ptr_22:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x72
        SJMP    ??print_string_ptr_17
??print_string_ptr_19:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x74
        SJMP    ??print_string_ptr_17
// 1010             }
// 1011         }
// 1012     }
// 1013     output[output_length + 1] = '\"';
??print_string_ptr_12:
        MOV     A,?V0 + 2
        ADD     A,?V0 + 8
        MOV     R0,A
        MOV     A,?V0 + 3
        ADDC    A,?V0 + 9
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOV     A,#0x22
        MOVX    @DPTR,A
// 1014     output[output_length + 2] = '\0';
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1015 
// 1016     return true;
        MOV     R2,#0x1
        MOV     R3,A
        CFI EndBlock cfiBlock86
??print_string_ptr_3:
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
// 1017 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
        CFI Block cfiBlock87 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock87
// 1018 
// 1019 /* Invoke print_string_ptr (which is useful) on an item. */
// 1020 static cJSON_bool print_string(const cJSON * const item, printbuffer * const p)
// 1021 {
// 1022     return print_string_ptr((unsigned char*)item->valuestring, p);
// 1023 }
// 1024 
// 1025 /* Predeclare these prototypes. */
// 1026 static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer);
// 1027 static cJSON_bool print_value(const cJSON * const item, printbuffer * const output_buffer);
// 1028 static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer);
// 1029 static cJSON_bool print_array(const cJSON * const item, printbuffer * const output_buffer);
// 1030 static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer);
// 1031 static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer);
// 1032 
// 1033 /* Utility to jump whitespace and cr/lf */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1034 static parse_buffer *buffer_skip_whitespace(parse_buffer * const buffer)
buffer_skip_whitespace:
        CFI Block cfiBlock88 Using cfiCommon0
        CFI Function buffer_skip_whitespace
        CODE
// 1035 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1036     if ((buffer == NULL) || (buffer->content == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??buffer_skip_whitespace_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_448:
        JNZ     ??buffer_skip_whitespace_1
// 1037     {
// 1038         return NULL;
??buffer_skip_whitespace_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
// 1039     }
??buffer_skip_whitespace_2:
        LJMP    ??Subroutine204_0 & 0xFFFF
??buffer_skip_whitespace_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-6
        PUSH    DPH
        CFI CFA_SP SP+-7
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_616:
        POP     DPH
        CFI CFA_SP SP+-6
        POP     DPL
        CFI CFA_SP SP+-5
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_9:
        JC      ??CrossCallReturnLabel_234
// 1040 
// 1041     if (cannot_access_at_index(buffer, 0))
// 1042     {
// 1043         return buffer;
??buffer_skip_whitespace_3:
        SJMP    ??buffer_skip_whitespace_2
// 1044     }
// 1045 
// 1046     while (can_access_at_index(buffer, 0) && (buffer_at_offset(buffer)[0] <= 32))
// 1047     {
// 1048        buffer->offset++;
??buffer_skip_whitespace_4:
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R4
        MOV     DPH,A
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,#0x21
        JNC     ??buffer_skip_whitespace_2
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine155_0 & 0xFFFF
// 1049     }
??CrossCallReturnLabel_234:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-6
        PUSH    DPH
        CFI CFA_SP SP+-7
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_617:
        POP     DPH
        CFI CFA_SP SP+-6
        POP     DPL
        CFI CFA_SP SP+-5
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_10:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_618:
        MOV     DPL,R2
        MOV     DPH,R3
        JC      ??buffer_skip_whitespace_4
// 1050 
// 1051     if (buffer->offset == buffer->length)
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??buffer_skip_whitespace_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??buffer_skip_whitespace_5:
        JNZ     ??buffer_skip_whitespace_2
// 1052     {
// 1053         buffer->offset--;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine170_0 & 0xFFFF
// 1054     }
??CrossCallReturnLabel_305:
        SJMP    ??buffer_skip_whitespace_2
        CFI EndBlock cfiBlock88
// 1055 
// 1056     return buffer;
// 1057 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
        CFI Block cfiCond89 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_237
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond90 Using cfiCommon0
        CFI (cfiCond90) NoFunction
        CFI (cfiCond90) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond90) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond90) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond90) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond90) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond90) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond90) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond90) CFA_SP SP+0
        CFI (cfiCond90) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond91 Using cfiCommon0
        CFI (cfiCond91) NoFunction
        CFI (cfiCond91) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond91) CFA_SP SP+0
        CFI (cfiCond91) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker92 Using cfiCommon1
        CFI (cfiPicker92) NoFunction
        CFI (cfiPicker92) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond89
        CFI EndBlock cfiCond90
        CFI EndBlock cfiCond91
        CFI EndBlock cfiPicker92
        REQUIRE ??Subroutine154_0
        ; // Fall through to label ??Subroutine154_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine154_0:
        CFI Block cfiCond93 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_236
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond94 Using cfiCommon0
        CFI (cfiCond94) NoFunction
        CFI (cfiCond94) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond94) CFA_SP SP+0
        CFI (cfiCond94) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond95 Using cfiCommon0
        CFI (cfiCond95) NoFunction
        CFI (cfiCond95) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond95) CFA_SP SP+0
        CFI (cfiCond95) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond96 Using cfiCommon0
        CFI (cfiCond96) NoFunction
        CFI (cfiCond96) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond96) CFA_SP SP+0
        CFI (cfiCond96) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker97 Using cfiCommon1
        CFI (cfiPicker97) NoFunction
        CFI (cfiPicker97) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond93
        CFI EndBlock cfiCond94
        CFI EndBlock cfiCond95
        CFI EndBlock cfiCond96
        CFI EndBlock cfiPicker97
        REQUIRE ??Subroutine155_0
        ; // Fall through to label ??Subroutine155_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine155_0:
        CFI Block cfiCond98 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_234
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond99 Using cfiCommon0
        CFI (cfiCond99) NoFunction
        CFI (cfiCond99) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond99) CFA_SP SP+0
        CFI (cfiCond99) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond100 Using cfiCommon0
        CFI (cfiCond100) NoFunction
        CFI (cfiCond100) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond100) CFA_SP SP+0
        CFI (cfiCond100) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond101 Using cfiCommon0
        CFI (cfiCond101) NoFunction
        CFI (cfiCond101) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond101) CFA_SP SP+0
        CFI (cfiCond101) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond102 Using cfiCommon0
        CFI (cfiCond102) NoFunction
        CFI (cfiCond102) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond102) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond102) CFA_SP SP+0
        CFI (cfiCond102) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond103 Using cfiCommon0
        CFI (cfiCond103) NoFunction
        CFI (cfiCond103) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond103) CFA_SP SP+0
        CFI (cfiCond103) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker104 Using cfiCommon1
        CFI (cfiPicker104) NoFunction
        CFI (cfiPicker104) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond98
        CFI EndBlock cfiCond99
        CFI EndBlock cfiCond100
        CFI EndBlock cfiCond101
        CFI EndBlock cfiCond102
        CFI EndBlock cfiCond103
        CFI EndBlock cfiPicker104
        REQUIRE ??Subroutine156_0
        ; // Fall through to label ??Subroutine156_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine156_0:
        CFI Block cfiCond105 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_233
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond106 Using cfiCommon0
        CFI (cfiCond106) NoFunction
        CFI (cfiCond106) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond106) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond106) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond106) CFA_SP SP+-5
        CFI Block cfiCond107 Using cfiCommon0
        CFI (cfiCond107) NoFunction
        CFI (cfiCond107) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond107) CFA_SP SP+0
        CFI (cfiCond107) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond108 Using cfiCommon0
        CFI (cfiCond108) NoFunction
        CFI (cfiCond108) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond108) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond108) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond108) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond108) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond108) CFA_SP SP+0
        CFI (cfiCond108) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond109 Using cfiCommon0
        CFI (cfiCond109) NoFunction
        CFI (cfiCond109) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond109) CFA_SP SP+0
        CFI (cfiCond109) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond110 Using cfiCommon0
        CFI (cfiCond110) NoFunction
        CFI (cfiCond110) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond110) CFA_SP SP+0
        CFI (cfiCond110) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond111 Using cfiCommon0
        CFI (cfiCond111) NoFunction
        CFI (cfiCond111) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond111) CFA_SP SP+0
        CFI (cfiCond111) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker112 Using cfiCommon1
        CFI (cfiPicker112) NoFunction
        CFI (cfiPicker112) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        CFI EndBlock cfiCond105
        CFI EndBlock cfiCond106
        CFI EndBlock cfiCond107
        CFI EndBlock cfiCond108
        CFI EndBlock cfiCond109
        CFI EndBlock cfiCond110
        CFI EndBlock cfiCond111
        CFI EndBlock cfiPicker112
        REQUIRE ??Subroutine157_0
        ; // Fall through to label ??Subroutine157_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine157_0:
        CFI Block cfiCond113 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_231
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond114 Using cfiCommon0
        CFI (cfiCond114) NoFunction
        CFI (cfiCond114) Conditional ??CrossCallReturnLabel_232
        CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond114) CFA_SP SP+0
        CFI (cfiCond114) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond115 Using cfiCommon0
        CFI (cfiCond115) NoFunction
        CFI (cfiCond115) Conditional ??CrossCallReturnLabel_233
        CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond115) CFA_SP SP+0
        CFI (cfiCond115) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond116 Using cfiCommon0
        CFI (cfiCond116) NoFunction
        CFI (cfiCond116) Conditional ??CrossCallReturnLabel_234
        CFI (cfiCond116) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond116) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond116) CFA_SP SP+-5
        CFI Block cfiCond117 Using cfiCommon0
        CFI (cfiCond117) NoFunction
        CFI (cfiCond117) Conditional ??CrossCallReturnLabel_235
        CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond117) CFA_SP SP+0
        CFI (cfiCond117) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond118 Using cfiCommon0
        CFI (cfiCond118) NoFunction
        CFI (cfiCond118) Conditional ??CrossCallReturnLabel_236
        CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond118) CFA_SP SP+0
        CFI (cfiCond118) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond119 Using cfiCommon0
        CFI (cfiCond119) NoFunction
        CFI (cfiCond119) Conditional ??CrossCallReturnLabel_237
        CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond119) CFA_SP SP+0
        CFI (cfiCond119) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond120 Using cfiCommon0
        CFI (cfiCond120) NoFunction
        CFI (cfiCond120) Conditional ??CrossCallReturnLabel_238
        CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond120) CFA_SP SP+0
        CFI (cfiCond120) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond121 Using cfiCommon0
        CFI (cfiCond121) NoFunction
        CFI (cfiCond121) Conditional ??CrossCallReturnLabel_239
        CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond121) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond121) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond121) CFA_SP SP+0
        CFI (cfiCond121) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker122 Using cfiCommon1
        CFI (cfiPicker122) NoFunction
        CFI (cfiPicker122) Picker
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_242:
        RET
        CFI EndBlock cfiCond113
        CFI EndBlock cfiCond114
        CFI EndBlock cfiCond115
        CFI EndBlock cfiCond116
        CFI EndBlock cfiCond117
        CFI EndBlock cfiCond118
        CFI EndBlock cfiCond119
        CFI EndBlock cfiCond120
        CFI EndBlock cfiCond121
        CFI EndBlock cfiPicker122
// 1058 
// 1059 /* skip the UTF-8 BOM (byte order mark) if it is at the beginning of a buffer */
// 1060 static parse_buffer *skip_utf8_bom(parse_buffer * const buffer)
// 1061 {
// 1062     if ((buffer == NULL) || (buffer->content == NULL) || (buffer->offset != 0))
// 1063     {
// 1064         return NULL;
// 1065     }
// 1066 
// 1067     if (can_access_at_index(buffer, 4) && (strncmp((const char*)buffer_at_offset(buffer), "\xEF\xBB\xBF", 3) == 0))
// 1068     {
// 1069         buffer->offset += 3;
// 1070     }
// 1071 
// 1072     return buffer;
// 1073 }
// 1074 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1075 CJSON_PUBLIC(cJSON *) cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)
cJSON_ParseWithOpts:
        CFI Block cfiBlock123 Using cfiCommon0
        CFI Function cJSON_ParseWithOpts
        CODE
// 1076 {
        FUNCALL cJSON_ParseWithOpts, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithOpts, cJSON_ParseWithLengthOpts
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine174_0 & 0xFFFF
// 1077     size_t buffer_length;
// 1078 
// 1079     if (NULL == value)
??CrossCallReturnLabel_332:
        JNZ     ??cJSON_ParseWithOpts_0
// 1080     {
// 1081         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_ParseWithOpts_1
// 1082     }
// 1083 
// 1084     /* Adding null character size due to require_null_terminated. */
// 1085     buffer_length = strlen(value) + sizeof("");
// 1086 
// 1087     return cJSON_ParseWithLengthOpts(value, buffer_length, return_parse_end, require_null_terminated);
??cJSON_ParseWithOpts_0:
        ; Setup parameters for call to function cJSON_ParseWithLengthOpts
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        ; Setup parameters for call to function strlen
        LCALL   ??strlen?relay
        MOV     A,R2
        ADD     A,#0x1
        MOV     R4,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_ParseWithLengthOpts?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
??cJSON_ParseWithOpts_1:
        SJMP    ??Subroutine160_0
        CFI EndBlock cfiBlock123
// 1088 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiBlock124 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        LCALL   ??get_object_item?relay
        CFI EndBlock cfiBlock124
        REQUIRE ??Subroutine158_0
        ; // Fall through to label ??Subroutine158_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine158_0:
        CFI Block cfiBlock125 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        CFI EndBlock cfiBlock125
        REQUIRE ??Subroutine159_0
        ; // Fall through to label ??Subroutine159_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine159_0:
        CFI Block cfiBlock126 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock126
        REQUIRE ??Subroutine160_0
        ; // Fall through to label ??Subroutine160_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine160_0:
        CFI Block cfiBlock127 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock127
// 1089 
// 1090 /* Parse an object - create a new root, and populate. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1091 CJSON_PUBLIC(cJSON *) cJSON_ParseWithLengthOpts(const char *value, size_t buffer_length, const char **return_parse_end, cJSON_bool require_null_terminated)
cJSON_ParseWithLengthOpts:
        CFI Block cfiBlock128 Using cfiCommon0
        CFI Function cJSON_ParseWithLengthOpts
        CODE
// 1092 {
        FUNCALL cJSON_ParseWithLengthOpts, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, parse_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ParseWithLengthOpts, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 14
        MOV     A,#-0xe
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x20
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
// 1093     parse_buffer buffer = { 0, 0, 0, 0, { 0, 0, 0 } };
??CrossCallReturnLabel_84:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(unsigned char const *)0, 0, 0, 0,` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(unsigned char const *)0, 0, 0, 0,` & 0xff
        MOV     A,#0xe
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1094     cJSON *item = NULL;
// 1095 
// 1096     /* reset error position */
// 1097     global_error.json = NULL;
        MOV     DPTR,#global_error
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1098     global_error.position = 0;
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1099 
// 1100     if (value == NULL || 0 == buffer_length)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_429 & 0xFFFF
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??cJSON_ParseWithLengthOpts_0 & 0xFFFF
// 1101     {
// 1102         goto fail;
// 1103     }
// 1104 
// 1105     buffer.content = (const unsigned char*)value;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine219_0 & 0xFFFF
// 1106     buffer.length = buffer_length; 
??CrossCallReturnLabel_571:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
// 1107     buffer.offset = 0;
??CrossCallReturnLabel_417:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1108     buffer.hooks = global_hooks;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(global_hooks >> 8) & 0xff
        MOV     DPL,#global_hooks & 0xff
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1109 
// 1110     item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1111     if (item == NULL) /* memory fail */
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_ParseWithLengthOpts_0 & 0xFFFF
// 1112     {
// 1113         goto fail;
// 1114     }
// 1115 
// 1116     if (!parse_value(item, buffer_skip_whitespace(skip_utf8_bom(&buffer))))
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_449:
        JZ      ??cJSON_ParseWithLengthOpts_1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_450:
        JNZ     ??cJSON_ParseWithLengthOpts_1
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#0x5
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        JC      ??CrossCallReturnLabel_231
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 6,#0x3
        MOV     ?V0 + 7,#0x0
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,#`?<Constant "\\357\\273\\277">` & 0xff
        MOV     R5,#(`?<Constant "\\357\\273\\277">` >> 8) & 0xff
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_381:
        LCALL   ??strncmp?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        JNZ     ??CrossCallReturnLabel_231
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x3
        LCALL   ??Subroutine157_0 & 0xFFFF
??CrossCallReturnLabel_231:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        SJMP    ??cJSON_ParseWithLengthOpts_2
??cJSON_ParseWithLengthOpts_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
??cJSON_ParseWithLengthOpts_2:
        ; Setup parameters for call to function parse_value
        ; Setup parameters for call to function buffer_skip_whitespace
        LCALL   ??buffer_skip_whitespace?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_191:
        JZ      ??cJSON_ParseWithLengthOpts_3
// 1117     {
// 1118         /* parse failure. ep is set. */
// 1119         goto fail;
// 1120     }
// 1121 
// 1122     /* if we require null-terminated JSON without appended garbage, skip and then check for a null terminator */
// 1123     if (require_null_terminated)
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??cJSON_ParseWithLengthOpts_4
// 1124     {
// 1125         buffer_skip_whitespace(&buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??buffer_skip_whitespace?relay
// 1126         if ((buffer.offset >= buffer.length) || buffer_at_offset(&buffer)[0] != '\0')
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine226_0 & 0xFFFF
// 1127         {
// 1128             goto fail;
// 1129         }
// 1130     }
??CrossCallReturnLabel_611:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_11:
        JNC     ??cJSON_ParseWithLengthOpts_3
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_75:
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_315:
        JNZ     ??cJSON_ParseWithLengthOpts_3
// 1131     if (return_parse_end)
??cJSON_ParseWithLengthOpts_4:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_418
// 1132     {
// 1133         *return_parse_end = (const char*)buffer_at_offset(&buffer);
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine50 & 0xFFFF
// 1134     }
??CrossCallReturnLabel_76:
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine195_0 & 0xFFFF
// 1135 
// 1136     return item;
??CrossCallReturnLabel_418:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        SJMP    ??cJSON_ParseWithLengthOpts_5
// 1137 
// 1138 fail:
// 1139     if (item != NULL)
// 1140     {
// 1141         cJSON_Delete(item);
??cJSON_ParseWithLengthOpts_3:
        ; Setup parameters for call to function cJSON_Delete
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Delete?relay
// 1142     }
// 1143 
// 1144     if (value != NULL)
// 1145     {
// 1146         error local_error;
// 1147         local_error.json = (const unsigned char*)value;
// 1148         local_error.position = 0;
??cJSON_ParseWithLengthOpts_0:
        MOV     R0,#0x0
        MOV     R1,#0x0
// 1149 
// 1150         if (buffer.offset < buffer.length)
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_382:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R2
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R3
        JNC     ??cJSON_ParseWithLengthOpts_6
// 1151         {
// 1152             local_error.position = buffer.offset;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??cJSON_ParseWithLengthOpts_7
// 1153         }
// 1154         else if (buffer.length > 0)
??cJSON_ParseWithLengthOpts_6:
        MOV     A,R2
        ORL     A,R3
        JZ      ??cJSON_ParseWithLengthOpts_8
// 1155         {
// 1156             local_error.position = buffer.length - 1;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
??cJSON_ParseWithLengthOpts_7:
        MOV     R1,A
// 1157         }
// 1158 
// 1159         if (return_parse_end != NULL)
??cJSON_ParseWithLengthOpts_8:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_572
// 1160         {
// 1161             *return_parse_end = (const char*)local_error.json + local_error.position;
        MOV     A,?V0 + 2
        ADD     A,R0
        MOV     R2,A
        MOV     A,?V0 + 3
        ADDC    A,R1
        MOV     R3,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine219_0 & 0xFFFF
// 1162         }
// 1163 
// 1164         global_error = local_error;
??CrossCallReturnLabel_572:
        MOV     DPTR,#global_error
        LCALL   ??Subroutine175_0 & 0xFFFF
// 1165     }
??CrossCallReturnLabel_333:
        LCALL   ??Subroutine194_0 & 0xFFFF
// 1166 
// 1167     return NULL;
??CrossCallReturnLabel_429:
        MOV     R2,#0x0
        MOV     R3,#0x0
??cJSON_ParseWithLengthOpts_5:
        MOV     A,#0xe
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock128
// 1168 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
        CFI Block cfiCond129 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_83
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond130 Using cfiCommon0
        CFI (cfiCond130) NoFunction
        CFI (cfiCond130) Conditional ??CrossCallReturnLabel_84
        CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond130) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond130) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond130) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond130) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond130) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond130) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond130) CFA_SP SP+0
        CFI (cfiCond130) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond131 Using cfiCommon0
        CFI (cfiCond131) NoFunction
        CFI (cfiCond131) Conditional ??CrossCallReturnLabel_85
        CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond131) CFA_SP SP+0
        CFI (cfiCond131) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker132 Using cfiCommon1
        CFI (cfiPicker132) NoFunction
        CFI (cfiPicker132) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        RET
        CFI EndBlock cfiCond129
        CFI EndBlock cfiCond130
        CFI EndBlock cfiCond131
        CFI EndBlock cfiPicker132

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
        CFI Block cfiCond133 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_75
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond134 Using cfiCommon0
        CFI (cfiCond134) NoFunction
        CFI (cfiCond134) Conditional ??CrossCallReturnLabel_76
        CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond134) CFA_SP SP+0
        CFI (cfiCond134) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker135 Using cfiCommon1
        CFI (cfiPicker135) NoFunction
        CFI (cfiPicker135) Picker
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_630:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond133
        CFI EndBlock cfiCond134
        CFI EndBlock cfiPicker135
// 1169 
// 1170 /* Default options for cJSON_Parse */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1171 CJSON_PUBLIC(cJSON *) cJSON_Parse(const char *value)
cJSON_Parse:
        CFI Block cfiBlock136 Using cfiCommon0
        CFI Function cJSON_Parse
        CODE
// 1172 {
        FUNCALL cJSON_Parse, cJSON_ParseWithOpts
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1173     return cJSON_ParseWithOpts(value, 0, 0);
        ; Setup parameters for call to function cJSON_ParseWithOpts
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        MOV     R5,#0x0
        LCALL   ??cJSON_ParseWithOpts?relay
        LJMP    ??Subroutine158_0 & 0xFFFF
        CFI EndBlock cfiBlock136
// 1174 }
// 1175 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1176 CJSON_PUBLIC(cJSON *) cJSON_ParseWithLength(const char *value, size_t buffer_length)
cJSON_ParseWithLength:
        CFI Block cfiBlock137 Using cfiCommon0
        CFI Function cJSON_ParseWithLength
        CODE
// 1177 {
        FUNCALL cJSON_ParseWithLength, cJSON_ParseWithLengthOpts
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1178     return cJSON_ParseWithLengthOpts(value, buffer_length, 0, 0);
        ; Setup parameters for call to function cJSON_ParseWithLengthOpts
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ??cJSON_ParseWithLengthOpts?relay
        MOV     A,#0x4
        LJMP    ??Subroutine159_0 & 0xFFFF
        CFI EndBlock cfiBlock137
// 1179 }
// 1180 
// 1181 #define cjson_min(a, b) (((a) < (b)) ? (a) : (b))
// 1182 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1183 static unsigned char *print(const cJSON * const item, cJSON_bool format, const internal_hooks * const hooks)
print:
        CFI Block cfiBlock138 Using cfiCommon0
        CFI Function print
        CODE
// 1184 {
        FUNCALL print, memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,#0x22
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine207_0 & 0xFFFF
// 1185     static const size_t default_buffer_size = 256;
// 1186     printbuffer buffer[1];
// 1187     unsigned char *printed = NULL;
??CrossCallReturnLabel_506:
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1188 
// 1189     memset(buffer, 0, sizeof(buffer));
        ; Setup parameters for call to function memset
        MOV     ?V0 + 6,#0x12
        MOV     ?V0 + 7,R6
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??memset?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
// 1190 
// 1191     /* create buffer */
// 1192     buffer->buffer = (unsigned char*) hooks->allocate(default_buffer_size);
        ; Setup parameters for indirect call
        MOV     R2,#0x0
        MOV     R3,#0x1
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL   ?CALL_IND
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine219_0 & 0xFFFF
// 1193     buffer->length = default_buffer_size;
??CrossCallReturnLabel_573:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        INC     A
        MOVX    @DPTR,A
// 1194     buffer->format = format;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ??Subroutine161_0 & 0xFFFF
// 1195     buffer->hooks = *hooks;
??CrossCallReturnLabel_248:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1196     if (buffer->buffer == NULL)
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_451:
        JNZ     $+5
        LJMP    ??print_0 & 0xFFFF
// 1197     {
// 1198         goto fail;
// 1199     }
// 1200 
// 1201     /* print the value */
// 1202     if (!print_value(item, buffer))
        ; Setup parameters for call to function print_value
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??Subroutine172_0 & 0xFFFF
??CrossCallReturnLabel_324:
        JNZ     $+5
        LJMP    ??print_1 & 0xFFFF
// 1203     {
// 1204         goto fail;
// 1205     }
// 1206     update_offset(buffer);
        ; Setup parameters for call to function update_offset
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ?Subroutine122 & 0xFFFF
// 1207 
// 1208     /* check if reallocate is available */
// 1209     if (hooks->reallocate != NULL)
??CrossCallReturnLabel_189:
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_474:
        JZ      ??print_2
// 1210     {
// 1211         printed = (unsigned char*) hooks->reallocate(buffer->buffer, buffer->offset + 1);
        ; Setup parameters for indirect call
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_107:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_80:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_604:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
// 1212         if (printed == NULL) {
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??print_1 & 0xFFFF
// 1213             goto fail;
// 1214         }
// 1215         buffer->buffer = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        SJMP    ??print_3
// 1216     }
// 1217     else /* otherwise copy the JSON over to a new buffer */
// 1218     {
// 1219         printed = (unsigned char*) hooks->allocate(buffer->offset + 1);
??print_2:
        ; Setup parameters for indirect call
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL   ?CALL_IND
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
// 1220         if (printed == NULL)
        MOV     A,R6
        ORL     A,R7
        JZ      ??print_1
// 1221         {
// 1222             goto fail;
// 1223         }
// 1224         memcpy(printed, buffer->buffer, cjson_min(buffer->length, buffer->offset + 1));
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_41:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_12:
        JNC     ??print_4
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        SJMP    ??print_5
??print_4:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
??print_5:
        MOV     ?V0 + 3,A
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 34)
// 1225         printed[buffer->offset] = '\0'; /* just to be sure */
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_68:
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,R1
        MOV     DPH,A
        CLR     A
        MOVX    @DPTR,A
// 1226 
// 1227         /* free the buffer */
// 1228         hooks->deallocate(buffer->buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine30 & 0xFFFF
// 1229     }
??CrossCallReturnLabel_35:
        LCALL   ?CALL_IND
// 1230 
// 1231     return printed;
??print_3:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??print_6
// 1232 
// 1233 fail:
// 1234     if (buffer->buffer != NULL)
??print_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_452:
        JZ      ??print_7
// 1235     {
// 1236         hooks->deallocate(buffer->buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine30 & 0xFFFF
// 1237     }
??CrossCallReturnLabel_36:
        LCALL   ?CALL_IND
// 1238 
// 1239     if (printed != NULL)
??print_7:
        MOV     A,R6
        ORL     A,R7
        JZ      ??print_0
// 1240     {
// 1241         hooks->deallocate(printed);
        ; Setup parameters for indirect call
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine162_0 & 0xFFFF
// 1242     }
??CrossCallReturnLabel_258:
        LCALL   ?CALL_IND
// 1243 
// 1244     return NULL;
??print_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??print_6:
        MOV     A,#0x12
        LJMP    ?Subroutine2 & 0xFFFF
        CFI EndBlock cfiBlock138
// 1245 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
        CFI Block cfiCond139 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_243
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond140 Using cfiCommon0
        CFI (cfiCond140) NoFunction
        CFI (cfiCond140) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond140) CFA_SP SP+0
        CFI (cfiCond140) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker141 Using cfiCommon1
        CFI (cfiPicker141) NoFunction
        CFI (cfiPicker141) Picker
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        CFI EndBlock cfiCond139
        CFI EndBlock cfiCond140
        CFI EndBlock cfiPicker141
        REQUIRE ??Subroutine161_0
        ; // Fall through to label ??Subroutine161_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine161_0:
        CFI Block cfiCond142 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_245
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond143 Using cfiCommon0
        CFI (cfiCond143) NoFunction
        CFI (cfiCond143) Conditional ??CrossCallReturnLabel_246
        CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond143) CFA_SP SP+0
        CFI (cfiCond143) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond144 Using cfiCommon0
        CFI (cfiCond144) NoFunction
        CFI (cfiCond144) Conditional ??CrossCallReturnLabel_247
        CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond144) CFA_SP SP+0
        CFI (cfiCond144) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond145 Using cfiCommon0
        CFI (cfiCond145) NoFunction
        CFI (cfiCond145) Conditional ??CrossCallReturnLabel_248
        CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond145) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond145) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond145) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond145) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond145) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond145) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond145) CFA_SP SP+0
        CFI (cfiCond145) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond146 Using cfiCommon0
        CFI (cfiCond146) NoFunction
        CFI (cfiCond146) Conditional ??CrossCallReturnLabel_243
        CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond146) CFA_SP SP+0
        CFI (cfiCond146) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond147 Using cfiCommon0
        CFI (cfiCond147) NoFunction
        CFI (cfiCond147) Conditional ??CrossCallReturnLabel_244
        CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond147) CFA_SP SP+0
        CFI (cfiCond147) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker148 Using cfiCommon1
        CFI (cfiPicker148) NoFunction
        CFI (cfiPicker148) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond142
        CFI EndBlock cfiCond143
        CFI EndBlock cfiCond144
        CFI EndBlock cfiCond145
        CFI EndBlock cfiCond146
        CFI EndBlock cfiCond147
        CFI EndBlock cfiPicker148

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
        CFI Block cfiCond149 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_143
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond150 Using cfiCommon0
        CFI (cfiCond150) NoFunction
        CFI (cfiCond150) Conditional ??CrossCallReturnLabel_144
        CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond150) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond150) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond150) CFA_SP SP+0
        CFI (cfiCond150) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker151 Using cfiCommon1
        CFI (cfiPicker151) NoFunction
        CFI (cfiPicker151) Picker
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond149
        CFI EndBlock cfiCond150
        CFI EndBlock cfiPicker151

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
        CFI Block cfiCond152 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_267
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-1
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond153 Using cfiCommon0
        CFI (cfiCond153) NoFunction
        CFI (cfiCond153) Conditional ??CrossCallReturnLabel_268
        CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond153) CFA_SP SP+0
        CFI (cfiCond153) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond154 Using cfiCommon0
        CFI (cfiCond154) NoFunction
        CFI (cfiCond154) Conditional ??CrossCallReturnLabel_269
        CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond154) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond154) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond154) CFA_SP SP+0
        CFI (cfiCond154) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond155 Using cfiCommon0
        CFI (cfiCond155) NoFunction
        CFI (cfiCond155) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond155) CFA_SP SP+0
        CFI (cfiCond155) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond156 Using cfiCommon0
        CFI (cfiCond156) NoFunction
        CFI (cfiCond156) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond156) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond156) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond156) CFA_SP SP+0
        CFI (cfiCond156) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond157 Using cfiCommon0
        CFI (cfiCond157) NoFunction
        CFI (cfiCond157) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond157) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond157) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond157) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond157) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond157) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond157) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond157) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond157) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond157) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond157) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond157) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond157) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond157) CFA_SP SP+0
        CFI (cfiCond157) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond158 Using cfiCommon0
        CFI (cfiCond158) NoFunction
        CFI (cfiCond158) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond158) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond158) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond158) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond158) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond158) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond158) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond158) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond158) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond158) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond158) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond158) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond158) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond158) CFA_SP SP+-1
        CFI (cfiCond158) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker159 Using cfiCommon1
        CFI (cfiPicker159) NoFunction
        CFI (cfiPicker159) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond152
        CFI EndBlock cfiCond153
        CFI EndBlock cfiCond154
        CFI EndBlock cfiCond155
        CFI EndBlock cfiCond156
        CFI EndBlock cfiCond157
        CFI EndBlock cfiCond158
        CFI EndBlock cfiPicker159
        REQUIRE ??Subroutine162_0
        ; // Fall through to label ??Subroutine162_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine162_0:
        CFI Block cfiCond160 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_249
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond161 Using cfiCommon0
        CFI (cfiCond161) NoFunction
        CFI (cfiCond161) Conditional ??CrossCallReturnLabel_250
        CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond161) CFA_SP SP+0
        CFI (cfiCond161) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond162 Using cfiCommon0
        CFI (cfiCond162) NoFunction
        CFI (cfiCond162) Conditional ??CrossCallReturnLabel_251
        CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond162) CFA_SP SP+0
        CFI (cfiCond162) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond163 Using cfiCommon0
        CFI (cfiCond163) NoFunction
        CFI (cfiCond163) Conditional ??CrossCallReturnLabel_252
        CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond163) CFA_SP SP+0
        CFI (cfiCond163) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond164 Using cfiCommon0
        CFI (cfiCond164) NoFunction
        CFI (cfiCond164) Conditional ??CrossCallReturnLabel_253
        CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond164) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond164) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond164) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond164) CFA_SP SP+-1
        CFI (cfiCond164) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond165 Using cfiCommon0
        CFI (cfiCond165) NoFunction
        CFI (cfiCond165) Conditional ??CrossCallReturnLabel_254
        CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond165) CFA_SP SP+0
        CFI (cfiCond165) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond166 Using cfiCommon0
        CFI (cfiCond166) NoFunction
        CFI (cfiCond166) Conditional ??CrossCallReturnLabel_255
        CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond166) CFA_SP SP+0
        CFI (cfiCond166) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond167 Using cfiCommon0
        CFI (cfiCond167) NoFunction
        CFI (cfiCond167) Conditional ??CrossCallReturnLabel_256
        CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond167) CFA_SP SP+0
        CFI (cfiCond167) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond168 Using cfiCommon0
        CFI (cfiCond168) NoFunction
        CFI (cfiCond168) Conditional ??CrossCallReturnLabel_257
        CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond168) CFA_SP SP+0
        CFI (cfiCond168) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond169 Using cfiCommon0
        CFI (cfiCond169) NoFunction
        CFI (cfiCond169) Conditional ??CrossCallReturnLabel_258
        CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond169) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond169) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond169) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond169) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond169) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond169) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond169) CFA_SP SP+0
        CFI (cfiCond169) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond170 Using cfiCommon0
        CFI (cfiCond170) NoFunction
        CFI (cfiCond170) Conditional ??CrossCallReturnLabel_259
        CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond170) CFA_SP SP+0
        CFI (cfiCond170) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond171 Using cfiCommon0
        CFI (cfiCond171) NoFunction
        CFI (cfiCond171) Conditional ??CrossCallReturnLabel_260
        CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond171) CFA_SP SP+0
        CFI (cfiCond171) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond172 Using cfiCommon0
        CFI (cfiCond172) NoFunction
        CFI (cfiCond172) Conditional ??CrossCallReturnLabel_266
        CFI (cfiCond172) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond172) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond172) CFA_SP SP+-5
        CFI Block cfiCond173 Using cfiCommon0
        CFI (cfiCond173) NoFunction
        CFI (cfiCond173) Conditional ??CrossCallReturnLabel_266
        CFI (cfiCond173) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond173) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond173) CFA_SP SP+-5
        CFI Block cfiCond174 Using cfiCommon0
        CFI (cfiCond174) NoFunction
        CFI (cfiCond174) Conditional ??CrossCallReturnLabel_261
        CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond174) CFA_SP SP+0
        CFI (cfiCond174) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond175 Using cfiCommon0
        CFI (cfiCond175) NoFunction
        CFI (cfiCond175) Conditional ??CrossCallReturnLabel_262
        CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond175) CFA_SP SP+-1
        CFI (cfiCond175) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond176 Using cfiCommon0
        CFI (cfiCond176) NoFunction
        CFI (cfiCond176) Conditional ??CrossCallReturnLabel_263
        CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond176) CFA_SP SP+-1
        CFI (cfiCond176) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond177 Using cfiCommon0
        CFI (cfiCond177) NoFunction
        CFI (cfiCond177) Conditional ??CrossCallReturnLabel_264
        CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond177) CFA_SP SP+0
        CFI (cfiCond177) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond178 Using cfiCommon0
        CFI (cfiCond178) NoFunction
        CFI (cfiCond178) Conditional ??CrossCallReturnLabel_265
        CFI (cfiCond178) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond178) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond178) CFA_SP SP+-6
        CFI (cfiCond178) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond179 Using cfiCommon0
        CFI (cfiCond179) NoFunction
        CFI (cfiCond179) Conditional ??CrossCallReturnLabel_267
        CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond179) CFA_SP SP+-1
        CFI (cfiCond179) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond180 Using cfiCommon0
        CFI (cfiCond180) NoFunction
        CFI (cfiCond180) Conditional ??CrossCallReturnLabel_268
        CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond180) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond180) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond180) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond180) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond180) CFA_SP SP+0
        CFI (cfiCond180) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond181 Using cfiCommon0
        CFI (cfiCond181) NoFunction
        CFI (cfiCond181) Conditional ??CrossCallReturnLabel_269
        CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond181) CFA_SP SP+0
        CFI (cfiCond181) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond182 Using cfiCommon0
        CFI (cfiCond182) NoFunction
        CFI (cfiCond182) Conditional ??CrossCallReturnLabel_270
        CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond182) CFA_SP SP+0
        CFI (cfiCond182) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond183 Using cfiCommon0
        CFI (cfiCond183) NoFunction
        CFI (cfiCond183) Conditional ??CrossCallReturnLabel_271
        CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond183) CFA_SP SP+0
        CFI (cfiCond183) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond184 Using cfiCommon0
        CFI (cfiCond184) NoFunction
        CFI (cfiCond184) Conditional ??CrossCallReturnLabel_272
        CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond184) CFA_SP SP+0
        CFI (cfiCond184) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond185 Using cfiCommon0
        CFI (cfiCond185) NoFunction
        CFI (cfiCond185) Conditional ??CrossCallReturnLabel_273
        CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond185) CFA_SP SP+-1
        CFI (cfiCond185) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker186 Using cfiCommon1
        CFI (cfiPicker186) NoFunction
        CFI (cfiPicker186) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_279:
        RET
        CFI EndBlock cfiCond160
        CFI EndBlock cfiCond161
        CFI EndBlock cfiCond162
        CFI EndBlock cfiCond163
        CFI EndBlock cfiCond164
        CFI EndBlock cfiCond165
        CFI EndBlock cfiCond166
        CFI EndBlock cfiCond167
        CFI EndBlock cfiCond168
        CFI EndBlock cfiCond169
        CFI EndBlock cfiCond170
        CFI EndBlock cfiCond171
        CFI EndBlock cfiCond172
        CFI EndBlock cfiCond173
        CFI EndBlock cfiCond174
        CFI EndBlock cfiCond175
        CFI EndBlock cfiCond176
        CFI EndBlock cfiCond177
        CFI EndBlock cfiCond178
        CFI EndBlock cfiCond179
        CFI EndBlock cfiCond180
        CFI EndBlock cfiCond181
        CFI EndBlock cfiCond182
        CFI EndBlock cfiCond183
        CFI EndBlock cfiCond184
        CFI EndBlock cfiCond185
        CFI EndBlock cfiPicker186

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
        CFI Block cfiCond187 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_79
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond188 Using cfiCommon0
        CFI (cfiCond188) NoFunction
        CFI (cfiCond188) Conditional ??CrossCallReturnLabel_80
        CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond188) CFA_SP SP+0
        CFI (cfiCond188) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker189 Using cfiCommon1
        CFI (cfiPicker189) NoFunction
        CFI (cfiPicker189) Picker
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_207:
        RET
        CFI EndBlock cfiCond187
        CFI EndBlock cfiCond188
        CFI EndBlock cfiPicker189

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
        CFI Block cfiCond190 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_79
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond191 Using cfiCommon0
        CFI (cfiCond191) NoFunction
        CFI (cfiCond191) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_80
        CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond191) CFA_SP SP+0
        CFI (cfiCond191) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond192 Using cfiCommon0
        CFI (cfiCond192) NoFunction
        CFI (cfiCond192) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_35
        CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond192) CFA_SP SP+0
        CFI (cfiCond192) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond193 Using cfiCommon0
        CFI (cfiCond193) NoFunction
        CFI (cfiCond193) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_36
        CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond193) CFA_SP SP+0
        CFI (cfiCond193) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker194 Using cfiCommon1
        CFI (cfiPicker194) NoFunction
        CFI (cfiPicker194) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond190
        CFI EndBlock cfiCond191
        CFI EndBlock cfiCond192
        CFI EndBlock cfiCond193
        CFI EndBlock cfiPicker194

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
        CFI Block cfiCond195 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_49
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond196 Using cfiCommon0
        CFI (cfiCond196) NoFunction
        CFI (cfiCond196) Conditional ??CrossCallReturnLabel_50
        CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond196) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond196) CFA_SP SP+0
        CFI (cfiCond196) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond197 Using cfiCommon0
        CFI (cfiCond197) NoFunction
        CFI (cfiCond197) Conditional ??CrossCallReturnLabel_51
        CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond197) CFA_SP SP+0
        CFI (cfiCond197) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker198 Using cfiCommon1
        CFI (cfiPicker198) NoFunction
        CFI (cfiPicker198) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_281:
        RET
        CFI EndBlock cfiCond195
        CFI EndBlock cfiCond196
        CFI EndBlock cfiCond197
        CFI EndBlock cfiPicker198

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
        CFI Block cfiCond199 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_280
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond200 Using cfiCommon0
        CFI (cfiCond200) NoFunction
        CFI (cfiCond200) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_49
        CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond200) CFA_SP SP+0
        CFI (cfiCond200) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond201 Using cfiCommon0
        CFI (cfiCond201) NoFunction
        CFI (cfiCond201) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_50
        CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond201) CFA_SP SP+0
        CFI (cfiCond201) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond202 Using cfiCommon0
        CFI (cfiCond202) NoFunction
        CFI (cfiCond202) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_51
        CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond202) CFA_SP SP+0
        CFI (cfiCond202) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker203 Using cfiCommon1
        CFI (cfiPicker203) NoFunction
        CFI (cfiPicker203) Picker
        MOV     R5,A
        CFI EndBlock cfiCond199
        CFI EndBlock cfiCond200
        CFI EndBlock cfiCond201
        CFI EndBlock cfiCond202
        CFI EndBlock cfiPicker203
        REQUIRE ??Subroutine163_0
        ; // Fall through to label ??Subroutine163_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine163_0:
        CFI Block cfiCond204 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_282
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond205 Using cfiCommon0
        CFI (cfiCond205) NoFunction
        CFI (cfiCond205) Conditional ??CrossCallReturnLabel_283
        CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond205) CFA_SP SP+0
        CFI (cfiCond205) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond206 Using cfiCommon0
        CFI (cfiCond206) NoFunction
        CFI (cfiCond206) Conditional ??CrossCallReturnLabel_280
        CFI (cfiCond206) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond206) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond206) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond206) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond206) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond206) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond206) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond206) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond206) CFA_SP SP+0
        CFI (cfiCond206) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond207 Using cfiCommon0
        CFI (cfiCond207) NoFunction
        CFI (cfiCond207) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_49
        CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond207) CFA_SP SP+0
        CFI (cfiCond207) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond208 Using cfiCommon0
        CFI (cfiCond208) NoFunction
        CFI (cfiCond208) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_50
        CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond208) CFA_SP SP+0
        CFI (cfiCond208) CFA_XSP16 add(XSP16, 36)
        CFI Block cfiCond209 Using cfiCommon0
        CFI (cfiCond209) NoFunction
        CFI (cfiCond209) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_51
        CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond209) CFA_SP SP+0
        CFI (cfiCond209) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker210 Using cfiCommon1
        CFI (cfiPicker210) NoFunction
        CFI (cfiPicker210) Picker
        LCALL   ??memcpy?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond204
        CFI EndBlock cfiCond205
        CFI EndBlock cfiCond206
        CFI EndBlock cfiCond207
        CFI EndBlock cfiCond208
        CFI EndBlock cfiCond209
        CFI EndBlock cfiPicker210

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
        CFI Block cfiCond211 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_39
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond212 Using cfiCommon0
        CFI (cfiCond212) NoFunction
        CFI (cfiCond212) Conditional ??CrossCallReturnLabel_40
        CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond212) CFA_SP SP+0
        CFI (cfiCond212) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond213 Using cfiCommon0
        CFI (cfiCond213) NoFunction
        CFI (cfiCond213) Conditional ??CrossCallReturnLabel_41
        CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond213) CFA_SP SP+-2
        CFI (cfiCond213) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond214 Using cfiCommon0
        CFI (cfiCond214) NoFunction
        CFI (cfiCond214) Conditional ??CrossCallReturnLabel_42
        CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond214) CFA_SP SP+0
        CFI (cfiCond214) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond215 Using cfiCommon0
        CFI (cfiCond215) NoFunction
        CFI (cfiCond215) Conditional ??CrossCallReturnLabel_43
        CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond215) CFA_SP SP+0
        CFI (cfiCond215) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond216 Using cfiCommon0
        CFI (cfiCond216) NoFunction
        CFI (cfiCond216) Conditional ??CrossCallReturnLabel_44
        CFI (cfiCond216) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond216) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond216) CFA_SP SP+-5
        CFI (cfiCond216) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker217 Using cfiCommon1
        CFI (cfiPicker217) NoFunction
        CFI (cfiPicker217) Picker
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_202:
        RET
        CFI EndBlock cfiCond211
        CFI EndBlock cfiCond212
        CFI EndBlock cfiCond213
        CFI EndBlock cfiCond214
        CFI EndBlock cfiCond215
        CFI EndBlock cfiCond216
        CFI EndBlock cfiPicker217

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
        CFI Block cfiCond218 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_39
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond219 Using cfiCommon0
        CFI (cfiCond219) NoFunction
        CFI (cfiCond219) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_40
        CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond219) CFA_SP SP+0
        CFI (cfiCond219) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond220 Using cfiCommon0
        CFI (cfiCond220) NoFunction
        CFI (cfiCond220) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_41
        CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond220) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond220) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond220) CFA_SP SP+-2
        CFI (cfiCond220) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond221 Using cfiCommon0
        CFI (cfiCond221) NoFunction
        CFI (cfiCond221) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_42
        CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond221) CFA_SP SP+0
        CFI (cfiCond221) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond222 Using cfiCommon0
        CFI (cfiCond222) NoFunction
        CFI (cfiCond222) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_43
        CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond222) CFA_SP SP+0
        CFI (cfiCond222) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond223 Using cfiCommon0
        CFI (cfiCond223) NoFunction
        CFI (cfiCond223) Conditional ??CrossCallReturnLabel_202, ??CrossCallReturnLabel_44
        CFI (cfiCond223) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond223) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond223) CFA_SP SP+-5
        CFI (cfiCond223) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond224 Using cfiCommon0
        CFI (cfiCond224) NoFunction
        CFI (cfiCond224) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_1
        CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond224) CFA_SP SP+0
        CFI (cfiCond224) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond225 Using cfiCommon0
        CFI (cfiCond225) NoFunction
        CFI (cfiCond225) Conditional ??CrossCallReturnLabel_199, ??CrossCallReturnLabel_0
        CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond225) CFA_SP SP+0
        CFI (cfiCond225) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond226 Using cfiCommon0
        CFI (cfiCond226) NoFunction
        CFI (cfiCond226) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_1
        CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond226) CFA_SP SP+0
        CFI (cfiCond226) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond227 Using cfiCommon0
        CFI (cfiCond227) NoFunction
        CFI (cfiCond227) Conditional ??CrossCallReturnLabel_200, ??CrossCallReturnLabel_0
        CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond227) CFA_SP SP+0
        CFI (cfiCond227) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond228 Using cfiCommon0
        CFI (cfiCond228) NoFunction
        CFI (cfiCond228) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_38
        CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond228) CFA_SP SP+0
        CFI (cfiCond228) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond229 Using cfiCommon0
        CFI (cfiCond229) NoFunction
        CFI (cfiCond229) Conditional ??CrossCallReturnLabel_201, ??CrossCallReturnLabel_37
        CFI (cfiCond229) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond229) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond229) CFA_SP SP+-5
        CFI (cfiCond229) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker230 Using cfiCommon1
        CFI (cfiPicker230) NoFunction
        CFI (cfiPicker230) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond218
        CFI EndBlock cfiCond219
        CFI EndBlock cfiCond220
        CFI EndBlock cfiCond221
        CFI EndBlock cfiCond222
        CFI EndBlock cfiCond223
        CFI EndBlock cfiCond224
        CFI EndBlock cfiCond225
        CFI EndBlock cfiCond226
        CFI EndBlock cfiCond227
        CFI EndBlock cfiCond228
        CFI EndBlock cfiCond229
        CFI EndBlock cfiPicker230

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
        CFI Block cfiCond231 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_35
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond232 Using cfiCommon0
        CFI (cfiCond232) NoFunction
        CFI (cfiCond232) Conditional ??CrossCallReturnLabel_36
        CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond232) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond232) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond232) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond232) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond232) CFA_SP SP+0
        CFI (cfiCond232) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiPicker233 Using cfiCommon1
        CFI (cfiPicker233) NoFunction
        CFI (cfiPicker233) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_206:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_276:
        RET
        CFI EndBlock cfiCond231
        CFI EndBlock cfiCond232
        CFI EndBlock cfiPicker233

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
        CFI Block cfiCond234 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond235 Using cfiCommon0
        CFI (cfiCond235) NoFunction
        CFI (cfiCond235) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_29
        CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond235) CFA_SP SP+0
        CFI (cfiCond235) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond236 Using cfiCommon0
        CFI (cfiCond236) NoFunction
        CFI (cfiCond236) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_267
        CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond236) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond236) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond236) CFA_SP SP+-1
        CFI (cfiCond236) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond237 Using cfiCommon0
        CFI (cfiCond237) NoFunction
        CFI (cfiCond237) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_268
        CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond237) CFA_SP SP+0
        CFI (cfiCond237) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond238 Using cfiCommon0
        CFI (cfiCond238) NoFunction
        CFI (cfiCond238) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_269
        CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond238) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond238) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond238) CFA_SP SP+0
        CFI (cfiCond238) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond239 Using cfiCommon0
        CFI (cfiCond239) NoFunction
        CFI (cfiCond239) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_270
        CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond239) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond239) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond239) CFA_SP SP+0
        CFI (cfiCond239) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond240 Using cfiCommon0
        CFI (cfiCond240) NoFunction
        CFI (cfiCond240) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_271
        CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond240) CFA_SP SP+0
        CFI (cfiCond240) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond241 Using cfiCommon0
        CFI (cfiCond241) NoFunction
        CFI (cfiCond241) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_272
        CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond241) CFA_SP SP+0
        CFI (cfiCond241) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond242 Using cfiCommon0
        CFI (cfiCond242) NoFunction
        CFI (cfiCond242) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_273
        CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond242) CFA_SP SP+-1
        CFI (cfiCond242) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond243 Using cfiCommon0
        CFI (cfiCond243) NoFunction
        CFI (cfiCond243) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_249
        CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond243) CFA_SP SP+0
        CFI (cfiCond243) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond244 Using cfiCommon0
        CFI (cfiCond244) NoFunction
        CFI (cfiCond244) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_250
        CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond244) CFA_SP SP+0
        CFI (cfiCond244) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond245 Using cfiCommon0
        CFI (cfiCond245) NoFunction
        CFI (cfiCond245) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_251
        CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond245) CFA_SP SP+0
        CFI (cfiCond245) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond246 Using cfiCommon0
        CFI (cfiCond246) NoFunction
        CFI (cfiCond246) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_252
        CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond246) CFA_SP SP+0
        CFI (cfiCond246) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond247 Using cfiCommon0
        CFI (cfiCond247) NoFunction
        CFI (cfiCond247) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_253
        CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond247) CFA_SP SP+-1
        CFI (cfiCond247) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond248 Using cfiCommon0
        CFI (cfiCond248) NoFunction
        CFI (cfiCond248) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_254
        CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond248) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond248) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond248) CFA_SP SP+0
        CFI (cfiCond248) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond249 Using cfiCommon0
        CFI (cfiCond249) NoFunction
        CFI (cfiCond249) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_255
        CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond249) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond249) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond249) CFA_SP SP+0
        CFI (cfiCond249) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond250 Using cfiCommon0
        CFI (cfiCond250) NoFunction
        CFI (cfiCond250) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_256
        CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond250) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond250) CFA_SP SP+0
        CFI (cfiCond250) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond251 Using cfiCommon0
        CFI (cfiCond251) NoFunction
        CFI (cfiCond251) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_257
        CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond251) CFA_SP SP+0
        CFI (cfiCond251) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond252 Using cfiCommon0
        CFI (cfiCond252) NoFunction
        CFI (cfiCond252) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_258
        CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond252) CFA_SP SP+0
        CFI (cfiCond252) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond253 Using cfiCommon0
        CFI (cfiCond253) NoFunction
        CFI (cfiCond253) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_259
        CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond253) CFA_SP SP+0
        CFI (cfiCond253) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond254 Using cfiCommon0
        CFI (cfiCond254) NoFunction
        CFI (cfiCond254) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_260
        CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond254) CFA_SP SP+0
        CFI (cfiCond254) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond255 Using cfiCommon0
        CFI (cfiCond255) NoFunction
        CFI (cfiCond255) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_266
        CFI (cfiCond255) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond255) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond255) CFA_SP SP+-5
        CFI Block cfiCond256 Using cfiCommon0
        CFI (cfiCond256) NoFunction
        CFI (cfiCond256) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_266
        CFI (cfiCond256) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond256) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond256) CFA_SP SP+-5
        CFI Block cfiCond257 Using cfiCommon0
        CFI (cfiCond257) NoFunction
        CFI (cfiCond257) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_261
        CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond257) CFA_SP SP+0
        CFI (cfiCond257) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond258 Using cfiCommon0
        CFI (cfiCond258) NoFunction
        CFI (cfiCond258) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_262
        CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond258) CFA_SP SP+-1
        CFI (cfiCond258) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond259 Using cfiCommon0
        CFI (cfiCond259) NoFunction
        CFI (cfiCond259) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_263
        CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond259) CFA_SP SP+-1
        CFI (cfiCond259) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond260 Using cfiCommon0
        CFI (cfiCond260) NoFunction
        CFI (cfiCond260) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_264
        CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond260) CFA_SP SP+0
        CFI (cfiCond260) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond261 Using cfiCommon0
        CFI (cfiCond261) NoFunction
        CFI (cfiCond261) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_265
        CFI (cfiCond261) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond261) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond261) CFA_SP SP+-6
        CFI (cfiCond261) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond262 Using cfiCommon0
        CFI (cfiCond262) NoFunction
        CFI (cfiCond262) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_35
        CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond262) CFA_SP SP+0
        CFI (cfiCond262) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond263 Using cfiCommon0
        CFI (cfiCond263) NoFunction
        CFI (cfiCond263) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_36
        CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond263) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond263) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond263) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond263) CFA_SP SP+0
        CFI (cfiCond263) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond264 Using cfiCommon0
        CFI (cfiCond264) NoFunction
        CFI (cfiCond264) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_23
        CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond264) CFA_SP SP+0
        CFI (cfiCond264) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond265 Using cfiCommon0
        CFI (cfiCond265) NoFunction
        CFI (cfiCond265) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_24
        CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond265) CFA_SP SP+0
        CFI (cfiCond265) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond266 Using cfiCommon0
        CFI (cfiCond266) NoFunction
        CFI (cfiCond266) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_25
        CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond266) CFA_SP SP+0
        CFI (cfiCond266) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond267 Using cfiCommon0
        CFI (cfiCond267) NoFunction
        CFI (cfiCond267) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_103
        CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond267) CFA_SP SP+0
        CFI (cfiCond267) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond268 Using cfiCommon0
        CFI (cfiCond268) NoFunction
        CFI (cfiCond268) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_104
        CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond268) CFA_SP SP+-1
        CFI (cfiCond268) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond269 Using cfiCommon0
        CFI (cfiCond269) NoFunction
        CFI (cfiCond269) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_93
        CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond269) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond269) CFA_SP SP+0
        CFI (cfiCond269) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond270 Using cfiCommon0
        CFI (cfiCond270) NoFunction
        CFI (cfiCond270) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_94
        CFI (cfiCond270) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond270) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond270) CFA_SP SP+-5
        CFI (cfiCond270) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker271 Using cfiCommon1
        CFI (cfiPicker271) NoFunction
        CFI (cfiPicker271) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_605:
        RET
        CFI EndBlock cfiCond234
        CFI EndBlock cfiCond235
        CFI EndBlock cfiCond236
        CFI EndBlock cfiCond237
        CFI EndBlock cfiCond238
        CFI EndBlock cfiCond239
        CFI EndBlock cfiCond240
        CFI EndBlock cfiCond241
        CFI EndBlock cfiCond242
        CFI EndBlock cfiCond243
        CFI EndBlock cfiCond244
        CFI EndBlock cfiCond245
        CFI EndBlock cfiCond246
        CFI EndBlock cfiCond247
        CFI EndBlock cfiCond248
        CFI EndBlock cfiCond249
        CFI EndBlock cfiCond250
        CFI EndBlock cfiCond251
        CFI EndBlock cfiCond252
        CFI EndBlock cfiCond253
        CFI EndBlock cfiCond254
        CFI EndBlock cfiCond255
        CFI EndBlock cfiCond256
        CFI EndBlock cfiCond257
        CFI EndBlock cfiCond258
        CFI EndBlock cfiCond259
        CFI EndBlock cfiCond260
        CFI EndBlock cfiCond261
        CFI EndBlock cfiCond262
        CFI EndBlock cfiCond263
        CFI EndBlock cfiCond264
        CFI EndBlock cfiCond265
        CFI EndBlock cfiCond266
        CFI EndBlock cfiCond267
        CFI EndBlock cfiCond268
        CFI EndBlock cfiCond269
        CFI EndBlock cfiCond270
        CFI EndBlock cfiPicker271

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine146:
        CFI Block cfiCond272 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_603
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond273 Using cfiCommon0
        CFI (cfiCond273) NoFunction
        CFI (cfiCond273) Conditional ??CrossCallReturnLabel_604
        CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond273) CFA_SP SP+0
        CFI (cfiCond273) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond274 Using cfiCommon0
        CFI (cfiCond274) NoFunction
        CFI (cfiCond274) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_28
        CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond274) CFA_SP SP+0
        CFI (cfiCond274) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond275 Using cfiCommon0
        CFI (cfiCond275) NoFunction
        CFI (cfiCond275) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_29
        CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond275) CFA_SP SP+0
        CFI (cfiCond275) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond276 Using cfiCommon0
        CFI (cfiCond276) NoFunction
        CFI (cfiCond276) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_267
        CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond276) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond276) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond276) CFA_SP SP+-1
        CFI (cfiCond276) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond277 Using cfiCommon0
        CFI (cfiCond277) NoFunction
        CFI (cfiCond277) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_268
        CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond277) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond277) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond277) CFA_SP SP+0
        CFI (cfiCond277) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond278 Using cfiCommon0
        CFI (cfiCond278) NoFunction
        CFI (cfiCond278) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_269
        CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond278) CFA_SP SP+0
        CFI (cfiCond278) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond279 Using cfiCommon0
        CFI (cfiCond279) NoFunction
        CFI (cfiCond279) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_270
        CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond279) CFA_SP SP+0
        CFI (cfiCond279) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond280 Using cfiCommon0
        CFI (cfiCond280) NoFunction
        CFI (cfiCond280) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_271
        CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond280) CFA_SP SP+0
        CFI (cfiCond280) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond281 Using cfiCommon0
        CFI (cfiCond281) NoFunction
        CFI (cfiCond281) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_272
        CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond281) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond281) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond281) CFA_SP SP+0
        CFI (cfiCond281) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond282 Using cfiCommon0
        CFI (cfiCond282) NoFunction
        CFI (cfiCond282) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_273
        CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond282) CFA_SP SP+-1
        CFI (cfiCond282) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond283 Using cfiCommon0
        CFI (cfiCond283) NoFunction
        CFI (cfiCond283) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_249
        CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond283) CFA_SP SP+0
        CFI (cfiCond283) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond284 Using cfiCommon0
        CFI (cfiCond284) NoFunction
        CFI (cfiCond284) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_250
        CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond284) CFA_SP SP+0
        CFI (cfiCond284) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond285 Using cfiCommon0
        CFI (cfiCond285) NoFunction
        CFI (cfiCond285) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_251
        CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond285) CFA_SP SP+0
        CFI (cfiCond285) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond286 Using cfiCommon0
        CFI (cfiCond286) NoFunction
        CFI (cfiCond286) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_252
        CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond286) CFA_SP SP+0
        CFI (cfiCond286) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond287 Using cfiCommon0
        CFI (cfiCond287) NoFunction
        CFI (cfiCond287) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_253
        CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond287) CFA_SP SP+-1
        CFI (cfiCond287) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond288 Using cfiCommon0
        CFI (cfiCond288) NoFunction
        CFI (cfiCond288) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_254
        CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond288) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond288) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond288) CFA_SP SP+0
        CFI (cfiCond288) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond289 Using cfiCommon0
        CFI (cfiCond289) NoFunction
        CFI (cfiCond289) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_255
        CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond289) CFA_SP SP+0
        CFI (cfiCond289) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond290 Using cfiCommon0
        CFI (cfiCond290) NoFunction
        CFI (cfiCond290) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_256
        CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond290) CFA_SP SP+0
        CFI (cfiCond290) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond291 Using cfiCommon0
        CFI (cfiCond291) NoFunction
        CFI (cfiCond291) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_257
        CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond291) CFA_SP SP+0
        CFI (cfiCond291) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond292 Using cfiCommon0
        CFI (cfiCond292) NoFunction
        CFI (cfiCond292) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_258
        CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond292) CFA_SP SP+0
        CFI (cfiCond292) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond293 Using cfiCommon0
        CFI (cfiCond293) NoFunction
        CFI (cfiCond293) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_259
        CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond293) CFA_SP SP+0
        CFI (cfiCond293) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond294 Using cfiCommon0
        CFI (cfiCond294) NoFunction
        CFI (cfiCond294) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_260
        CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond294) CFA_SP SP+0
        CFI (cfiCond294) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond295 Using cfiCommon0
        CFI (cfiCond295) NoFunction
        CFI (cfiCond295) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_266
        CFI (cfiCond295) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond295) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond295) CFA_SP SP+-5
        CFI Block cfiCond296 Using cfiCommon0
        CFI (cfiCond296) NoFunction
        CFI (cfiCond296) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_266
        CFI (cfiCond296) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond296) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond296) CFA_SP SP+-5
        CFI Block cfiCond297 Using cfiCommon0
        CFI (cfiCond297) NoFunction
        CFI (cfiCond297) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_261
        CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond297) CFA_SP SP+0
        CFI (cfiCond297) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond298 Using cfiCommon0
        CFI (cfiCond298) NoFunction
        CFI (cfiCond298) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_262
        CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond298) CFA_SP SP+-1
        CFI (cfiCond298) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond299 Using cfiCommon0
        CFI (cfiCond299) NoFunction
        CFI (cfiCond299) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_263
        CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond299) CFA_SP SP+-1
        CFI (cfiCond299) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond300 Using cfiCommon0
        CFI (cfiCond300) NoFunction
        CFI (cfiCond300) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_264
        CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond300) CFA_SP SP+0
        CFI (cfiCond300) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond301 Using cfiCommon0
        CFI (cfiCond301) NoFunction
        CFI (cfiCond301) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_265
        CFI (cfiCond301) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond301) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond301) CFA_SP SP+-6
        CFI (cfiCond301) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond302 Using cfiCommon0
        CFI (cfiCond302) NoFunction
        CFI (cfiCond302) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_35
        CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond302) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond302) CFA_SP SP+0
        CFI (cfiCond302) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond303 Using cfiCommon0
        CFI (cfiCond303) NoFunction
        CFI (cfiCond303) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_36
        CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond303) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond303) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond303) CFA_SP SP+0
        CFI (cfiCond303) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond304 Using cfiCommon0
        CFI (cfiCond304) NoFunction
        CFI (cfiCond304) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_23
        CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond304) CFA_SP SP+0
        CFI (cfiCond304) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond305 Using cfiCommon0
        CFI (cfiCond305) NoFunction
        CFI (cfiCond305) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_24
        CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond305) CFA_SP SP+0
        CFI (cfiCond305) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond306 Using cfiCommon0
        CFI (cfiCond306) NoFunction
        CFI (cfiCond306) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_25
        CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond306) CFA_SP SP+0
        CFI (cfiCond306) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond307 Using cfiCommon0
        CFI (cfiCond307) NoFunction
        CFI (cfiCond307) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_103
        CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond307) CFA_SP SP+0
        CFI (cfiCond307) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond308 Using cfiCommon0
        CFI (cfiCond308) NoFunction
        CFI (cfiCond308) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_104
        CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond308) CFA_SP SP+-1
        CFI (cfiCond308) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond309 Using cfiCommon0
        CFI (cfiCond309) NoFunction
        CFI (cfiCond309) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_93
        CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond309) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond309) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond309) CFA_SP SP+0
        CFI (cfiCond309) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond310 Using cfiCommon0
        CFI (cfiCond310) NoFunction
        CFI (cfiCond310) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_94
        CFI (cfiCond310) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond310) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond310) CFA_SP SP+-5
        CFI (cfiCond310) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker311 Using cfiCommon1
        CFI (cfiPicker311) NoFunction
        CFI (cfiPicker311) Picker
        INC     DPTR
        CFI EndBlock cfiCond272
        CFI EndBlock cfiCond273
        CFI EndBlock cfiCond274
        CFI EndBlock cfiCond275
        CFI EndBlock cfiCond276
        CFI EndBlock cfiCond277
        CFI EndBlock cfiCond278
        CFI EndBlock cfiCond279
        CFI EndBlock cfiCond280
        CFI EndBlock cfiCond281
        CFI EndBlock cfiCond282
        CFI EndBlock cfiCond283
        CFI EndBlock cfiCond284
        CFI EndBlock cfiCond285
        CFI EndBlock cfiCond286
        CFI EndBlock cfiCond287
        CFI EndBlock cfiCond288
        CFI EndBlock cfiCond289
        CFI EndBlock cfiCond290
        CFI EndBlock cfiCond291
        CFI EndBlock cfiCond292
        CFI EndBlock cfiCond293
        CFI EndBlock cfiCond294
        CFI EndBlock cfiCond295
        CFI EndBlock cfiCond296
        CFI EndBlock cfiCond297
        CFI EndBlock cfiCond298
        CFI EndBlock cfiCond299
        CFI EndBlock cfiCond300
        CFI EndBlock cfiCond301
        CFI EndBlock cfiCond302
        CFI EndBlock cfiCond303
        CFI EndBlock cfiCond304
        CFI EndBlock cfiCond305
        CFI EndBlock cfiCond306
        CFI EndBlock cfiCond307
        CFI EndBlock cfiCond308
        CFI EndBlock cfiCond309
        CFI EndBlock cfiCond310
        CFI EndBlock cfiPicker311
        REQUIRE ??Subroutine164_0
        ; // Fall through to label ??Subroutine164_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine164_0:
        CFI Block cfiCond312 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_59
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond313 Using cfiCommon0
        CFI (cfiCond313) NoFunction
        CFI (cfiCond313) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_60
        CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond313) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond313) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond313) CFA_SP SP+0
        CFI (cfiCond313) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond314 Using cfiCommon0
        CFI (cfiCond314) NoFunction
        CFI (cfiCond314) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_30
        CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond314) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond314) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond314) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond314) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond314) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond314) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond314) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond314) CFA_SP SP+0
        CFI (cfiCond314) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond315 Using cfiCommon0
        CFI (cfiCond315) NoFunction
        CFI (cfiCond315) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_31
        CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond315) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond315) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond315) CFA_SP SP+0
        CFI (cfiCond315) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond316 Using cfiCommon0
        CFI (cfiCond316) NoFunction
        CFI (cfiCond316) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_32
        CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond316) CFA_SP SP+0
        CFI (cfiCond316) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond317 Using cfiCommon0
        CFI (cfiCond317) NoFunction
        CFI (cfiCond317) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_585
        CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond317) CFA_SP SP+0
        CFI (cfiCond317) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond318 Using cfiCommon0
        CFI (cfiCond318) NoFunction
        CFI (cfiCond318) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_586
        CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond318) CFA_SP SP+0
        CFI (cfiCond318) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond319 Using cfiCommon0
        CFI (cfiCond319) NoFunction
        CFI (cfiCond319) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_584
        CFI (cfiCond319) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond319) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond319) CFA_SP SP+-5
        CFI (cfiCond319) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond320 Using cfiCommon0
        CFI (cfiCond320) NoFunction
        CFI (cfiCond320) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_105
        CFI (cfiCond320) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond320) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond320) CFA_SP SP+-5
        CFI (cfiCond320) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond321 Using cfiCommon0
        CFI (cfiCond321) NoFunction
        CFI (cfiCond321) Conditional ??CrossCallReturnLabel_606, ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_106
        CFI (cfiCond321) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond321) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond321) CFA_SP SP+-5
        CFI (cfiCond321) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond322 Using cfiCommon0
        CFI (cfiCond322) NoFunction
        CFI (cfiCond322) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_601
        CFI (cfiCond322) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond322) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond322) CFA_SP SP+-5
        CFI (cfiCond322) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond323 Using cfiCommon0
        CFI (cfiCond323) NoFunction
        CFI (cfiCond323) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_602
        CFI (cfiCond323) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond323) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond323) CFA_SP SP+-5
        CFI (cfiCond323) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond324 Using cfiCommon0
        CFI (cfiCond324) NoFunction
        CFI (cfiCond324) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_600
        CFI (cfiCond324) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond324) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond324) CFA_SP SP+-5
        CFI (cfiCond324) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond325 Using cfiCommon0
        CFI (cfiCond325) NoFunction
        CFI (cfiCond325) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_597
        CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond325) CFA_SP SP+0
        CFI (cfiCond325) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond326 Using cfiCommon0
        CFI (cfiCond326) NoFunction
        CFI (cfiCond326) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_598
        CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond326) CFA_SP SP+0
        CFI (cfiCond326) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond327 Using cfiCommon0
        CFI (cfiCond327) NoFunction
        CFI (cfiCond327) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_599
        CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond327) CFA_SP SP+0
        CFI (cfiCond327) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond328 Using cfiCommon0
        CFI (cfiCond328) NoFunction
        CFI (cfiCond328) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_592
        CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond328) CFA_SP SP+0
        CFI (cfiCond328) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond329 Using cfiCommon0
        CFI (cfiCond329) NoFunction
        CFI (cfiCond329) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_593
        CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond329) CFA_SP SP+0
        CFI (cfiCond329) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond330 Using cfiCommon0
        CFI (cfiCond330) NoFunction
        CFI (cfiCond330) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_594
        CFI (cfiCond330) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond330) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond330) CFA_SP SP+-5
        CFI (cfiCond330) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond331 Using cfiCommon0
        CFI (cfiCond331) NoFunction
        CFI (cfiCond331) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_595
        CFI (cfiCond331) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond331) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond331) CFA_SP SP+-5
        CFI (cfiCond331) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond332 Using cfiCommon0
        CFI (cfiCond332) NoFunction
        CFI (cfiCond332) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_596
        CFI (cfiCond332) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond332) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond332) CFA_SP SP+-5
        CFI (cfiCond332) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond333 Using cfiCommon0
        CFI (cfiCond333) NoFunction
        CFI (cfiCond333) Conditional ??CrossCallReturnLabel_607, ??CrossCallReturnLabel_591
        CFI (cfiCond333) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond333) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond333) CFA_SP SP+-5
        CFI (cfiCond333) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond334 Using cfiCommon0
        CFI (cfiCond334) NoFunction
        CFI (cfiCond334) Conditional ??CrossCallReturnLabel_603
        CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond334) CFA_SP SP+0
        CFI (cfiCond334) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond335 Using cfiCommon0
        CFI (cfiCond335) NoFunction
        CFI (cfiCond335) Conditional ??CrossCallReturnLabel_604
        CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond335) CFA_SP SP+0
        CFI (cfiCond335) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond336 Using cfiCommon0
        CFI (cfiCond336) NoFunction
        CFI (cfiCond336) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_28
        CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond336) CFA_SP SP+0
        CFI (cfiCond336) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond337 Using cfiCommon0
        CFI (cfiCond337) NoFunction
        CFI (cfiCond337) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_29
        CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond337) CFA_SP SP+0
        CFI (cfiCond337) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond338 Using cfiCommon0
        CFI (cfiCond338) NoFunction
        CFI (cfiCond338) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_267
        CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond338) CFA_SP SP+-1
        CFI (cfiCond338) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond339 Using cfiCommon0
        CFI (cfiCond339) NoFunction
        CFI (cfiCond339) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_268
        CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond339) CFA_SP SP+0
        CFI (cfiCond339) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond340 Using cfiCommon0
        CFI (cfiCond340) NoFunction
        CFI (cfiCond340) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_269
        CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond340) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond340) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond340) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond340) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond340) CFA_SP SP+0
        CFI (cfiCond340) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond341 Using cfiCommon0
        CFI (cfiCond341) NoFunction
        CFI (cfiCond341) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_270
        CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond341) CFA_SP SP+0
        CFI (cfiCond341) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond342 Using cfiCommon0
        CFI (cfiCond342) NoFunction
        CFI (cfiCond342) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_271
        CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond342) CFA_SP SP+0
        CFI (cfiCond342) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond343 Using cfiCommon0
        CFI (cfiCond343) NoFunction
        CFI (cfiCond343) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_272
        CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond343) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond343) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond343) CFA_SP SP+0
        CFI (cfiCond343) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond344 Using cfiCommon0
        CFI (cfiCond344) NoFunction
        CFI (cfiCond344) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_273
        CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond344) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond344) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond344) CFA_SP SP+-1
        CFI (cfiCond344) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond345 Using cfiCommon0
        CFI (cfiCond345) NoFunction
        CFI (cfiCond345) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_249
        CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond345) CFA_SP SP+0
        CFI (cfiCond345) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond346 Using cfiCommon0
        CFI (cfiCond346) NoFunction
        CFI (cfiCond346) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_250
        CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond346) CFA_SP SP+0
        CFI (cfiCond346) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond347 Using cfiCommon0
        CFI (cfiCond347) NoFunction
        CFI (cfiCond347) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_251
        CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond347) CFA_SP SP+0
        CFI (cfiCond347) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond348 Using cfiCommon0
        CFI (cfiCond348) NoFunction
        CFI (cfiCond348) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_252
        CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond348) CFA_SP SP+0
        CFI (cfiCond348) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond349 Using cfiCommon0
        CFI (cfiCond349) NoFunction
        CFI (cfiCond349) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_253
        CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond349) CFA_SP SP+-1
        CFI (cfiCond349) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond350 Using cfiCommon0
        CFI (cfiCond350) NoFunction
        CFI (cfiCond350) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_254
        CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond350) CFA_SP SP+0
        CFI (cfiCond350) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond351 Using cfiCommon0
        CFI (cfiCond351) NoFunction
        CFI (cfiCond351) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_255
        CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond351) CFA_SP SP+0
        CFI (cfiCond351) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond352 Using cfiCommon0
        CFI (cfiCond352) NoFunction
        CFI (cfiCond352) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_256
        CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond352) CFA_SP SP+0
        CFI (cfiCond352) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond353 Using cfiCommon0
        CFI (cfiCond353) NoFunction
        CFI (cfiCond353) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_257
        CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond353) CFA_SP SP+0
        CFI (cfiCond353) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond354 Using cfiCommon0
        CFI (cfiCond354) NoFunction
        CFI (cfiCond354) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_258
        CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond354) CFA_SP SP+0
        CFI (cfiCond354) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond355 Using cfiCommon0
        CFI (cfiCond355) NoFunction
        CFI (cfiCond355) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_259
        CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond355) CFA_SP SP+0
        CFI (cfiCond355) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond356 Using cfiCommon0
        CFI (cfiCond356) NoFunction
        CFI (cfiCond356) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_260
        CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond356) CFA_SP SP+0
        CFI (cfiCond356) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond357 Using cfiCommon0
        CFI (cfiCond357) NoFunction
        CFI (cfiCond357) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_266
        CFI (cfiCond357) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond357) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond357) CFA_SP SP+-5
        CFI Block cfiCond358 Using cfiCommon0
        CFI (cfiCond358) NoFunction
        CFI (cfiCond358) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_266
        CFI (cfiCond358) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond358) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond358) CFA_SP SP+-5
        CFI Block cfiCond359 Using cfiCommon0
        CFI (cfiCond359) NoFunction
        CFI (cfiCond359) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_261
        CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond359) CFA_SP SP+0
        CFI (cfiCond359) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond360 Using cfiCommon0
        CFI (cfiCond360) NoFunction
        CFI (cfiCond360) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_262
        CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond360) CFA_SP SP+-1
        CFI (cfiCond360) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond361 Using cfiCommon0
        CFI (cfiCond361) NoFunction
        CFI (cfiCond361) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_263
        CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond361) CFA_SP SP+-1
        CFI (cfiCond361) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond362 Using cfiCommon0
        CFI (cfiCond362) NoFunction
        CFI (cfiCond362) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_264
        CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond362) CFA_SP SP+0
        CFI (cfiCond362) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond363 Using cfiCommon0
        CFI (cfiCond363) NoFunction
        CFI (cfiCond363) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_265
        CFI (cfiCond363) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond363) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond363) CFA_SP SP+-6
        CFI (cfiCond363) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond364 Using cfiCommon0
        CFI (cfiCond364) NoFunction
        CFI (cfiCond364) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_35
        CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond364) CFA_SP SP+0
        CFI (cfiCond364) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond365 Using cfiCommon0
        CFI (cfiCond365) NoFunction
        CFI (cfiCond365) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_36
        CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond365) CFA_SP SP+0
        CFI (cfiCond365) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond366 Using cfiCommon0
        CFI (cfiCond366) NoFunction
        CFI (cfiCond366) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_23
        CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond366) CFA_SP SP+0
        CFI (cfiCond366) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond367 Using cfiCommon0
        CFI (cfiCond367) NoFunction
        CFI (cfiCond367) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_24
        CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond367) CFA_SP SP+0
        CFI (cfiCond367) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond368 Using cfiCommon0
        CFI (cfiCond368) NoFunction
        CFI (cfiCond368) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_25
        CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond368) CFA_SP SP+0
        CFI (cfiCond368) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond369 Using cfiCommon0
        CFI (cfiCond369) NoFunction
        CFI (cfiCond369) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_103
        CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond369) CFA_SP SP+0
        CFI (cfiCond369) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond370 Using cfiCommon0
        CFI (cfiCond370) NoFunction
        CFI (cfiCond370) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_104
        CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond370) CFA_SP SP+-1
        CFI (cfiCond370) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond371 Using cfiCommon0
        CFI (cfiCond371) NoFunction
        CFI (cfiCond371) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_93
        CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond371) CFA_SP SP+0
        CFI (cfiCond371) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond372 Using cfiCommon0
        CFI (cfiCond372) NoFunction
        CFI (cfiCond372) Conditional ??CrossCallReturnLabel_605, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_94
        CFI (cfiCond372) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond372) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond372) CFA_SP SP+-5
        CFI (cfiCond372) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker373 Using cfiCommon1
        CFI (cfiPicker373) NoFunction
        CFI (cfiPicker373) Picker
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
        CFI EndBlock cfiCond312
        CFI EndBlock cfiCond313
        CFI EndBlock cfiCond314
        CFI EndBlock cfiCond315
        CFI EndBlock cfiCond316
        CFI EndBlock cfiCond317
        CFI EndBlock cfiCond318
        CFI EndBlock cfiCond319
        CFI EndBlock cfiCond320
        CFI EndBlock cfiCond321
        CFI EndBlock cfiCond322
        CFI EndBlock cfiCond323
        CFI EndBlock cfiCond324
        CFI EndBlock cfiCond325
        CFI EndBlock cfiCond326
        CFI EndBlock cfiCond327
        CFI EndBlock cfiCond328
        CFI EndBlock cfiCond329
        CFI EndBlock cfiCond330
        CFI EndBlock cfiCond331
        CFI EndBlock cfiCond332
        CFI EndBlock cfiCond333
        CFI EndBlock cfiCond334
        CFI EndBlock cfiCond335
        CFI EndBlock cfiCond336
        CFI EndBlock cfiCond337
        CFI EndBlock cfiCond338
        CFI EndBlock cfiCond339
        CFI EndBlock cfiCond340
        CFI EndBlock cfiCond341
        CFI EndBlock cfiCond342
        CFI EndBlock cfiCond343
        CFI EndBlock cfiCond344
        CFI EndBlock cfiCond345
        CFI EndBlock cfiCond346
        CFI EndBlock cfiCond347
        CFI EndBlock cfiCond348
        CFI EndBlock cfiCond349
        CFI EndBlock cfiCond350
        CFI EndBlock cfiCond351
        CFI EndBlock cfiCond352
        CFI EndBlock cfiCond353
        CFI EndBlock cfiCond354
        CFI EndBlock cfiCond355
        CFI EndBlock cfiCond356
        CFI EndBlock cfiCond357
        CFI EndBlock cfiCond358
        CFI EndBlock cfiCond359
        CFI EndBlock cfiCond360
        CFI EndBlock cfiCond361
        CFI EndBlock cfiCond362
        CFI EndBlock cfiCond363
        CFI EndBlock cfiCond364
        CFI EndBlock cfiCond365
        CFI EndBlock cfiCond366
        CFI EndBlock cfiCond367
        CFI EndBlock cfiCond368
        CFI EndBlock cfiCond369
        CFI EndBlock cfiCond370
        CFI EndBlock cfiCond371
        CFI EndBlock cfiCond372
        CFI EndBlock cfiPicker373

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
        CFI Block cfiCond374 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_8
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond375 Using cfiCommon0
        CFI (cfiCond375) NoFunction
        CFI (cfiCond375) Conditional ??CrossCallReturnLabel_9
        CFI (cfiCond375) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond375) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond375) CFA_SP SP+-5
        CFI Block cfiCond376 Using cfiCommon0
        CFI (cfiCond376) NoFunction
        CFI (cfiCond376) Conditional ??CrossCallReturnLabel_10
        CFI (cfiCond376) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond376) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond376) CFA_SP SP+-5
        CFI Block cfiCond377 Using cfiCommon0
        CFI (cfiCond377) NoFunction
        CFI (cfiCond377) Conditional ??CrossCallReturnLabel_11
        CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond377) CFA_SP SP+0
        CFI (cfiCond377) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond378 Using cfiCommon0
        CFI (cfiCond378) NoFunction
        CFI (cfiCond378) Conditional ??CrossCallReturnLabel_12
        CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond378) CFA_SP SP+0
        CFI (cfiCond378) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond379 Using cfiCommon0
        CFI (cfiCond379) NoFunction
        CFI (cfiCond379) Conditional ??CrossCallReturnLabel_13
        CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond379) CFA_SP SP+0
        CFI (cfiCond379) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond380 Using cfiCommon0
        CFI (cfiCond380) NoFunction
        CFI (cfiCond380) Conditional ??CrossCallReturnLabel_14
        CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond380) CFA_SP SP+0
        CFI (cfiCond380) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond381 Using cfiCommon0
        CFI (cfiCond381) NoFunction
        CFI (cfiCond381) Conditional ??CrossCallReturnLabel_15
        CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond381) CFA_SP SP+0
        CFI (cfiCond381) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond382 Using cfiCommon0
        CFI (cfiCond382) NoFunction
        CFI (cfiCond382) Conditional ??CrossCallReturnLabel_16
        CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond382) CFA_SP SP+0
        CFI (cfiCond382) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond383 Using cfiCommon0
        CFI (cfiCond383) NoFunction
        CFI (cfiCond383) Conditional ??CrossCallReturnLabel_17
        CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond383) CFA_SP SP+0
        CFI (cfiCond383) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond384 Using cfiCommon0
        CFI (cfiCond384) NoFunction
        CFI (cfiCond384) Conditional ??CrossCallReturnLabel_18
        CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond384) CFA_SP SP+0
        CFI (cfiCond384) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond385 Using cfiCommon0
        CFI (cfiCond385) NoFunction
        CFI (cfiCond385) Conditional ??CrossCallReturnLabel_19
        CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond385) CFA_SP SP+0
        CFI (cfiCond385) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond386 Using cfiCommon0
        CFI (cfiCond386) NoFunction
        CFI (cfiCond386) Conditional ??CrossCallReturnLabel_20
        CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond386) CFA_SP SP+0
        CFI (cfiCond386) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond387 Using cfiCommon0
        CFI (cfiCond387) NoFunction
        CFI (cfiCond387) Conditional ??CrossCallReturnLabel_21
        CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond387) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond387) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond387) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond387) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond387) CFA_SP SP+0
        CFI (cfiCond387) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond388 Using cfiCommon0
        CFI (cfiCond388) NoFunction
        CFI (cfiCond388) Conditional ??CrossCallReturnLabel_22
        CFI (cfiCond388) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond388) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond388) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond388) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond388) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond388) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond388) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond388) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond388) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond388) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond388) CFA_SP SP+0
        CFI (cfiCond388) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker389 Using cfiCommon1
        CFI (cfiPicker389) NoFunction
        CFI (cfiPicker389) Picker
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,R0
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,R1
        RET
        CFI EndBlock cfiCond374
        CFI EndBlock cfiCond375
        CFI EndBlock cfiCond376
        CFI EndBlock cfiCond377
        CFI EndBlock cfiCond378
        CFI EndBlock cfiCond379
        CFI EndBlock cfiCond380
        CFI EndBlock cfiCond381
        CFI EndBlock cfiCond382
        CFI EndBlock cfiCond383
        CFI EndBlock cfiCond384
        CFI EndBlock cfiCond385
        CFI EndBlock cfiCond386
        CFI EndBlock cfiCond387
        CFI EndBlock cfiCond388
        CFI EndBlock cfiPicker389
// 1246 
// 1247 /* Render a cJSON item/entity/structure to text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1248 CJSON_PUBLIC(char *) cJSON_Print(const cJSON *item)
cJSON_Print:
        CFI Block cfiBlock390 Using cfiCommon0
        CFI Function cJSON_Print
        CODE
// 1249 {
        FUNCALL cJSON_Print, print
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1250     return (char*)print(item, true, &global_hooks);
        ; Setup parameters for call to function print
        MOV     ?V0 + 0,#global_hooks & 0xff
        MOV     ?V0 + 1,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x1
        CFI EndBlock cfiBlock390
        REQUIRE ?Subroutine12
        ; // Fall through to label ?Subroutine12
// 1251 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
        CFI Block cfiBlock391 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R5,#0x0
        LCALL   ??print?relay
        LJMP    ??Subroutine158_0 & 0xFFFF
        CFI EndBlock cfiBlock391
// 1252 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1253 CJSON_PUBLIC(char *) cJSON_PrintUnformatted(const cJSON *item)
cJSON_PrintUnformatted:
        CFI Block cfiBlock392 Using cfiCommon0
        CFI Function cJSON_PrintUnformatted
        CODE
// 1254 {
        FUNCALL cJSON_PrintUnformatted, print
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1255     return (char*)print(item, false, &global_hooks);
        ; Setup parameters for call to function print
        MOV     ?V0 + 0,#global_hooks & 0xff
        MOV     ?V0 + 1,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     R4,#0x0
        SJMP    ?Subroutine12
        CFI EndBlock cfiBlock392
// 1256 }
// 1257 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1258 CJSON_PUBLIC(char *) cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)
cJSON_PrintBuffered:
        CFI Block cfiBlock393 Using cfiCommon0
        CFI Function cJSON_PrintBuffered
        CODE
// 1259 {
        FUNCALL cJSON_PrintBuffered, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 1260     printbuffer p = { 0, 0, 0, 0, 0, 0, { 0, 0, 0 } };
??CrossCallReturnLabel_90:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,` & 0xff
        MOV     A,#0x12
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1261 
// 1262     if (prebuffer < 0)
        CLR     C
        MOV     A,?V0 + 1
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_493:
        JNC     ??cJSON_PrintBuffered_0
// 1263     {
// 1264         return NULL;
??cJSON_PrintBuffered_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??CrossCallReturnLabel_383
// 1265     }
// 1266 
// 1267     p.buffer = (unsigned char*)global_hooks.allocate((size_t)prebuffer);
??cJSON_PrintBuffered_0:
        ; Setup parameters for indirect call
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     DPTR,#global_hooks
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_259:
        LCALL   ?CALL_IND
        LCALL   ?Subroutine103 & 0xFFFF
// 1268     if (!p.buffer)
??CrossCallReturnLabel_284:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_453:
        JZ      ??cJSON_PrintBuffered_1
// 1269     {
// 1270         return NULL;
// 1271     }
// 1272 
// 1273     p.length = (size_t)prebuffer;
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine206_0 & 0xFFFF
// 1274     p.offset = 0;
??CrossCallReturnLabel_499:
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1275     p.noalloc = false;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1276     p.format = fmt;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine175_0 & 0xFFFF
// 1277     p.hooks = global_hooks;
??CrossCallReturnLabel_334:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(global_hooks >> 8) & 0xff
        MOV     DPL,#global_hooks & 0xff
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1278 
// 1279     if (!print_value(item, &p))
        ; Setup parameters for call to function print_value
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??print_value?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JNZ     ??cJSON_PrintBuffered_2
// 1280     {
// 1281         global_hooks.deallocate(p.buffer);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine23 & 0xFFFF
// 1282         return NULL;
// 1283     }
??CrossCallReturnLabel_25:
        LCALL   ?CALL_IND
        SJMP    ??cJSON_PrintBuffered_1
// 1284 
// 1285     return (char*)p.buffer;
??cJSON_PrintBuffered_2:
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_383:
        MOV     A,#0x12
        LJMP    ??Subroutine181_0 & 0xFFFF
        CFI EndBlock cfiBlock393
// 1286 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
        CFI Block cfiCond394 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_284
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond395 Using cfiCommon0
        CFI (cfiCond395) NoFunction
        CFI (cfiCond395) Conditional ??CrossCallReturnLabel_285
        CFI (cfiCond395) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond395) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond395) CFA_SP SP+-5
        CFI (cfiCond395) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker396 Using cfiCommon1
        CFI (cfiPicker396) NoFunction
        CFI (cfiPicker396) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        CFI EndBlock cfiCond394
        CFI EndBlock cfiCond395
        CFI EndBlock cfiPicker396
        REQUIRE ??Subroutine165_0
        ; // Fall through to label ??Subroutine165_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine165_0:
        CFI Block cfiCond397 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_286
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond398 Using cfiCommon0
        CFI (cfiCond398) NoFunction
        CFI (cfiCond398) Conditional ??CrossCallReturnLabel_284
        CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond398) CFA_SP SP+0
        CFI (cfiCond398) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond399 Using cfiCommon0
        CFI (cfiCond399) NoFunction
        CFI (cfiCond399) Conditional ??CrossCallReturnLabel_285
        CFI (cfiCond399) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond399) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond399) CFA_SP SP+-5
        CFI (cfiCond399) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker400 Using cfiCommon1
        CFI (cfiPicker400) NoFunction
        CFI (cfiPicker400) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function strtod
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond397
        CFI EndBlock cfiCond398
        CFI EndBlock cfiCond399
        CFI EndBlock cfiPicker400

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
        CFI Block cfiCond401 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_23
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond402 Using cfiCommon0
        CFI (cfiCond402) NoFunction
        CFI (cfiCond402) Conditional ??CrossCallReturnLabel_24
        CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond402) CFA_SP SP+0
        CFI (cfiCond402) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond403 Using cfiCommon0
        CFI (cfiCond403) NoFunction
        CFI (cfiCond403) Conditional ??CrossCallReturnLabel_25
        CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond403) CFA_SP SP+0
        CFI (cfiCond403) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiPicker404 Using cfiCommon1
        CFI (cfiPicker404) NoFunction
        CFI (cfiPicker404) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_531:
        MOV     DPTR,#global_hooks + 2
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_274:
        RET
        CFI EndBlock cfiCond401
        CFI EndBlock cfiCond402
        CFI EndBlock cfiCond403
        CFI EndBlock cfiPicker404
// 1287 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1288 CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format)
cJSON_PrintPreallocated:
        CFI Block cfiBlock405 Using cfiCommon0
        CFI Function cJSON_PrintPreallocated
        CODE
// 1289 {
        FUNCALL cJSON_PrintPreallocated, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 18
        MOV     A,#-0x12
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 28)
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     A,#0x1c
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     A,#0x1e
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine207_0 & 0xFFFF
// 1290     printbuffer p = { 0, 0, 0, 0, 0, 0, { 0, 0, 0 } };
??CrossCallReturnLabel_507:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,_1` >> 8) & 0xff
        MOV     DPL,#`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,_1` & 0xff
        MOV     A,#0x12
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1291 
// 1292     if ((length < 0) || (buffer == NULL))
        CLR     C
        MOV     A,R7
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_494:
        JC      ??cJSON_PrintPreallocated_0
        MOV     A,R0
        ORL     A,R1
        JNZ     ??cJSON_PrintPreallocated_1
// 1293     {
// 1294         return false;
??cJSON_PrintPreallocated_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_PrintPreallocated_2
// 1295     }
// 1296 
// 1297     p.buffer = (unsigned char*)buffer;
??cJSON_PrintPreallocated_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
// 1298     p.length = (size_t)length;
??CrossCallReturnLabel_419:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
// 1299     p.offset = 0;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1300     p.noalloc = true;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        LCALL   ??Subroutine212_0 & 0xFFFF
// 1301     p.format = format;
??CrossCallReturnLabel_544:
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine206_0 & 0xFFFF
// 1302     p.hooks = global_hooks;
??CrossCallReturnLabel_500:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPH,#(global_hooks >> 8) & 0xff
        MOV     DPL,#global_hooks & 0xff
        MOV     A,#0x6
        LCALL   ?MOVE_LONG8_XDATA_XDATA
// 1303 
// 1304     return print_value(item, &p);
        ; Setup parameters for call to function print_value
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??print_value?relay
??cJSON_PrintPreallocated_2:
        MOV     A,#0x12
        LJMP    ??Subroutine159_0 & 0xFFFF
        CFI EndBlock cfiBlock405
// 1305 }
// 1306 
// 1307 /* Parser core - when encountering text, process appropriately. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1308 static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer)
parse_value:
        CFI Block cfiBlock406 Using cfiCommon0
        CFI Function parse_value
        CODE
// 1309 {
        FUNCALL parse_value, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, strncmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_string
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_number
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_value, parse_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1310     if ((input_buffer == NULL) || (input_buffer->content == NULL))
        MOV     A,R6
        ORL     A,R7
        JZ      ??parse_value_0
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_454:
        JNZ     ??parse_value_1
// 1311     {
// 1312         return false; /* no input */
??parse_value_0:
        MOV     R2,#0x0
??parse_value_2:
        MOV     R3,#0x0
        LJMP    ??parse_value_3 & 0xFFFF
// 1313     }
??parse_value_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_109:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_13:
        JC      ??parse_value_4
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "null">` & 0xff
        MOV     R5,#(`?<Constant "null">` >> 8) & 0xff
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_2:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??parse_value_4
// 1314 
// 1315     /* parse the different types of values */
// 1316     /* null */
// 1317     if (can_read(input_buffer, 4) && (strncmp((const char*)buffer_at_offset(input_buffer), "null", 4) == 0))
// 1318     {
// 1319         item->type = cJSON_NULL;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x4
??parse_value_5:
        LCALL   ?Subroutine91 & 0xFFFF
// 1320         input_buffer->offset += 4;
??CrossCallReturnLabel_338:
        ADD     A,#0x4
??parse_value_6:
        LCALL   ??Subroutine157_0 & 0xFFFF
// 1321         return true;
??CrossCallReturnLabel_232:
        MOV     R2,#0x1
        SJMP    ??parse_value_2
// 1322     }
??parse_value_4:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x5
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_14:
        JC      ??parse_value_7
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 2,#0x5
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "false">` & 0xff
        MOV     R5,#(`?<Constant "false">` >> 8) & 0xff
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_3:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??parse_value_7
// 1323     /* false */
// 1324     if (can_read(input_buffer, 5) && (strncmp((const char*)buffer_at_offset(input_buffer), "false", 5) == 0))
// 1325     {
// 1326         item->type = cJSON_False;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        LCALL   ?Subroutine91 & 0xFFFF
// 1327         input_buffer->offset += 5;
// 1328         return true;
// 1329     }
??CrossCallReturnLabel_339:
        ADD     A,#0x5
        SJMP    ??parse_value_6
??parse_value_7:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_110:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_15:
        JC      ??parse_value_8
        ; Setup parameters for call to function strncmp
        MOV     ?V0 + 2,#0x4
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,#`?<Constant "true">` & 0xff
        MOV     R5,#(`?<Constant "true">` >> 8) & 0xff
        LCALL   ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_4:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??parse_value_8
// 1330     /* true */
// 1331     if (can_read(input_buffer, 4) && (strncmp((const char*)buffer_at_offset(input_buffer), "true", 4) == 0))
// 1332     {
// 1333         item->type = cJSON_True;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        LCALL   ?Subroutine92 & 0xFFFF
// 1334         item->valueint = 1;
// 1335         input_buffer->offset += 4;
// 1336         return true;
// 1337     }
??CrossCallReturnLabel_148:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     A
        LJMP    ??parse_value_5 & 0xFFFF
??parse_value_8:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_623:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_16:
        JC      $+5
        LJMP    ??parse_value_0 & 0xFFFF
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_294:
        XRL     A,#0x22
        JNZ     ??parse_value_9
// 1338     /* string */
// 1339     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '\"'))
// 1340     {
// 1341         return parse_string(item, input_buffer);
        ; Setup parameters for call to function parse_string
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_string?relay
        SJMP    ??parse_value_3
// 1342     }
??parse_value_9:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_288:
        XRL     A,#0x2d
        JZ      ??parse_value_10
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_289:
        ADD     A,#-0x30
        CLR     C
        SUBB    A,#0xa
        JNC     ??parse_value_11
// 1343     /* number */
// 1344     if (can_access_at_index(input_buffer, 0) && ((buffer_at_offset(input_buffer)[0] == '-') || ((buffer_at_offset(input_buffer)[0] >= '0') && (buffer_at_offset(input_buffer)[0] <= '9'))))
// 1345     {
// 1346         return parse_number(item, input_buffer);
??parse_value_10:
        ; Setup parameters for call to function parse_number
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_number?relay
        SJMP    ??parse_value_3
// 1347     }
??parse_value_11:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_290:
        XRL     A,#0x5b
        JNZ     ??parse_value_12
// 1348     /* array */
// 1349     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '['))
// 1350     {
// 1351         return parse_array(item, input_buffer);
        ; Setup parameters for call to function parse_array
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_array?relay
        SJMP    ??parse_value_3
// 1352     }
??parse_value_12:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_291:
        XRL     A,#0x7b
        JZ      $+5
        LJMP    ??parse_value_0 & 0xFFFF
// 1353     /* object */
// 1354     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '{'))
// 1355     {
// 1356         return parse_object(item, input_buffer);
        ; Setup parameters for call to function parse_object
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??parse_object?relay
// 1357     }
??parse_value_3:
        LJMP    ??Subroutine182_0 & 0xFFFF
        CFI EndBlock cfiBlock406
// 1358 
// 1359     return false;
// 1360 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
        CFI Block cfiCond407 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_147
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond408 Using cfiCommon0
        CFI (cfiCond408) NoFunction
        CFI (cfiCond408) Conditional ??CrossCallReturnLabel_148
        CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond408) CFA_SP SP+0
        CFI (cfiCond408) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond409 Using cfiCommon0
        CFI (cfiCond409) NoFunction
        CFI (cfiCond409) Conditional ??CrossCallReturnLabel_149
        CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond409) CFA_SP SP+0
        CFI (cfiCond409) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker410 Using cfiCommon1
        CFI (cfiPicker410) NoFunction
        CFI (cfiPicker410) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond407
        CFI EndBlock cfiCond408
        CFI EndBlock cfiCond409
        CFI EndBlock cfiPicker410

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
        CFI Block cfiCond411 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_109
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-2
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond412 Using cfiCommon0
        CFI (cfiCond412) NoFunction
        CFI (cfiCond412) Conditional ??CrossCallReturnLabel_110
        CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond412) CFA_SP SP+-2
        CFI (cfiCond412) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker413 Using cfiCommon1
        CFI (cfiPicker413) NoFunction
        CFI (cfiPicker413) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond411
        CFI EndBlock cfiCond412
        CFI EndBlock cfiPicker413

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
        CFI Block cfiCond414 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_288
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond415 Using cfiCommon0
        CFI (cfiCond415) NoFunction
        CFI (cfiCond415) Conditional ??CrossCallReturnLabel_289
        CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond415) CFA_SP SP+0
        CFI (cfiCond415) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond416 Using cfiCommon0
        CFI (cfiCond416) NoFunction
        CFI (cfiCond416) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond416) CFA_SP SP+0
        CFI (cfiCond416) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond417 Using cfiCommon0
        CFI (cfiCond417) NoFunction
        CFI (cfiCond417) Conditional ??CrossCallReturnLabel_291
        CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond417) CFA_SP SP+0
        CFI (cfiCond417) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond418 Using cfiCommon0
        CFI (cfiCond418) NoFunction
        CFI (cfiCond418) Conditional ??CrossCallReturnLabel_292
        CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond418) CFA_SP SP+0
        CFI (cfiCond418) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker419 Using cfiCommon1
        CFI (cfiPicker419) NoFunction
        CFI (cfiPicker419) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond414
        CFI EndBlock cfiCond415
        CFI EndBlock cfiCond416
        CFI EndBlock cfiCond417
        CFI EndBlock cfiCond418
        CFI EndBlock cfiPicker419
        REQUIRE ??Subroutine166_0
        ; // Fall through to label ??Subroutine166_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine166_0:
        CFI Block cfiCond420 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_287
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond421 Using cfiCommon0
        CFI (cfiCond421) NoFunction
        CFI (cfiCond421) Conditional ??CrossCallReturnLabel_288
        CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond421) CFA_SP SP+0
        CFI (cfiCond421) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond422 Using cfiCommon0
        CFI (cfiCond422) NoFunction
        CFI (cfiCond422) Conditional ??CrossCallReturnLabel_289
        CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond422) CFA_SP SP+0
        CFI (cfiCond422) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond423 Using cfiCommon0
        CFI (cfiCond423) NoFunction
        CFI (cfiCond423) Conditional ??CrossCallReturnLabel_290
        CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond423) CFA_SP SP+0
        CFI (cfiCond423) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond424 Using cfiCommon0
        CFI (cfiCond424) NoFunction
        CFI (cfiCond424) Conditional ??CrossCallReturnLabel_291
        CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond424) CFA_SP SP+0
        CFI (cfiCond424) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond425 Using cfiCommon0
        CFI (cfiCond425) NoFunction
        CFI (cfiCond425) Conditional ??CrossCallReturnLabel_292
        CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond425) CFA_SP SP+0
        CFI (cfiCond425) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker426 Using cfiCommon1
        CFI (cfiPicker426) NoFunction
        CFI (cfiPicker426) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond420
        CFI EndBlock cfiCond421
        CFI EndBlock cfiCond422
        CFI EndBlock cfiCond423
        CFI EndBlock cfiCond424
        CFI EndBlock cfiCond425
        CFI EndBlock cfiPicker426

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
        CFI Block cfiCond427 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond428 Using cfiCommon0
        CFI (cfiCond428) NoFunction
        CFI (cfiCond428) Conditional ??CrossCallReturnLabel_3
        CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond428) CFA_SP SP+0
        CFI (cfiCond428) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond429 Using cfiCommon0
        CFI (cfiCond429) NoFunction
        CFI (cfiCond429) Conditional ??CrossCallReturnLabel_4
        CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond429) CFA_SP SP+0
        CFI (cfiCond429) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker430 Using cfiCommon1
        CFI (cfiPicker430) NoFunction
        CFI (cfiPicker430) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV     R3,A
        LCALL   ??strncmp?relay
        MOV     A,#0x2
        RET
        CFI EndBlock cfiCond427
        CFI EndBlock cfiCond428
        CFI EndBlock cfiCond429
        CFI EndBlock cfiPicker430

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
        CFI Block cfiCond431 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_294
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond432 Using cfiCommon0
        CFI (cfiCond432) NoFunction
        CFI (cfiCond432) Conditional ??CrossCallReturnLabel_295
        CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond432) CFA_SP SP+0
        CFI (cfiCond432) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond433 Using cfiCommon0
        CFI (cfiCond433) NoFunction
        CFI (cfiCond433) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond433) CFA_SP SP+0
        CFI (cfiCond433) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond434 Using cfiCommon0
        CFI (cfiCond434) NoFunction
        CFI (cfiCond434) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond434) CFA_SP SP+0
        CFI (cfiCond434) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker435 Using cfiCommon1
        CFI (cfiPicker435) NoFunction
        CFI (cfiPicker435) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CFI EndBlock cfiCond431
        CFI EndBlock cfiCond432
        CFI EndBlock cfiCond433
        CFI EndBlock cfiCond434
        CFI EndBlock cfiPicker435
        REQUIRE ??Subroutine167_0
        ; // Fall through to label ??Subroutine167_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine167_0:
        CFI Block cfiCond436 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_293
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond437 Using cfiCommon0
        CFI (cfiCond437) NoFunction
        CFI (cfiCond437) Conditional ??CrossCallReturnLabel_294
        CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond437) CFA_SP SP+0
        CFI (cfiCond437) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond438 Using cfiCommon0
        CFI (cfiCond438) NoFunction
        CFI (cfiCond438) Conditional ??CrossCallReturnLabel_295
        CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond438) CFA_SP SP+0
        CFI (cfiCond438) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond439 Using cfiCommon0
        CFI (cfiCond439) NoFunction
        CFI (cfiCond439) Conditional ??CrossCallReturnLabel_296
        CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond439) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond439) CFA_SP SP+0
        CFI (cfiCond439) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond440 Using cfiCommon0
        CFI (cfiCond440) NoFunction
        CFI (cfiCond440) Conditional ??CrossCallReturnLabel_297
        CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond440) CFA_SP SP+0
        CFI (cfiCond440) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker441 Using cfiCommon1
        CFI (cfiPicker441) NoFunction
        CFI (cfiPicker441) Picker
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_299:
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond436
        CFI EndBlock cfiCond437
        CFI EndBlock cfiCond438
        CFI EndBlock cfiCond439
        CFI EndBlock cfiCond440
        CFI EndBlock cfiPicker441

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
        CFI Block cfiCond442 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_2
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond443 Using cfiCommon0
        CFI (cfiCond443) NoFunction
        CFI (cfiCond443) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_3
        CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond443) CFA_SP SP+0
        CFI (cfiCond443) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond444 Using cfiCommon0
        CFI (cfiCond444) NoFunction
        CFI (cfiCond444) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_4
        CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond444) CFA_SP SP+0
        CFI (cfiCond444) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond445 Using cfiCommon0
        CFI (cfiCond445) NoFunction
        CFI (cfiCond445) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_294
        CFI (cfiCond445) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond445) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond445) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond445) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond445) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond445) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond445) CFA_SP SP+0
        CFI (cfiCond445) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond446 Using cfiCommon0
        CFI (cfiCond446) NoFunction
        CFI (cfiCond446) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_295
        CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond446) CFA_SP SP+0
        CFI (cfiCond446) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond447 Using cfiCommon0
        CFI (cfiCond447) NoFunction
        CFI (cfiCond447) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_296
        CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond447) CFA_SP SP+0
        CFI (cfiCond447) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond448 Using cfiCommon0
        CFI (cfiCond448) NoFunction
        CFI (cfiCond448) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_297
        CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond448) CFA_SP SP+0
        CFI (cfiCond448) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond449 Using cfiCommon0
        CFI (cfiCond449) NoFunction
        CFI (cfiCond449) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_293
        CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond449) CFA_SP SP+0
        CFI (cfiCond449) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker450 Using cfiCommon1
        CFI (cfiPicker450) NoFunction
        CFI (cfiPicker450) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_320:
        RET
        CFI EndBlock cfiCond442
        CFI EndBlock cfiCond443
        CFI EndBlock cfiCond444
        CFI EndBlock cfiCond445
        CFI EndBlock cfiCond446
        CFI EndBlock cfiCond447
        CFI EndBlock cfiCond448
        CFI EndBlock cfiCond449
        CFI EndBlock cfiPicker450

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine147:
        CFI Block cfiCond451 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_319
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond452 Using cfiCommon0
        CFI (cfiCond452) NoFunction
        CFI (cfiCond452) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_2
        CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond452) CFA_SP SP+0
        CFI (cfiCond452) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond453 Using cfiCommon0
        CFI (cfiCond453) NoFunction
        CFI (cfiCond453) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_3
        CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond453) CFA_SP SP+0
        CFI (cfiCond453) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond454 Using cfiCommon0
        CFI (cfiCond454) NoFunction
        CFI (cfiCond454) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_4
        CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond454) CFA_SP SP+0
        CFI (cfiCond454) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond455 Using cfiCommon0
        CFI (cfiCond455) NoFunction
        CFI (cfiCond455) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_294
        CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond455) CFA_SP SP+0
        CFI (cfiCond455) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond456 Using cfiCommon0
        CFI (cfiCond456) NoFunction
        CFI (cfiCond456) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_295
        CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond456) CFA_SP SP+0
        CFI (cfiCond456) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond457 Using cfiCommon0
        CFI (cfiCond457) NoFunction
        CFI (cfiCond457) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_296
        CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond457) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond457) CFA_SP SP+0
        CFI (cfiCond457) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond458 Using cfiCommon0
        CFI (cfiCond458) NoFunction
        CFI (cfiCond458) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_297
        CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond458) CFA_SP SP+0
        CFI (cfiCond458) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond459 Using cfiCommon0
        CFI (cfiCond459) NoFunction
        CFI (cfiCond459) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_293
        CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond459) CFA_SP SP+0
        CFI (cfiCond459) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond460 Using cfiCommon0
        CFI (cfiCond460) NoFunction
        CFI (cfiCond460) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_317
        CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond460) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond460) CFA_SP SP+0
        CFI (cfiCond460) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond461 Using cfiCommon0
        CFI (cfiCond461) NoFunction
        CFI (cfiCond461) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_318
        CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond461) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond461) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond461) CFA_SP SP+0
        CFI (cfiCond461) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond462 Using cfiCommon0
        CFI (cfiCond462) NoFunction
        CFI (cfiCond462) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_315
        CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond462) CFA_SP SP+0
        CFI (cfiCond462) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond463 Using cfiCommon0
        CFI (cfiCond463) NoFunction
        CFI (cfiCond463) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_316
        CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond463) CFA_SP SP+0
        CFI (cfiCond463) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker464 Using cfiCommon1
        CFI (cfiPicker464) NoFunction
        CFI (cfiPicker464) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        RET
        CFI EndBlock cfiCond451
        CFI EndBlock cfiCond452
        CFI EndBlock cfiCond453
        CFI EndBlock cfiCond454
        CFI EndBlock cfiCond455
        CFI EndBlock cfiCond456
        CFI EndBlock cfiCond457
        CFI EndBlock cfiCond458
        CFI EndBlock cfiCond459
        CFI EndBlock cfiCond460
        CFI EndBlock cfiCond461
        CFI EndBlock cfiCond462
        CFI EndBlock cfiCond463
        CFI EndBlock cfiPicker464
// 1361 
// 1362 /* Render a value to text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1363 static cJSON_bool print_value(const cJSON * const item, printbuffer * const output_buffer)
print_value:
        CFI Block cfiBlock465 Using cfiCommon0
        CFI Function print_value
        CODE
// 1364 {
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_number
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_string_ptr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_value, print_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1365     unsigned char *output = NULL;
// 1366 
// 1367     if ((item == NULL) || (output_buffer == NULL))
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??print_value_0
        MOV     A,R6
        ORL     A,R7
        JNZ     ??print_value_1
// 1368     {
// 1369         return false;
??print_value_0:
        MOV     R2,#0x0
??print_value_2:
        MOV     R3,#0x0
        LJMP    ??print_value_3 & 0xFFFF
// 1370     }
// 1371 
// 1372     switch ((item->type) & 0xFF)
??print_value_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??print_value_4
        DEC     A
        JZ      ??print_value_5
        ADD     A,#-0x2
        JZ      ??print_value_6
        ADD     A,#-0x4
        JZ      ??print_value_7
        ADD     A,#-0x8
        JZ      ??print_value_8
        ADD     A,#-0x10
        JZ      ??print_value_9
        ADD     A,#-0x20
        JZ      ??print_value_10
        ADD     A,#-0x40
        JZ      ??print_value_11
        SJMP    ??print_value_0
// 1373     {
// 1374         case cJSON_NULL:
// 1375             output = ensure(output_buffer, 5);
??print_value_6:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine113 & 0xFFFF
// 1376             if (output == NULL)
??CrossCallReturnLabel_300:
        JZ      ??print_value_0
// 1377             {
// 1378                 return false;
// 1379             }
// 1380             strcpy((char*)output, "null");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "null">` & 0xff
        MOV     R5,#(`?<Constant "null">` >> 8) & 0xff
??print_value_12:
        LCALL   ??strcpy?relay
// 1381             return true;
??print_value_13:
        MOV     R2,#0x1
        SJMP    ??print_value_2
// 1382 
// 1383         case cJSON_False:
// 1384             output = ensure(output_buffer, 6);
??print_value_4:
        ; Setup parameters for call to function ensure
        MOV     R4,#0x6
        LCALL   ??Subroutine168_0 & 0xFFFF
// 1385             if (output == NULL)
??CrossCallReturnLabel_302:
        JZ      ??print_value_0
// 1386             {
// 1387                 return false;
// 1388             }
// 1389             strcpy((char*)output, "false");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "false">` & 0xff
        MOV     R5,#(`?<Constant "false">` >> 8) & 0xff
        SJMP    ??print_value_12
// 1390             return true;
// 1391 
// 1392         case cJSON_True:
// 1393             output = ensure(output_buffer, 5);
??print_value_5:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine113 & 0xFFFF
// 1394             if (output == NULL)
??CrossCallReturnLabel_301:
        JZ      ??print_value_0
// 1395             {
// 1396                 return false;
// 1397             }
// 1398             strcpy((char*)output, "true");
        ; Setup parameters for call to function strcpy
        MOV     R4,#`?<Constant "true">` & 0xff
        MOV     R5,#(`?<Constant "true">` >> 8) & 0xff
        SJMP    ??print_value_12
// 1399             return true;
// 1400 
// 1401         case cJSON_Number:
// 1402             return print_number(item, output_buffer);
??print_value_7:
        ; Setup parameters for call to function print_number
        LCALL   ??print_number?relay
        SJMP    ??print_value_3
// 1403 
// 1404         case cJSON_Raw:
// 1405         {
// 1406             size_t raw_length = 0;
// 1407             if (item->valuestring == NULL)
??print_value_11:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_482:
        JZ      ??print_value_0
// 1408             {
// 1409                 return false;
// 1410             }
// 1411 
// 1412             raw_length = strlen(item->valuestring) + sizeof("");
        ; Setup parameters for call to function strlen
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_96:
        LCALL   ?Subroutine90 & 0xFFFF
// 1413             output = ensure(output_buffer, raw_length);
??CrossCallReturnLabel_146:
        ; Setup parameters for call to function ensure
        MOV     R4,?V0 + 2
        MOV     R5,A
        LCALL   ??Subroutine169_0 & 0xFFFF
// 1414             if (output == NULL)
??CrossCallReturnLabel_304:
        JZ      ??print_value_0
// 1415             {
// 1416                 return false;
// 1417             }
// 1418             memcpy(output, item->valuestring, raw_length);
        ; Setup parameters for call to function memcpy
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
// 1419             return true;
        SJMP    ??print_value_13
// 1420         }
// 1421 
// 1422         case cJSON_String:
// 1423             return print_string(item, output_buffer);
??print_value_8:
        ; Setup parameters for call to function print_string_ptr
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_100:
        SJMP    ??print_value_3
// 1424 
// 1425         case cJSON_Array:
// 1426             return print_array(item, output_buffer);
??print_value_9:
        ; Setup parameters for call to function print_array
        LCALL   ??print_array?relay
        SJMP    ??print_value_3
// 1427 
// 1428         case cJSON_Object:
// 1429             return print_object(item, output_buffer);
??print_value_10:
        ; Setup parameters for call to function print_object
        LCALL   ??print_object?relay
// 1430 
// 1431         default:
// 1432             return false;
// 1433     }
??print_value_3:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock465
// 1434 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
        CFI Block cfiCond466 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_300
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond467 Using cfiCommon0
        CFI (cfiCond467) NoFunction
        CFI (cfiCond467) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond467) CFA_SP SP+0
        CFI (cfiCond467) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker468 Using cfiCommon1
        CFI (cfiPicker468) NoFunction
        CFI (cfiPicker468) Picker
        MOV     R4,#0x5
        CFI EndBlock cfiCond466
        CFI EndBlock cfiCond467
        CFI EndBlock cfiPicker468
        REQUIRE ??Subroutine168_0
        ; // Fall through to label ??Subroutine168_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine168_0:
        CFI Block cfiCond469 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_302
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond470 Using cfiCommon0
        CFI (cfiCond470) NoFunction
        CFI (cfiCond470) Conditional ??CrossCallReturnLabel_300
        CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond470) CFA_SP SP+0
        CFI (cfiCond470) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond471 Using cfiCommon0
        CFI (cfiCond471) NoFunction
        CFI (cfiCond471) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond471) CFA_SP SP+0
        CFI (cfiCond471) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker472 Using cfiCommon1
        CFI (cfiPicker472) NoFunction
        CFI (cfiPicker472) Picker
        MOV     R5,#0x0
        CFI EndBlock cfiCond469
        CFI EndBlock cfiCond470
        CFI EndBlock cfiCond471
        CFI EndBlock cfiPicker472
        REQUIRE ??Subroutine169_0
        ; // Fall through to label ??Subroutine169_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine169_0:
        CFI Block cfiCond473 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_303
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond474 Using cfiCommon0
        CFI (cfiCond474) NoFunction
        CFI (cfiCond474) Conditional ??CrossCallReturnLabel_304
        CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond474) CFA_SP SP+0
        CFI (cfiCond474) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond475 Using cfiCommon0
        CFI (cfiCond475) NoFunction
        CFI (cfiCond475) Conditional ??CrossCallReturnLabel_302
        CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond475) CFA_SP SP+0
        CFI (cfiCond475) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond476 Using cfiCommon0
        CFI (cfiCond476) NoFunction
        CFI (cfiCond476) Conditional ??CrossCallReturnLabel_300
        CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond476) CFA_SP SP+0
        CFI (cfiCond476) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond477 Using cfiCommon0
        CFI (cfiCond477) NoFunction
        CFI (cfiCond477) Conditional ??CrossCallReturnLabel_301
        CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond477) CFA_SP SP+0
        CFI (cfiCond477) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker478 Using cfiCommon1
        CFI (cfiPicker478) NoFunction
        CFI (cfiPicker478) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ensure?relay
        MOV     A,R2
        ORL     A,R3
        RET
        CFI EndBlock cfiCond473
        CFI EndBlock cfiCond474
        CFI EndBlock cfiCond475
        CFI EndBlock cfiCond476
        CFI EndBlock cfiCond477
        CFI EndBlock cfiPicker478

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
        CFI Block cfiCond479 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_145
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond480 Using cfiCommon0
        CFI (cfiCond480) NoFunction
        CFI (cfiCond480) Conditional ??CrossCallReturnLabel_146
        CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond480) CFA_SP SP+0
        CFI (cfiCond480) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker481 Using cfiCommon1
        CFI (cfiPicker481) NoFunction
        CFI (cfiPicker481) Picker
        MOV     A,R2
        ADD     A,#0x1
        MOV     ?V0 + 2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond479
        CFI EndBlock cfiCond480
        CFI EndBlock cfiPicker481

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
        CFI Block cfiCond482 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_95
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond483 Using cfiCommon0
        CFI (cfiCond483) NoFunction
        CFI (cfiCond483) Conditional ??CrossCallReturnLabel_96
        CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond483) CFA_SP SP+0
        CFI (cfiCond483) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker484 Using cfiCommon1
        CFI (cfiPicker484) NoFunction
        CFI (cfiPicker484) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_541:
        LCALL   ??strlen?relay
        RET
        CFI EndBlock cfiCond482
        CFI EndBlock cfiCond483
        CFI EndBlock cfiPicker484
// 1435 
// 1436 /* Build an array from input text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1437 static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer)
parse_array:
        CFI Block cfiBlock485 Using cfiCommon0
        CFI Function parse_array
        CODE
// 1438 {
        FUNCALL parse_array, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, parse_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_array, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 1439     cJSON *head = NULL; /* head of the linked list */
        MOV     R6,#0x0
        MOV     R7,#0x0
// 1440     cJSON *current_item = NULL;
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R6
// 1441 
// 1442     if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#-0x18
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x3
        JC      ??parse_array_0
// 1443     {
// 1444         return false; /* to deeply nested */
??parse_array_1:
        MOV     R2,#0x0
// 1445     }
??parse_array_2:
        LJMP    ?Subroutine11 & 0xFFFF
// 1446     input_buffer->depth++;
??parse_array_0:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine154_0 & 0xFFFF
// 1447 
// 1448     if (buffer_at_offset(input_buffer)[0] != '[')
??CrossCallReturnLabel_236:
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL   ??Subroutine171_0 & 0xFFFF
??CrossCallReturnLabel_316:
        XRL     A,#0x5b
        JNZ     ??parse_array_1
// 1449     {
// 1450         /* not an array */
// 1451         goto fail;
// 1452     }
// 1453 
// 1454     input_buffer->offset++;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine35 & 0xFFFF
// 1455     buffer_skip_whitespace(input_buffer);
// 1456     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
??CrossCallReturnLabel_47:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??parse_array_3
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_619:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_17:
        JNC     ??parse_array_3
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_317:
        XRL     A,#0x5d
        JNZ     $+5
        LJMP    ??parse_array_4 & 0xFFFF
// 1457     {
// 1458         /* empty array */
// 1459         goto success;
// 1460     }
// 1461 
// 1462     /* check if we skipped to the end of the buffer */
// 1463     if (cannot_access_at_index(input_buffer, 0))
// 1464     {
// 1465         input_buffer->offset--;
// 1466         goto fail;
// 1467     }
// 1468 
// 1469     /* step back to character in front of the first element */
// 1470     input_buffer->offset--;
        LCALL   ?Subroutine58 & 0xFFFF
// 1471     /* loop through the comma separated array elements */
// 1472     do
// 1473     {
// 1474         /* allocate next item */
// 1475         cJSON *new_item = cJSON_New_Item(&(input_buffer->hooks));
??CrossCallReturnLabel_309:
        ; Setup parameters for call to function cJSON_New_Item
        MOV     A,?V0 + 0
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R0,?V0 + 6
        MOV     R1,?V0 + 7
// 1476         if (new_item == NULL)
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??parse_array_5 & 0xFFFF
// 1477         {
// 1478             goto fail; /* allocation failure */
// 1479         }
// 1480 
// 1481         /* attach next item to list */
// 1482         if (head == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??parse_array_6
// 1483         {
// 1484             /* start the linked list */
// 1485             current_item = head = new_item;
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     ?V0 + 2,R6
        MOV     ?V0 + 3,R7
        SJMP    ??parse_array_7
// 1486         }
??parse_array_3:
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_310:
        SJMP    ??parse_array_1
// 1487         else
// 1488         {
// 1489             /* add to the end and advance */
// 1490             current_item->next = new_item;
??parse_array_6:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine195_0 & 0xFFFF
// 1491             new_item->prev = current_item;
??CrossCallReturnLabel_420:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine100 & 0xFFFF
// 1492             current_item = new_item;
??CrossCallReturnLabel_336:
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
// 1493         }
// 1494 
// 1495         /* parse next value */
// 1496         input_buffer->offset++;
??parse_array_7:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine35 & 0xFFFF
// 1497         buffer_skip_whitespace(input_buffer);
// 1498         if (!parse_value(current_item, input_buffer))
??CrossCallReturnLabel_48:
        ; Setup parameters for call to function parse_value
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_192:
        JZ      ??parse_array_5
// 1499         {
// 1500             goto fail; /* failed to parse value */
// 1501         }
// 1502         buffer_skip_whitespace(input_buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??buffer_skip_whitespace?relay
// 1503     }
// 1504     while (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ','));
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_620:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_18:
        JNC     ??parse_array_5
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_318:
        XRL     A,#0x2c
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_309 & 0xFFFF
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine166_0 & 0xFFFF
??CrossCallReturnLabel_287:
        XRL     A,#0x5d
        JNZ     ??parse_array_5
// 1505 
// 1506     if (cannot_access_at_index(input_buffer, 0) || buffer_at_offset(input_buffer)[0] != ']')
// 1507     {
// 1508         goto fail; /* expected end of array */
// 1509     }
// 1510 
// 1511 success:
// 1512     input_buffer->depth--;
??parse_array_4:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine170_0 & 0xFFFF
// 1513 
// 1514     if (head != NULL) {
??CrossCallReturnLabel_306:
        MOV     A,R6
        ORL     A,R7
        JZ      ??CrossCallReturnLabel_337
// 1515         head->prev = current_item;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine100 & 0xFFFF
// 1516     }
// 1517 
// 1518     item->type = cJSON_Array;
??CrossCallReturnLabel_337:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine98 & 0xFFFF
// 1519     item->child = head;
??CrossCallReturnLabel_551:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine96 & 0xFFFF
// 1520 
// 1521     input_buffer->offset++;
??CrossCallReturnLabel_244:
        LCALL   ?Subroutine54 & 0xFFFF
// 1522 
// 1523     return true;
??CrossCallReturnLabel_81:
        LJMP    ??parse_array_2 & 0xFFFF
// 1524 
// 1525 fail:
// 1526     if (head != NULL)
??parse_array_5:
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??parse_array_1 & 0xFFFF
// 1527     {
// 1528         cJSON_Delete(head);
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        LJMP    ??parse_array_1 & 0xFFFF
        CFI EndBlock cfiBlock485
// 1529     }
// 1530 
// 1531     return false;
// 1532 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
        CFI Block cfiCond486 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_191
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond487 Using cfiCommon0
        CFI (cfiCond487) NoFunction
        CFI (cfiCond487) Conditional ??CrossCallReturnLabel_192
        CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond487) CFA_SP SP+0
        CFI (cfiCond487) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker488 Using cfiCommon1
        CFI (cfiPicker488) NoFunction
        CFI (cfiPicker488) Picker
        LCALL   ??parse_value?relay
        MOV     ?V0 + 7,R3
        MOV     A,R2
        ORL     A,?V0 + 7
        RET
        CFI EndBlock cfiCond486
        CFI EndBlock cfiCond487
        CFI EndBlock cfiPicker488

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
        CFI Block cfiCond489 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_309
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond490 Using cfiCommon0
        CFI (cfiCond490) NoFunction
        CFI (cfiCond490) Conditional ??CrossCallReturnLabel_310
        CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond490) CFA_SP SP+0
        CFI (cfiCond490) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker491 Using cfiCommon1
        CFI (cfiPicker491) NoFunction
        CFI (cfiPicker491) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond489
        CFI EndBlock cfiCond490
        CFI EndBlock cfiPicker491
        REQUIRE ??Subroutine170_0
        ; // Fall through to label ??Subroutine170_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine170_0:
        CFI Block cfiCond492 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_305
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond493 Using cfiCommon0
        CFI (cfiCond493) NoFunction
        CFI (cfiCond493) Conditional ??CrossCallReturnLabel_306
        CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond493) CFA_SP SP+0
        CFI (cfiCond493) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond494 Using cfiCommon0
        CFI (cfiCond494) NoFunction
        CFI (cfiCond494) Conditional ??CrossCallReturnLabel_307
        CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond494) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond494) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond494) CFA_SP SP+0
        CFI (cfiCond494) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond495 Using cfiCommon0
        CFI (cfiCond495) NoFunction
        CFI (cfiCond495) Conditional ??CrossCallReturnLabel_308
        CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond495) CFA_SP SP+0
        CFI (cfiCond495) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond496 Using cfiCommon0
        CFI (cfiCond496) NoFunction
        CFI (cfiCond496) Conditional ??CrossCallReturnLabel_309
        CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond496) CFA_SP SP+0
        CFI (cfiCond496) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond497 Using cfiCommon0
        CFI (cfiCond497) NoFunction
        CFI (cfiCond497) Conditional ??CrossCallReturnLabel_310
        CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond497) CFA_SP SP+0
        CFI (cfiCond497) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker498 Using cfiCommon1
        CFI (cfiPicker498) NoFunction
        CFI (cfiPicker498) Picker
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_312:
        RET
        CFI EndBlock cfiCond492
        CFI EndBlock cfiCond493
        CFI EndBlock cfiCond494
        CFI EndBlock cfiCond495
        CFI EndBlock cfiCond496
        CFI EndBlock cfiCond497
        CFI EndBlock cfiPicker498

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
        CFI Block cfiCond499 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_309
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond500 Using cfiCommon0
        CFI (cfiCond500) NoFunction
        CFI (cfiCond500) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_310
        CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond500) CFA_SP SP+0
        CFI (cfiCond500) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond501 Using cfiCommon0
        CFI (cfiCond501) NoFunction
        CFI (cfiCond501) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_305
        CFI (cfiCond501) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond501) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond501) CFA_SP SP+-5
        CFI Block cfiCond502 Using cfiCommon0
        CFI (cfiCond502) NoFunction
        CFI (cfiCond502) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_306
        CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond502) CFA_SP SP+0
        CFI (cfiCond502) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond503 Using cfiCommon0
        CFI (cfiCond503) NoFunction
        CFI (cfiCond503) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_307
        CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond503) CFA_SP SP+0
        CFI (cfiCond503) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond504 Using cfiCommon0
        CFI (cfiCond504) NoFunction
        CFI (cfiCond504) Conditional ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_308
        CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond504) CFA_SP SP+0
        CFI (cfiCond504) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond505 Using cfiCommon0
        CFI (cfiCond505) NoFunction
        CFI (cfiCond505) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_86
        CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond505) CFA_SP SP+0
        CFI (cfiCond505) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond506 Using cfiCommon0
        CFI (cfiCond506) NoFunction
        CFI (cfiCond506) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_87
        CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond506) CFA_SP SP+0
        CFI (cfiCond506) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker507 Using cfiCommon1
        CFI (cfiPicker507) NoFunction
        CFI (cfiPicker507) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_314:
        RET
        CFI EndBlock cfiCond499
        CFI EndBlock cfiCond500
        CFI EndBlock cfiCond501
        CFI EndBlock cfiCond502
        CFI EndBlock cfiCond503
        CFI EndBlock cfiCond504
        CFI EndBlock cfiCond505
        CFI EndBlock cfiCond506
        CFI EndBlock cfiPicker507

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine149:
        CFI Block cfiCond508 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_309
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond509 Using cfiCommon0
        CFI (cfiCond509) NoFunction
        CFI (cfiCond509) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_310
        CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond509) CFA_SP SP+0
        CFI (cfiCond509) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond510 Using cfiCommon0
        CFI (cfiCond510) NoFunction
        CFI (cfiCond510) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_305
        CFI (cfiCond510) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond510) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond510) CFA_SP SP+-5
        CFI Block cfiCond511 Using cfiCommon0
        CFI (cfiCond511) NoFunction
        CFI (cfiCond511) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_306
        CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond511) CFA_SP SP+0
        CFI (cfiCond511) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond512 Using cfiCommon0
        CFI (cfiCond512) NoFunction
        CFI (cfiCond512) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_307
        CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond512) CFA_SP SP+0
        CFI (cfiCond512) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond513 Using cfiCommon0
        CFI (cfiCond513) NoFunction
        CFI (cfiCond513) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_312, ??CrossCallReturnLabel_308
        CFI (cfiCond513) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond513) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond513) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond513) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond513) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond513) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond513) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond513) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond513) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond513) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond513) CFA_SP SP+0
        CFI (cfiCond513) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond514 Using cfiCommon0
        CFI (cfiCond514) NoFunction
        CFI (cfiCond514) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_86
        CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond514) CFA_SP SP+0
        CFI (cfiCond514) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond515 Using cfiCommon0
        CFI (cfiCond515) NoFunction
        CFI (cfiCond515) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_87
        CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond515) CFA_SP SP+0
        CFI (cfiCond515) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond516 Using cfiCommon0
        CFI (cfiCond516) NoFunction
        CFI (cfiCond516) Conditional ??CrossCallReturnLabel_313
        CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond516) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond516) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond516) CFA_SP SP+0
        CFI (cfiCond516) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker517 Using cfiCommon1
        CFI (cfiPicker517) NoFunction
        CFI (cfiPicker517) Picker
        ADD     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond508
        CFI EndBlock cfiCond509
        CFI EndBlock cfiCond510
        CFI EndBlock cfiCond511
        CFI EndBlock cfiCond512
        CFI EndBlock cfiCond513
        CFI EndBlock cfiCond514
        CFI EndBlock cfiCond515
        CFI EndBlock cfiCond516
        CFI EndBlock cfiPicker517

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
        CFI Block cfiCond518 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_47
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond519 Using cfiCommon0
        CFI (cfiCond519) NoFunction
        CFI (cfiCond519) Conditional ??CrossCallReturnLabel_48
        CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond519) CFA_SP SP+0
        CFI (cfiCond519) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker520 Using cfiCommon1
        CFI (cfiPicker520) NoFunction
        CFI (cfiPicker520) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_204:
        ; Setup parameters for call to function buffer_skip_whitespace
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??buffer_skip_whitespace?relay
        RET
        CFI EndBlock cfiCond518
        CFI EndBlock cfiCond519
        CFI EndBlock cfiPicker520

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
        CFI Block cfiCond521 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_317
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond522 Using cfiCommon0
        CFI (cfiCond522) NoFunction
        CFI (cfiCond522) Conditional ??CrossCallReturnLabel_318
        CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond522) CFA_SP SP+0
        CFI (cfiCond522) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker523 Using cfiCommon1
        CFI (cfiPicker523) NoFunction
        CFI (cfiPicker523) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_631:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond521
        CFI EndBlock cfiCond522
        CFI EndBlock cfiPicker523
        REQUIRE ??Subroutine171_0
        ; // Fall through to label ??Subroutine171_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine171_0:
        CFI Block cfiCond524 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_315
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond525 Using cfiCommon0
        CFI (cfiCond525) NoFunction
        CFI (cfiCond525) Conditional ??CrossCallReturnLabel_316
        CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond525) CFA_SP SP+0
        CFI (cfiCond525) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond526 Using cfiCommon0
        CFI (cfiCond526) NoFunction
        CFI (cfiCond526) Conditional ??CrossCallReturnLabel_317
        CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond526) CFA_SP SP+0
        CFI (cfiCond526) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond527 Using cfiCommon0
        CFI (cfiCond527) NoFunction
        CFI (cfiCond527) Conditional ??CrossCallReturnLabel_318
        CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond527) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond527) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond527) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond527) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond527) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond527) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond527) CFA_SP SP+0
        CFI (cfiCond527) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker528 Using cfiCommon1
        CFI (cfiPicker528) NoFunction
        CFI (cfiPicker528) Picker
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV     DPL,R2
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond524
        CFI EndBlock cfiCond525
        CFI EndBlock cfiCond526
        CFI EndBlock cfiCond527
        CFI EndBlock cfiPicker528

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
        CFI Block cfiBlock529 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        LJMP    ??Subroutine151_0 & 0xFFFF
        CFI EndBlock cfiBlock529
// 1533 
// 1534 /* Render an array to text */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1535 static cJSON_bool print_array(const cJSON * const item, printbuffer * const output_buffer)
print_array:
        CFI Block cfiBlock530 Using cfiCommon0
        CFI Function print_array
        CODE
// 1536 {
        FUNCALL print_array, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_array, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL   ?Subroutine39 & 0xFFFF
// 1537     unsigned char *output_pointer = NULL;
// 1538     size_t length = 0;
// 1539     cJSON *current_element = item->child;
// 1540 
// 1541     if (output_buffer == NULL)
??CrossCallReturnLabel_330:
        JNZ     ??print_array_0
// 1542     {
// 1543         return false;
??print_array_1:
        MOV     R2,#0x0
        SJMP    ??CrossCallReturnLabel_86
// 1544     }
// 1545 
// 1546     /* Compose the output array. */
// 1547     /* opening square bracket */
// 1548     output_pointer = ensure(output_buffer, 1);
??print_array_0:
        ; Setup parameters for call to function ensure
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine111 & 0xFFFF
// 1549     if (output_pointer == NULL)
??CrossCallReturnLabel_175:
        JZ      ??print_array_1
// 1550     {
// 1551         return false;
// 1552     }
// 1553 
// 1554     *output_pointer = '[';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x5b
        LCALL   ?Subroutine143 & 0xFFFF
// 1555     output_buffer->offset++;
??CrossCallReturnLabel_218:
        LCALL   ??Subroutine155_0 & 0xFFFF
// 1556     output_buffer->depth++;
??CrossCallReturnLabel_235:
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_237:
        SJMP    ??CrossCallReturnLabel_512
// 1557 
// 1558     while (current_element != NULL)
// 1559     {
// 1560         if (!print_value(current_element, output_buffer))
// 1561         {
// 1562             return false;
// 1563         }
// 1564         update_offset(output_buffer);
// 1565         if (current_element->next)
// 1566         {
// 1567             length = (size_t) (output_buffer->format ? 2 : 1);
??print_array_2:
        MOV     ?V0 + 2,#0x1
// 1568             output_pointer = ensure(output_buffer, length + 1);
??print_array_3:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine83 & 0xFFFF
// 1569             if (output_pointer == NULL)
??CrossCallReturnLabel_325:
        JZ      ??print_array_1
// 1570             {
// 1571                 return false;
// 1572             }
// 1573             *output_pointer++ = ',';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x2c
        LCALL   ?Subroutine21 & 0xFFFF
// 1574             if(output_buffer->format)
??CrossCallReturnLabel_369:
        JZ      ??print_array_4
// 1575             {
// 1576                 *output_pointer++ = ' ';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x20
        MOVX    @DPTR,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
// 1577             }
// 1578             *output_pointer = '\0';
??print_array_4:
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
// 1579             output_buffer->offset += length;
        LCALL   ?Subroutine40 & 0xFFFF
// 1580         }
// 1581         current_element = current_element->next;
??CrossCallReturnLabel_56:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_512:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??print_array_5
        ; Setup parameters for call to function print_value
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_322:
        JZ      ??print_array_1
        ; Setup parameters for call to function update_offset
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_455:
        JZ      ??CrossCallReturnLabel_56
        LCALL   ??Subroutine196_0 & 0xFFFF
// 1582     }
??CrossCallReturnLabel_486:
        JZ      ??print_array_2
        MOV     ?V0 + 2,#0x2
        SJMP    ??print_array_3
// 1583 
// 1584     output_pointer = ensure(output_buffer, 2);
??print_array_5:
        ; Setup parameters for call to function ensure
        MOV     R4,#0x2
        MOV     R5,#0x0
        LCALL   ?Subroutine112 & 0xFFFF
// 1585     if (output_pointer == NULL)
??CrossCallReturnLabel_177:
        JZ      ??print_array_1
// 1586     {
// 1587         return false;
// 1588     }
// 1589     *output_pointer++ = ']';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x5d
        LCALL   ?Subroutine57 & 0xFFFF
// 1590     *output_pointer = '\0';
// 1591     output_buffer->depth--;
// 1592 
// 1593     return true;
??CrossCallReturnLabel_86:
        LJMP    ?Subroutine4 & 0xFFFF
        CFI EndBlock cfiBlock530
// 1594 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
        CFI Block cfiCond531 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_189
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond532 Using cfiCommon0
        CFI (cfiCond532) NoFunction
        CFI (cfiCond532) Conditional ??CrossCallReturnLabel_190
        CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond532) CFA_SP SP+0
        CFI (cfiCond532) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker533 Using cfiCommon1
        CFI (cfiPicker533) NoFunction
        CFI (cfiPicker533) Picker
        LCALL   ??update_offset?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
        CFI EndBlock cfiCond531
        CFI EndBlock cfiCond532
        CFI EndBlock cfiPicker533

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
        CFI Block cfiCond534 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_322
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond535 Using cfiCommon0
        CFI (cfiCond535) NoFunction
        CFI (cfiCond535) Conditional ??CrossCallReturnLabel_323
        CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond535) CFA_SP SP+0
        CFI (cfiCond535) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker536 Using cfiCommon1
        CFI (cfiPicker536) NoFunction
        CFI (cfiPicker536) Picker
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        CFI EndBlock cfiCond534
        CFI EndBlock cfiCond535
        CFI EndBlock cfiPicker536
        REQUIRE ??Subroutine172_0
        ; // Fall through to label ??Subroutine172_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine172_0:
        CFI Block cfiCond537 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_324
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond538 Using cfiCommon0
        CFI (cfiCond538) NoFunction
        CFI (cfiCond538) Conditional ??CrossCallReturnLabel_322
        CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond538) CFA_SP SP+0
        CFI (cfiCond538) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond539 Using cfiCommon0
        CFI (cfiCond539) NoFunction
        CFI (cfiCond539) Conditional ??CrossCallReturnLabel_323
        CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond539) CFA_SP SP+0
        CFI (cfiCond539) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker540 Using cfiCommon1
        CFI (cfiPicker540) NoFunction
        CFI (cfiPicker540) Picker
        LCALL   ??print_value?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        RET
        CFI EndBlock cfiCond537
        CFI EndBlock cfiCond538
        CFI EndBlock cfiCond539
        CFI EndBlock cfiPicker540

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
        CFI Block cfiCond541 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_325
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond542 Using cfiCommon0
        CFI (cfiCond542) NoFunction
        CFI (cfiCond542) Conditional ??CrossCallReturnLabel_326
        CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond542) CFA_SP SP+0
        CFI (cfiCond542) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker543 Using cfiCommon1
        CFI (cfiPicker543) NoFunction
        CFI (cfiPicker543) Picker
        MOV     A,?V0 + 2
        ADD     A,#0x1
        MOV     R4,A
        CLR     A
        CFI EndBlock cfiCond541
        CFI EndBlock cfiCond542
        CFI EndBlock cfiPicker543
        REQUIRE ??Subroutine173_0
        ; // Fall through to label ??Subroutine173_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine173_0:
        CFI Block cfiCond544 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_327
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond545 Using cfiCommon0
        CFI (cfiCond545) NoFunction
        CFI (cfiCond545) Conditional ??CrossCallReturnLabel_325
        CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond545) CFA_SP SP+0
        CFI (cfiCond545) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond546 Using cfiCommon0
        CFI (cfiCond546) NoFunction
        CFI (cfiCond546) Conditional ??CrossCallReturnLabel_326
        CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond546) CFA_SP SP+0
        CFI (cfiCond546) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker547 Using cfiCommon1
        CFI (cfiPicker547) NoFunction
        CFI (cfiPicker547) Picker
        ADDC    A,#0x0
        MOV     R5,A
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_328:
        RET
        CFI EndBlock cfiCond544
        CFI EndBlock cfiCond545
        CFI EndBlock cfiCond546
        CFI EndBlock cfiPicker547

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine145:
        CFI Block cfiCond548 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_325
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond549 Using cfiCommon0
        CFI (cfiCond549) NoFunction
        CFI (cfiCond549) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_326
        CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond549) CFA_SP SP+0
        CFI (cfiCond549) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond550 Using cfiCommon0
        CFI (cfiCond550) NoFunction
        CFI (cfiCond550) Conditional ??CrossCallReturnLabel_328, ??CrossCallReturnLabel_327
        CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond550) CFA_SP SP+0
        CFI (cfiCond550) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond551 Using cfiCommon0
        CFI (cfiCond551) NoFunction
        CFI (cfiCond551) Conditional ??CrossCallReturnLabel_329
        CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond551) CFA_SP SP+0
        CFI (cfiCond551) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker552 Using cfiCommon1
        CFI (cfiPicker552) NoFunction
        CFI (cfiPicker552) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ensure?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R0,?V0 + 4
        MOV     R1,?V0 + 5
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond548
        CFI EndBlock cfiCond549
        CFI EndBlock cfiCond550
        CFI EndBlock cfiCond551
        CFI EndBlock cfiPicker552

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
        CFI Block cfiCond553 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_330
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond554 Using cfiCommon0
        CFI (cfiCond554) NoFunction
        CFI (cfiCond554) Conditional ??CrossCallReturnLabel_331
        CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond554) CFA_SP SP+0
        CFI (cfiCond554) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker555 Using cfiCommon1
        CFI (cfiPicker555) NoFunction
        CFI (cfiPicker555) Picker
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond553
        CFI EndBlock cfiCond554
        CFI EndBlock cfiPicker555
        REQUIRE ??Subroutine174_0
        ; // Fall through to label ??Subroutine174_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine174_0:
        CFI Block cfiCond556 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_332
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond557 Using cfiCommon0
        CFI (cfiCond557) NoFunction
        CFI (cfiCond557) Conditional ??CrossCallReturnLabel_330
        CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond557) CFA_SP SP+0
        CFI (cfiCond557) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond558 Using cfiCommon0
        CFI (cfiCond558) NoFunction
        CFI (cfiCond558) Conditional ??CrossCallReturnLabel_331
        CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond558) CFA_SP SP+0
        CFI (cfiCond558) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker559 Using cfiCommon1
        CFI (cfiPicker559) NoFunction
        CFI (cfiPicker559) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_522:
        MOV     A,R6
        ORL     A,R7
        RET
        CFI EndBlock cfiCond556
        CFI EndBlock cfiCond557
        CFI EndBlock cfiCond558
        CFI EndBlock cfiPicker559
// 1595 
// 1596 /* Build an object from the text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1597 static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer)
parse_object:
        CFI Block cfiBlock560 Using cfiCommon0
        CFI Function parse_object
        CODE
// 1598 {
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, parse_string
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, parse_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, buffer_skip_whitespace
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL parse_object, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1599     cJSON *head = NULL; /* linked list head */
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 1600     cJSON *current_item = NULL;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
// 1601 
// 1602     if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#-0x18
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x3
        JC      ??parse_object_0
// 1603     {
// 1604         return false; /* to deeply nested */
??parse_object_1:
        MOV     R2,#0x0
// 1605     }
??parse_object_2:
        LJMP    ?Subroutine11 & 0xFFFF
// 1606     input_buffer->depth++;
??parse_object_0:
        LCALL   ?Subroutine55 & 0xFFFF
// 1607 
// 1608     if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '{'))
??CrossCallReturnLabel_238:
        MOV     A,R6
        ORL     A,R7
        JZ      ??parse_object_1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_624:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_19:
        JNC     ??parse_object_1
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_295:
        XRL     A,#0x7b
        JNZ     ??parse_object_1
// 1609     {
// 1610         goto fail; /* not an object */
// 1611     }
// 1612 
// 1613     input_buffer->offset++;
        MOV     A,R6
        ADD     A,#0x4
        MOV     ?V0 + 4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     DPL,?V0 + 4
        MOV     DPH,A
        LCALL   ??Subroutine156_0 & 0xFFFF
// 1614     buffer_skip_whitespace(input_buffer);
??CrossCallReturnLabel_233:
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
// 1615     if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '}'))
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_625:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_20:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNC     ??parse_object_3
        LCALL   ??Subroutine167_0 & 0xFFFF
??CrossCallReturnLabel_293:
        XRL     A,#0x7d
        JNZ     $+5
        LJMP    ??parse_object_4 & 0xFFFF
// 1616     {
// 1617         goto success; /* empty object */
// 1618     }
// 1619 
// 1620     /* check if we skipped to the end of the buffer */
// 1621     if (cannot_access_at_index(input_buffer, 0))
// 1622     {
// 1623         input_buffer->offset--;
// 1624         goto fail;
// 1625     }
// 1626 
// 1627     /* step back to character in front of the first element */
// 1628     input_buffer->offset--;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine170_0 & 0xFFFF
// 1629     /* loop through the comma separated array elements */
// 1630     do
// 1631     {
// 1632         /* allocate next item */
// 1633         cJSON *new_item = cJSON_New_Item(&(input_buffer->hooks));
??CrossCallReturnLabel_307:
        ; Setup parameters for call to function cJSON_New_Item
        MOV     A,R6
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     R0,?V0 + 4
        MOV     R1,?V0 + 5
// 1634         if (new_item == NULL)
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??parse_object_5 & 0xFFFF
// 1635         {
// 1636             goto fail; /* allocation failure */
// 1637         }
// 1638 
// 1639         /* attach next item to list */
// 1640         if (head == NULL)
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??parse_object_6
// 1641         {
// 1642             /* start the linked list */
// 1643             current_item = head = new_item;
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        SJMP    ??CrossCallReturnLabel_504
// 1644         }
??parse_object_3:
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_313:
        LJMP    ??parse_object_1 & 0xFFFF
// 1645         else
// 1646         {
// 1647             /* add to the end and advance */
// 1648             current_item->next = new_item;
??parse_object_6:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
// 1649             new_item->prev = current_item;
??CrossCallReturnLabel_421:
        LCALL   ?Subroutine94 & 0xFFFF
// 1650             current_item = new_item;
??CrossCallReturnLabel_504:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
// 1651         }
// 1652 
// 1653         /* parse the name of the child */
// 1654         input_buffer->offset++;
        LCALL   ?Subroutine29 & 0xFFFF
// 1655         buffer_skip_whitespace(input_buffer);
// 1656         if (!parse_string(current_item, input_buffer))
??CrossCallReturnLabel_33:
        LCALL   ??parse_string?relay
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JNZ     $+5
        LJMP    ??parse_object_5 & 0xFFFF
// 1657         {
// 1658             goto fail; /* failed to parse name */
// 1659         }
// 1660         buffer_skip_whitespace(input_buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
// 1661 
// 1662         /* swap valuestring and string, because we parsed the name */
// 1663         current_item->string = current_item->valuestring;
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_174:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL   ??Subroutine219_0 & 0xFFFF
// 1664         current_item->valuestring = NULL;
??CrossCallReturnLabel_574:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine99 & 0xFFFF
// 1665 
// 1666         if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
??CrossCallReturnLabel_154:
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_626:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_21:
        JNC     ??parse_object_5
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_296:
        XRL     A,#0x3a
        JNZ     ??parse_object_5
// 1667         {
// 1668             goto fail; /* invalid object */
// 1669         }
// 1670 
// 1671         /* parse the value */
// 1672         input_buffer->offset++;
        LCALL   ?Subroutine29 & 0xFFFF
// 1673         buffer_skip_whitespace(input_buffer);
// 1674         if (!parse_value(current_item, input_buffer))
??CrossCallReturnLabel_34:
        LCALL   ??parse_value?relay
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??parse_object_5
// 1675         {
// 1676             goto fail; /* failed to parse value */
// 1677         }
// 1678         buffer_skip_whitespace(input_buffer);
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
// 1679     }
// 1680     while (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ','));
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        PUSH    DPL
        CFI CFA_SP SP+-1
        PUSH    DPH
        CFI CFA_SP SP+-2
        LCALL   ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_627:
        POP     DPH
        CFI CFA_SP SP+-1
        POP     DPL
        CFI CFA_SP SP+0
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_22:
        JNC     ??parse_object_5
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_297:
        XRL     A,#0x2c
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_307 & 0xFFFF
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_292:
        XRL     A,#0x7d
        JNZ     ??parse_object_5
// 1681 
// 1682     if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '}'))
// 1683     {
// 1684         goto fail; /* expected end of object */
// 1685     }
// 1686 
// 1687 success:
// 1688     input_buffer->depth--;
??parse_object_4:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine170_0 & 0xFFFF
// 1689 
// 1690     if (head != NULL) {
??CrossCallReturnLabel_308:
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JZ      ??CrossCallReturnLabel_503
// 1691         head->prev = current_item;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine205_0 & 0xFFFF
// 1692     }
// 1693 
// 1694     item->type = cJSON_Object;
??CrossCallReturnLabel_503:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        LCALL   ?Subroutine97 & 0xFFFF
// 1695     item->child = head;
??CrossCallReturnLabel_153:
        LCALL   ??Subroutine175_0 & 0xFFFF
// 1696 
// 1697     input_buffer->offset++;
??CrossCallReturnLabel_335:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine54 & 0xFFFF
// 1698     return true;
??CrossCallReturnLabel_82:
        LJMP    ??parse_object_2 & 0xFFFF
// 1699 
// 1700 fail:
// 1701     if (head != NULL)
??parse_object_5:
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??parse_object_1 & 0xFFFF
// 1702     {
// 1703         cJSON_Delete(head);
        ; Setup parameters for call to function cJSON_Delete
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??cJSON_Delete?relay
        LJMP    ??parse_object_1 & 0xFFFF
        CFI EndBlock cfiBlock560
// 1704     }
// 1705 
// 1706     return false;
// 1707 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
        CFI Block cfiCond561 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_173
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond562 Using cfiCommon0
        CFI (cfiCond562) NoFunction
        CFI (cfiCond562) Conditional ??CrossCallReturnLabel_174
        CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond562) CFA_SP SP+0
        CFI (cfiCond562) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker563 Using cfiCommon1
        CFI (cfiPicker563) NoFunction
        CFI (cfiPicker563) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        RET
        CFI EndBlock cfiCond561
        CFI EndBlock cfiCond562
        CFI EndBlock cfiPicker563

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
        CFI Block cfiCond564 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_336
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond565 Using cfiCommon0
        CFI (cfiCond565) NoFunction
        CFI (cfiCond565) Conditional ??CrossCallReturnLabel_337
        CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond565) CFA_SP SP+0
        CFI (cfiCond565) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker566 Using cfiCommon1
        CFI (cfiPicker566) NoFunction
        CFI (cfiPicker566) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond564
        CFI EndBlock cfiCond565
        CFI EndBlock cfiPicker566
        REQUIRE ??Subroutine175_0
        ; // Fall through to label ??Subroutine175_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine175_0:
        CFI Block cfiCond567 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_333
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond568 Using cfiCommon0
        CFI (cfiCond568) NoFunction
        CFI (cfiCond568) Conditional ??CrossCallReturnLabel_334
        CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond568) CFA_SP SP+0
        CFI (cfiCond568) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond569 Using cfiCommon0
        CFI (cfiCond569) NoFunction
        CFI (cfiCond569) Conditional ??CrossCallReturnLabel_335
        CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond569) CFA_SP SP+0
        CFI (cfiCond569) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond570 Using cfiCommon0
        CFI (cfiCond570) NoFunction
        CFI (cfiCond570) Conditional ??CrossCallReturnLabel_336
        CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond570) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond570) CFA_SP SP+0
        CFI (cfiCond570) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond571 Using cfiCommon0
        CFI (cfiCond571) NoFunction
        CFI (cfiCond571) Conditional ??CrossCallReturnLabel_337
        CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond571) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond571) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond571) CFA_SP SP+0
        CFI (cfiCond571) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker572 Using cfiCommon1
        CFI (cfiPicker572) NoFunction
        CFI (cfiPicker572) Picker
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond567
        CFI EndBlock cfiCond568
        CFI EndBlock cfiCond569
        CFI EndBlock cfiCond570
        CFI EndBlock cfiCond571
        CFI EndBlock cfiPicker572

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
        CFI Block cfiCond573 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_152
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond574 Using cfiCommon0
        CFI (cfiCond574) NoFunction
        CFI (cfiCond574) Conditional ??CrossCallReturnLabel_153
        CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond574) CFA_SP SP+0
        CFI (cfiCond574) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker575 Using cfiCommon1
        CFI (cfiPicker575) NoFunction
        CFI (cfiPicker575) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond573
        CFI EndBlock cfiCond574
        CFI EndBlock cfiPicker575

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
        CFI Block cfiCond576 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_81
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond577 Using cfiCommon0
        CFI (cfiCond577) NoFunction
        CFI (cfiCond577) Conditional ??CrossCallReturnLabel_82
        CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond577) CFA_SP SP+0
        CFI (cfiCond577) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker578 Using cfiCommon1
        CFI (cfiPicker578) NoFunction
        CFI (cfiPicker578) Picker
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV     R2,#0x1
        RET
        CFI EndBlock cfiCond576
        CFI EndBlock cfiCond577
        CFI EndBlock cfiPicker578

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
        CFI Block cfiCond579 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_47
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond580 Using cfiCommon0
        CFI (cfiCond580) NoFunction
        CFI (cfiCond580) Conditional ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_48
        CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond580) CFA_SP SP+0
        CFI (cfiCond580) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond581 Using cfiCommon0
        CFI (cfiCond581) NoFunction
        CFI (cfiCond581) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_81
        CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond581) CFA_SP SP+0
        CFI (cfiCond581) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond582 Using cfiCommon0
        CFI (cfiCond582) NoFunction
        CFI (cfiCond582) Conditional ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_82
        CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond582) CFA_SP SP+0
        CFI (cfiCond582) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond583 Using cfiCommon0
        CFI (cfiCond583) NoFunction
        CFI (cfiCond583) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_33
        CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond583) CFA_SP SP+0
        CFI (cfiCond583) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond584 Using cfiCommon0
        CFI (cfiCond584) NoFunction
        CFI (cfiCond584) Conditional ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_34
        CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond584) CFA_SP SP+0
        CFI (cfiCond584) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker585 Using cfiCommon1
        CFI (cfiPicker585) NoFunction
        CFI (cfiPicker585) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#0x1
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_241:
        RET
        CFI EndBlock cfiCond579
        CFI EndBlock cfiCond580
        CFI EndBlock cfiCond581
        CFI EndBlock cfiCond582
        CFI EndBlock cfiCond583
        CFI EndBlock cfiCond584
        CFI EndBlock cfiPicker585

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine148:
        CFI Block cfiCond586 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_237
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond587 Using cfiCommon0
        CFI (cfiCond587) NoFunction
        CFI (cfiCond587) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_238
        CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond587) CFA_SP SP+0
        CFI (cfiCond587) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond588 Using cfiCommon0
        CFI (cfiCond588) NoFunction
        CFI (cfiCond588) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_239
        CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond588) CFA_SP SP+0
        CFI (cfiCond588) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond589 Using cfiCommon0
        CFI (cfiCond589) NoFunction
        CFI (cfiCond589) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_236
        CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond589) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond589) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond589) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond589) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond589) CFA_SP SP+0
        CFI (cfiCond589) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond590 Using cfiCommon0
        CFI (cfiCond590) NoFunction
        CFI (cfiCond590) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_234
        CFI (cfiCond590) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond590) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond590) CFA_SP SP+-5
        CFI Block cfiCond591 Using cfiCommon0
        CFI (cfiCond591) NoFunction
        CFI (cfiCond591) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_235
        CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond591) CFA_SP SP+0
        CFI (cfiCond591) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond592 Using cfiCommon0
        CFI (cfiCond592) NoFunction
        CFI (cfiCond592) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_233
        CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond592) CFA_SP SP+0
        CFI (cfiCond592) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond593 Using cfiCommon0
        CFI (cfiCond593) NoFunction
        CFI (cfiCond593) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_231
        CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond593) CFA_SP SP+0
        CFI (cfiCond593) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond594 Using cfiCommon0
        CFI (cfiCond594) NoFunction
        CFI (cfiCond594) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_232
        CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond594) CFA_SP SP+0
        CFI (cfiCond594) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond595 Using cfiCommon0
        CFI (cfiCond595) NoFunction
        CFI (cfiCond595) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_47
        CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond595) CFA_SP SP+0
        CFI (cfiCond595) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond596 Using cfiCommon0
        CFI (cfiCond596) NoFunction
        CFI (cfiCond596) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_204, ??CrossCallReturnLabel_48
        CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond596) CFA_SP SP+0
        CFI (cfiCond596) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond597 Using cfiCommon0
        CFI (cfiCond597) NoFunction
        CFI (cfiCond597) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_81
        CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond597) CFA_SP SP+0
        CFI (cfiCond597) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond598 Using cfiCommon0
        CFI (cfiCond598) NoFunction
        CFI (cfiCond598) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_205, ??CrossCallReturnLabel_82
        CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond598) CFA_SP SP+0
        CFI (cfiCond598) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond599 Using cfiCommon0
        CFI (cfiCond599) NoFunction
        CFI (cfiCond599) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_33
        CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond599) CFA_SP SP+0
        CFI (cfiCond599) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond600 Using cfiCommon0
        CFI (cfiCond600) NoFunction
        CFI (cfiCond600) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_203, ??CrossCallReturnLabel_34
        CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond600) CFA_SP SP+0
        CFI (cfiCond600) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond601 Using cfiCommon0
        CFI (cfiCond601) NoFunction
        CFI (cfiCond601) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_56
        CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond601) CFA_SP SP+0
        CFI (cfiCond601) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond602 Using cfiCommon0
        CFI (cfiCond602) NoFunction
        CFI (cfiCond602) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_57
        CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond602) CFA_SP SP+0
        CFI (cfiCond602) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond603 Using cfiCommon0
        CFI (cfiCond603) NoFunction
        CFI (cfiCond603) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_58
        CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond603) CFA_SP SP+0
        CFI (cfiCond603) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker604 Using cfiCommon1
        CFI (cfiPicker604) NoFunction
        CFI (cfiPicker604) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond586
        CFI EndBlock cfiCond587
        CFI EndBlock cfiCond588
        CFI EndBlock cfiCond589
        CFI EndBlock cfiCond590
        CFI EndBlock cfiCond591
        CFI EndBlock cfiCond592
        CFI EndBlock cfiCond593
        CFI EndBlock cfiCond594
        CFI EndBlock cfiCond595
        CFI EndBlock cfiCond596
        CFI EndBlock cfiCond597
        CFI EndBlock cfiCond598
        CFI EndBlock cfiCond599
        CFI EndBlock cfiCond600
        CFI EndBlock cfiCond601
        CFI EndBlock cfiCond602
        CFI EndBlock cfiCond603
        CFI EndBlock cfiPicker604

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
        CFI Block cfiCond605 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_45
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond606 Using cfiCommon0
        CFI (cfiCond606) NoFunction
        CFI (cfiCond606) Conditional ??CrossCallReturnLabel_46
        CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond606) CFA_SP SP+0
        CFI (cfiCond606) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker607 Using cfiCommon1
        CFI (cfiPicker607) NoFunction
        CFI (cfiPicker607) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_533:
        MOV     A,?V0 + 0
        ADD     A,#0x10
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_648:
        RET
        CFI EndBlock cfiCond605
        CFI EndBlock cfiCond606
        CFI EndBlock cfiPicker607

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
        CFI Block cfiCond608 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_132
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond609 Using cfiCommon0
        CFI (cfiCond609) NoFunction
        CFI (cfiCond609) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_133
        CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond609) CFA_SP SP+0
        CFI (cfiCond609) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond610 Using cfiCommon0
        CFI (cfiCond610) NoFunction
        CFI (cfiCond610) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_134
        CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond610) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond610) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond610) CFA_SP SP+0
        CFI (cfiCond610) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond611 Using cfiCommon0
        CFI (cfiCond611) NoFunction
        CFI (cfiCond611) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_28
        CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond611) CFA_SP SP+0
        CFI (cfiCond611) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond612 Using cfiCommon0
        CFI (cfiCond612) NoFunction
        CFI (cfiCond612) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_29
        CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond612) CFA_SP SP+0
        CFI (cfiCond612) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond613 Using cfiCommon0
        CFI (cfiCond613) NoFunction
        CFI (cfiCond613) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_45
        CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond613) CFA_SP SP+0
        CFI (cfiCond613) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond614 Using cfiCommon0
        CFI (cfiCond614) NoFunction
        CFI (cfiCond614) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_46
        CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond614) CFA_SP SP+0
        CFI (cfiCond614) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker615 Using cfiCommon1
        CFI (cfiPicker615) NoFunction
        CFI (cfiPicker615) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond608
        CFI EndBlock cfiCond609
        CFI EndBlock cfiCond610
        CFI EndBlock cfiCond611
        CFI EndBlock cfiCond612
        CFI EndBlock cfiCond613
        CFI EndBlock cfiCond614
        CFI EndBlock cfiPicker615
        REQUIRE ??Subroutine176_0
        ; // Fall through to label ??Subroutine176_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine176_0:
        CFI Block cfiCond616 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_5
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond617 Using cfiCommon0
        CFI (cfiCond617) NoFunction
        CFI (cfiCond617) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_6
        CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond617) CFA_SP SP+0
        CFI (cfiCond617) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond618 Using cfiCommon0
        CFI (cfiCond618) NoFunction
        CFI (cfiCond618) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_7
        CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond618) CFA_SP SP+0
        CFI (cfiCond618) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond619 Using cfiCommon0
        CFI (cfiCond619) NoFunction
        CFI (cfiCond619) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_352
        CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond619) CFA_SP SP+0
        CFI (cfiCond619) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond620 Using cfiCommon0
        CFI (cfiCond620) NoFunction
        CFI (cfiCond620) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_353
        CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond620) CFA_SP SP+0
        CFI (cfiCond620) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond621 Using cfiCommon0
        CFI (cfiCond621) NoFunction
        CFI (cfiCond621) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_354
        CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond621) CFA_SP SP+0
        CFI (cfiCond621) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond622 Using cfiCommon0
        CFI (cfiCond622) NoFunction
        CFI (cfiCond622) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_355
        CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond622) CFA_SP SP+0
        CFI (cfiCond622) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond623 Using cfiCommon0
        CFI (cfiCond623) NoFunction
        CFI (cfiCond623) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_356
        CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond623) CFA_SP SP+0
        CFI (cfiCond623) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond624 Using cfiCommon0
        CFI (cfiCond624) NoFunction
        CFI (cfiCond624) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_357
        CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond624) CFA_SP SP+0
        CFI (cfiCond624) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond625 Using cfiCommon0
        CFI (cfiCond625) NoFunction
        CFI (cfiCond625) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_358
        CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond625) CFA_SP SP+0
        CFI (cfiCond625) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond626 Using cfiCommon0
        CFI (cfiCond626) NoFunction
        CFI (cfiCond626) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_359
        CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond626) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond626) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond626) CFA_SP SP+0
        CFI (cfiCond626) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond627 Using cfiCommon0
        CFI (cfiCond627) NoFunction
        CFI (cfiCond627) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_360
        CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond627) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond627) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond627) CFA_SP SP+0
        CFI (cfiCond627) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond628 Using cfiCommon0
        CFI (cfiCond628) NoFunction
        CFI (cfiCond628) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_344
        CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond628) CFA_SP SP+0
        CFI (cfiCond628) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond629 Using cfiCommon0
        CFI (cfiCond629) NoFunction
        CFI (cfiCond629) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_345
        CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond629) CFA_SP SP+0
        CFI (cfiCond629) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond630 Using cfiCommon0
        CFI (cfiCond630) NoFunction
        CFI (cfiCond630) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_346
        CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond630) CFA_SP SP+0
        CFI (cfiCond630) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond631 Using cfiCommon0
        CFI (cfiCond631) NoFunction
        CFI (cfiCond631) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_347
        CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond631) CFA_SP SP+0
        CFI (cfiCond631) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond632 Using cfiCommon0
        CFI (cfiCond632) NoFunction
        CFI (cfiCond632) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_348
        CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond632) CFA_SP SP+0
        CFI (cfiCond632) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond633 Using cfiCommon0
        CFI (cfiCond633) NoFunction
        CFI (cfiCond633) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_349
        CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond633) CFA_SP SP+0
        CFI (cfiCond633) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond634 Using cfiCommon0
        CFI (cfiCond634) NoFunction
        CFI (cfiCond634) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_350
        CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond634) CFA_SP SP+0
        CFI (cfiCond634) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond635 Using cfiCommon0
        CFI (cfiCond635) NoFunction
        CFI (cfiCond635) Conditional ??CrossCallReturnLabel_650, ??CrossCallReturnLabel_351
        CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond635) CFA_SP SP+0
        CFI (cfiCond635) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond636 Using cfiCommon0
        CFI (cfiCond636) NoFunction
        CFI (cfiCond636) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_138
        CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond636) CFA_SP SP+0
        CFI (cfiCond636) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond637 Using cfiCommon0
        CFI (cfiCond637) NoFunction
        CFI (cfiCond637) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_139
        CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond637) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond637) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond637) CFA_SP SP+0
        CFI (cfiCond637) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond638 Using cfiCommon0
        CFI (cfiCond638) NoFunction
        CFI (cfiCond638) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_140
        CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond638) CFA_SP SP+0
        CFI (cfiCond638) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond639 Using cfiCommon0
        CFI (cfiCond639) NoFunction
        CFI (cfiCond639) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_135
        CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond639) CFA_SP SP+0
        CFI (cfiCond639) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond640 Using cfiCommon0
        CFI (cfiCond640) NoFunction
        CFI (cfiCond640) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_136
        CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond640) CFA_SP SP+0
        CFI (cfiCond640) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond641 Using cfiCommon0
        CFI (cfiCond641) NoFunction
        CFI (cfiCond641) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_137
        CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond641) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond641) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond641) CFA_SP SP+0
        CFI (cfiCond641) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond642 Using cfiCommon0
        CFI (cfiCond642) NoFunction
        CFI (cfiCond642) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_654
        CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond642) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond642) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond642) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond642) CFA_SP SP+0
        CFI (cfiCond642) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond643 Using cfiCommon0
        CFI (cfiCond643) NoFunction
        CFI (cfiCond643) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_655
        CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond643) CFA_SP SP+0
        CFI (cfiCond643) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond644 Using cfiCommon0
        CFI (cfiCond644) NoFunction
        CFI (cfiCond644) Conditional ??CrossCallReturnLabel_651, ??CrossCallReturnLabel_653
        CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond644) CFA_SP SP+0
        CFI (cfiCond644) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond645 Using cfiCommon0
        CFI (cfiCond645) NoFunction
        CFI (cfiCond645) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_132
        CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond645) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond645) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond645) CFA_SP SP+0
        CFI (cfiCond645) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond646 Using cfiCommon0
        CFI (cfiCond646) NoFunction
        CFI (cfiCond646) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_133
        CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond646) CFA_SP SP+0
        CFI (cfiCond646) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond647 Using cfiCommon0
        CFI (cfiCond647) NoFunction
        CFI (cfiCond647) Conditional ??CrossCallReturnLabel_649, ??CrossCallReturnLabel_134
        CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond647) CFA_SP SP+0
        CFI (cfiCond647) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond648 Using cfiCommon0
        CFI (cfiCond648) NoFunction
        CFI (cfiCond648) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_28
        CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond648) CFA_SP SP+0
        CFI (cfiCond648) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond649 Using cfiCommon0
        CFI (cfiCond649) NoFunction
        CFI (cfiCond649) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_29
        CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond649) CFA_SP SP+0
        CFI (cfiCond649) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond650 Using cfiCommon0
        CFI (cfiCond650) NoFunction
        CFI (cfiCond650) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_45
        CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond650) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond650) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond650) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond650) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond650) CFA_SP SP+0
        CFI (cfiCond650) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond651 Using cfiCommon0
        CFI (cfiCond651) NoFunction
        CFI (cfiCond651) Conditional ??CrossCallReturnLabel_648, ??CrossCallReturnLabel_46
        CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond651) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond651) CFA_SP SP+0
        CFI (cfiCond651) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker652 Using cfiCommon1
        CFI (cfiPicker652) NoFunction
        CFI (cfiPicker652) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond616
        CFI EndBlock cfiCond617
        CFI EndBlock cfiCond618
        CFI EndBlock cfiCond619
        CFI EndBlock cfiCond620
        CFI EndBlock cfiCond621
        CFI EndBlock cfiCond622
        CFI EndBlock cfiCond623
        CFI EndBlock cfiCond624
        CFI EndBlock cfiCond625
        CFI EndBlock cfiCond626
        CFI EndBlock cfiCond627
        CFI EndBlock cfiCond628
        CFI EndBlock cfiCond629
        CFI EndBlock cfiCond630
        CFI EndBlock cfiCond631
        CFI EndBlock cfiCond632
        CFI EndBlock cfiCond633
        CFI EndBlock cfiCond634
        CFI EndBlock cfiCond635
        CFI EndBlock cfiCond636
        CFI EndBlock cfiCond637
        CFI EndBlock cfiCond638
        CFI EndBlock cfiCond639
        CFI EndBlock cfiCond640
        CFI EndBlock cfiCond641
        CFI EndBlock cfiCond642
        CFI EndBlock cfiCond643
        CFI EndBlock cfiCond644
        CFI EndBlock cfiCond645
        CFI EndBlock cfiCond646
        CFI EndBlock cfiCond647
        CFI EndBlock cfiCond648
        CFI EndBlock cfiCond649
        CFI EndBlock cfiCond650
        CFI EndBlock cfiCond651
        CFI EndBlock cfiPicker652

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
        CFI Block cfiCond653 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_33
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond654 Using cfiCommon0
        CFI (cfiCond654) NoFunction
        CFI (cfiCond654) Conditional ??CrossCallReturnLabel_34
        CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond654) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond654) CFA_SP SP+0
        CFI (cfiCond654) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker655 Using cfiCommon1
        CFI (cfiPicker655) NoFunction
        CFI (cfiPicker655) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_203:
        ; Setup parameters for call to function buffer_skip_whitespace
        ; Setup parameters for call to function buffer_skip_whitespace
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??buffer_skip_whitespace?relay
        ; Setup parameters for call to function parse_string
        ; Setup parameters for call to function parse_value
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        RET
        CFI EndBlock cfiCond653
        CFI EndBlock cfiCond654
        CFI EndBlock cfiPicker655
// 1708 
// 1709 /* Render an object to text. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1710 static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer)
print_object:
        CFI Block cfiBlock656 Using cfiCommon0
        CFI Function print_object
        CODE
// 1711 {
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, print_string_ptr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, print_value
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, update_offset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL print_object, ensure
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL   ?Subroutine39 & 0xFFFF
// 1712     unsigned char *output_pointer = NULL;
// 1713     size_t length = 0;
// 1714     cJSON *current_item = item->child;
// 1715 
// 1716     if (output_buffer == NULL)
??CrossCallReturnLabel_331:
        JNZ     ??print_object_0
// 1717     {
// 1718         return false;
??print_object_1:
        MOV     R2,#0x0
        LJMP    ??CrossCallReturnLabel_87 & 0xFFFF
// 1719     }
// 1720 
// 1721     /* Compose the output: */
// 1722     length = (size_t) (output_buffer->format ? 2 : 1); /* fmt: {\n */
??print_object_0:
        LCALL   ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_487:
        JZ      ??print_object_2
        MOV     ?V0 + 2,#0x2
        SJMP    ??print_object_3
??print_object_2:
        MOV     ?V0 + 2,#0x1
// 1723     output_pointer = ensure(output_buffer, length + 1);
??print_object_3:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine83 & 0xFFFF
// 1724     if (output_pointer == NULL)
??CrossCallReturnLabel_326:
        JZ      ??print_object_1
// 1725     {
// 1726         return false;
// 1727     }
// 1728 
// 1729     *output_pointer++ = '{';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x7b
        LCALL   ?Subroutine105 & 0xFFFF
// 1730     output_buffer->depth++;
??CrossCallReturnLabel_164:
        LCALL   ?Subroutine55 & 0xFFFF
// 1731     if (output_buffer->format)
??CrossCallReturnLabel_239:
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_374:
        JZ      ??print_object_4
// 1732     {
// 1733         *output_pointer++ = '\n';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0xa
        MOVX    @DPTR,A
// 1734     }
// 1735     output_buffer->offset += length;
??print_object_4:
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_57:
        SJMP    ??CrossCallReturnLabel_513
// 1736 
// 1737     while (current_item)
// 1738     {
// 1739         if (output_buffer->format)
// 1740         {
// 1741             size_t i;
// 1742             output_pointer = ensure(output_buffer, output_buffer->depth);
// 1743             if (output_pointer == NULL)
// 1744             {
// 1745                 return false;
// 1746             }
// 1747             for (i = 0; i < output_buffer->depth; i++)
// 1748             {
// 1749                 *output_pointer++ = '\t';
// 1750             }
// 1751             output_buffer->offset += output_buffer->depth;
// 1752         }
// 1753 
// 1754         /* print key */
// 1755         if (!print_string_ptr((unsigned char*)current_item->string, output_buffer))
// 1756         {
// 1757             return false;
// 1758         }
// 1759         update_offset(output_buffer);
// 1760 
// 1761         length = (size_t) (output_buffer->format ? 2 : 1);
// 1762         output_pointer = ensure(output_buffer, length);
// 1763         if (output_pointer == NULL)
// 1764         {
// 1765             return false;
// 1766         }
// 1767         *output_pointer++ = ':';
// 1768         if (output_buffer->format)
// 1769         {
// 1770             *output_pointer++ = '\t';
// 1771         }
// 1772         output_buffer->offset += length;
// 1773 
// 1774         /* print value */
// 1775         if (!print_value(current_item, output_buffer))
// 1776         {
// 1777             return false;
// 1778         }
// 1779         update_offset(output_buffer);
??print_object_5:
        MOV     R0,#0x0
??print_object_6:
        MOV     A,R2
        ADD     A,R0
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
// 1780 
// 1781         /* print comma if not last */
// 1782         length = ((size_t)(output_buffer->format ? 1 : 0) + (size_t)(current_item->next ? 1 : 0));
// 1783         output_pointer = ensure(output_buffer, length + 1);
        ; Setup parameters for call to function ensure
        MOV     A,?V0 + 2
        ADD     A,#0x1
        MOV     R4,A
        MOV     A,?V0 + 3
        LCALL   ??Subroutine173_0 & 0xFFFF
// 1784         if (output_pointer == NULL)
??CrossCallReturnLabel_327:
        JZ      ??print_object_1
// 1785         {
// 1786             return false;
// 1787         }
// 1788         if (current_item->next)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_372:
        JZ      ??CrossCallReturnLabel_165
// 1789         {
// 1790             *output_pointer++ = ',';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x2c
        LCALL   ?Subroutine105 & 0xFFFF
// 1791         }
// 1792 
// 1793         if (output_buffer->format)
??CrossCallReturnLabel_165:
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_375:
        JZ      ??CrossCallReturnLabel_166
// 1794         {
// 1795             *output_pointer++ = '\n';
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0xa
        LCALL   ?Subroutine105 & 0xFFFF
// 1796         }
// 1797         *output_pointer = '\0';
??CrossCallReturnLabel_166:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine177_0 & 0xFFFF
// 1798         output_buffer->offset += length;
??CrossCallReturnLabel_341:
        ADD     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,?V0 + 3
        MOVX    @DPTR,A
// 1799 
// 1800         current_item = current_item->next;
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_513:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        JNZ     $+5
        LJMP    ??print_object_7 & 0xFFFF
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_456:
        JZ      ??print_object_8
        ; Setup parameters for call to function ensure
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_652:
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_176:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??CrossCallReturnLabel_365
??print_object_9:
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_365:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine179_0 & 0xFFFF
??CrossCallReturnLabel_362:
        JC      ??print_object_9
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_61:
        MOVX    A,@DPTR
        ADD     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOVX    @DPTR,A
??print_object_8:
        ; Setup parameters for call to function print_string_ptr
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_352:
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_99:
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        ; Setup parameters for call to function update_offset
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_439:
        JZ      ??print_object_10
        MOV     ?V0 + 2,#0x2
        SJMP    ??print_object_11
??print_object_10:
        MOV     ?V0 + 2,#0x1
??print_object_11:
        MOV     ?V0 + 3,#0x0
        ; Setup parameters for call to function ensure
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_329:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x3a
        LCALL   ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_370:
        JZ      ??print_object_12
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x9
        MOVX    @DPTR,A
??print_object_12:
        LCALL   ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_58:
        ; Setup parameters for call to function print_value
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_323:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
        ; Setup parameters for call to function update_offset
        LCALL   ?Subroutine14 & 0xFFFF
// 1801     }
??CrossCallReturnLabel_440:
        JZ      ??print_object_13
        MOV     R2,#0x1
        SJMP    ??print_object_14
??print_object_13:
        MOV     R2,#0x0
??print_object_14:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_457:
        JNZ     $+5
        LJMP    ??print_object_5 & 0xFFFF
        MOV     R0,#0x1
        LJMP    ??print_object_6 & 0xFFFF
// 1802 
// 1803     output_pointer = ensure(output_buffer, output_buffer->format ? (output_buffer->depth + 1) : 2);
??print_object_7:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_458:
        JZ      ??print_object_15
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_108:
        SJMP    ??print_object_16
??print_object_15:
        MOV     R4,#0x2
        MOV     R5,#0x0
??print_object_16:
        ; Setup parameters for call to function ensure
        LCALL   ?Subroutine112 & 0xFFFF
// 1804     if (output_pointer == NULL)
??CrossCallReturnLabel_178:
        JNZ     $+5
        LJMP    ??print_object_1 & 0xFFFF
// 1805     {
// 1806         return false;
// 1807     }
// 1808     if (output_buffer->format)
        LCALL   ??Subroutine183_0 & 0xFFFF
??CrossCallReturnLabel_376:
        JZ      ??print_object_17
// 1809     {
// 1810         size_t i;
// 1811         for (i = 0; i < (output_buffer->depth - 1); i++)
        MOV     R4,#0x0
        MOV     R5,#0x0
        SJMP    ??CrossCallReturnLabel_366
// 1812         {
// 1813             *output_pointer++ = '\t';
??print_object_18:
        LCALL   ?Subroutine89 & 0xFFFF
// 1814         }
??CrossCallReturnLabel_366:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     R3,A
        CLR     C
        MOV     A,R4
        SUBB    A,R2
        MOV     A,R5
        SUBB    A,R3
        JC      ??print_object_18
// 1815     }
// 1816     *output_pointer++ = '}';
??print_object_17:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x7d
        LCALL   ?Subroutine57 & 0xFFFF
// 1817     *output_pointer = '\0';
// 1818     output_buffer->depth--;
// 1819 
// 1820     return true;
??CrossCallReturnLabel_87:
        LJMP    ?Subroutine4 & 0xFFFF
        CFI EndBlock cfiBlock656
// 1821 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
        CFI Block cfiCond657 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_177
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond658 Using cfiCommon0
        CFI (cfiCond658) NoFunction
        CFI (cfiCond658) Conditional ??CrossCallReturnLabel_178
        CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond658) CFA_SP SP+0
        CFI (cfiCond658) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker659 Using cfiCommon1
        CFI (cfiPicker659) NoFunction
        CFI (cfiPicker659) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ensure?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond657
        CFI EndBlock cfiCond658
        CFI EndBlock cfiPicker659

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
        CFI Block cfiCond660 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_175
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond661 Using cfiCommon0
        CFI (cfiCond661) NoFunction
        CFI (cfiCond661) Conditional ??CrossCallReturnLabel_176
        CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond661) CFA_SP SP+0
        CFI (cfiCond661) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker662 Using cfiCommon1
        CFI (cfiPicker662) NoFunction
        CFI (cfiPicker662) Picker
        LCALL   ??ensure?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond660
        CFI EndBlock cfiCond661
        CFI EndBlock cfiPicker662

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
        CFI Block cfiCond663 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_164
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond664 Using cfiCommon0
        CFI (cfiCond664) NoFunction
        CFI (cfiCond664) Conditional ??CrossCallReturnLabel_165
        CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond664) CFA_SP SP+0
        CFI (cfiCond664) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond665 Using cfiCommon0
        CFI (cfiCond665) NoFunction
        CFI (cfiCond665) Conditional ??CrossCallReturnLabel_166
        CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond665) CFA_SP SP+0
        CFI (cfiCond665) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker666 Using cfiCommon1
        CFI (cfiPicker666) NoFunction
        CFI (cfiPicker666) Picker
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_217:
        RET
        CFI EndBlock cfiCond663
        CFI EndBlock cfiCond664
        CFI EndBlock cfiCond665
        CFI EndBlock cfiPicker666

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine141:
        CFI Block cfiCond667 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_164
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond668 Using cfiCommon0
        CFI (cfiCond668) NoFunction
        CFI (cfiCond668) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_165
        CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond668) CFA_SP SP+0
        CFI (cfiCond668) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond669 Using cfiCommon0
        CFI (cfiCond669) NoFunction
        CFI (cfiCond669) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_166
        CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond669) CFA_SP SP+0
        CFI (cfiCond669) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond670 Using cfiCommon0
        CFI (cfiCond670) NoFunction
        CFI (cfiCond670) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_365
        CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond670) CFA_SP SP+0
        CFI (cfiCond670) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond671 Using cfiCommon0
        CFI (cfiCond671) NoFunction
        CFI (cfiCond671) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_366
        CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond671) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond671) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond671) CFA_SP SP+0
        CFI (cfiCond671) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond672 Using cfiCommon0
        CFI (cfiCond672) NoFunction
        CFI (cfiCond672) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_369
        CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond672) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond672) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond672) CFA_SP SP+0
        CFI (cfiCond672) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond673 Using cfiCommon0
        CFI (cfiCond673) NoFunction
        CFI (cfiCond673) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_370
        CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond673) CFA_SP SP+0
        CFI (cfiCond673) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker674 Using cfiCommon1
        CFI (cfiPicker674) NoFunction
        CFI (cfiPicker674) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        RET
        CFI EndBlock cfiCond667
        CFI EndBlock cfiCond668
        CFI EndBlock cfiCond669
        CFI EndBlock cfiCond670
        CFI EndBlock cfiCond671
        CFI EndBlock cfiCond672
        CFI EndBlock cfiCond673
        CFI EndBlock cfiPicker674

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
        CFI Block cfiCond675 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_338
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond676 Using cfiCommon0
        CFI (cfiCond676) NoFunction
        CFI (cfiCond676) Conditional ??CrossCallReturnLabel_339
        CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond676) CFA_SP SP+0
        CFI (cfiCond676) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker677 Using cfiCommon1
        CFI (cfiPicker677) NoFunction
        CFI (cfiPicker677) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CFI EndBlock cfiCond675
        CFI EndBlock cfiCond676
        CFI EndBlock cfiPicker677
        REQUIRE ??Subroutine177_0
        ; // Fall through to label ??Subroutine177_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine177_0:
        CFI Block cfiCond678 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_340
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond679 Using cfiCommon0
        CFI (cfiCond679) NoFunction
        CFI (cfiCond679) Conditional ??CrossCallReturnLabel_341
        CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond679) CFA_SP SP+0
        CFI (cfiCond679) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond680 Using cfiCommon0
        CFI (cfiCond680) NoFunction
        CFI (cfiCond680) Conditional ??CrossCallReturnLabel_338
        CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond680) CFA_SP SP+0
        CFI (cfiCond680) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond681 Using cfiCommon0
        CFI (cfiCond681) NoFunction
        CFI (cfiCond681) Conditional ??CrossCallReturnLabel_339
        CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond681) CFA_SP SP+0
        CFI (cfiCond681) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker682 Using cfiCommon1
        CFI (cfiPicker682) NoFunction
        CFI (cfiPicker682) Picker
        CLR     A
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_342:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond678
        CFI EndBlock cfiCond679
        CFI EndBlock cfiCond680
        CFI EndBlock cfiCond681
        CFI EndBlock cfiPicker682

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
        CFI Block cfiCond683 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_352
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond684 Using cfiCommon0
        CFI (cfiCond684) NoFunction
        CFI (cfiCond684) Conditional ??CrossCallReturnLabel_353
        CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond684) CFA_SP SP+0
        CFI (cfiCond684) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond685 Using cfiCommon0
        CFI (cfiCond685) NoFunction
        CFI (cfiCond685) Conditional ??CrossCallReturnLabel_354
        CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond685) CFA_SP SP+0
        CFI (cfiCond685) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond686 Using cfiCommon0
        CFI (cfiCond686) NoFunction
        CFI (cfiCond686) Conditional ??CrossCallReturnLabel_355
        CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond686) CFA_SP SP+0
        CFI (cfiCond686) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond687 Using cfiCommon0
        CFI (cfiCond687) NoFunction
        CFI (cfiCond687) Conditional ??CrossCallReturnLabel_356
        CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond687) CFA_SP SP+0
        CFI (cfiCond687) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond688 Using cfiCommon0
        CFI (cfiCond688) NoFunction
        CFI (cfiCond688) Conditional ??CrossCallReturnLabel_357
        CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond688) CFA_SP SP+0
        CFI (cfiCond688) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond689 Using cfiCommon0
        CFI (cfiCond689) NoFunction
        CFI (cfiCond689) Conditional ??CrossCallReturnLabel_358
        CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond689) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond689) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond689) CFA_SP SP+0
        CFI (cfiCond689) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond690 Using cfiCommon0
        CFI (cfiCond690) NoFunction
        CFI (cfiCond690) Conditional ??CrossCallReturnLabel_359
        CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond690) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond690) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond690) CFA_SP SP+0
        CFI (cfiCond690) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond691 Using cfiCommon0
        CFI (cfiCond691) NoFunction
        CFI (cfiCond691) Conditional ??CrossCallReturnLabel_360
        CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond691) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond691) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond691) CFA_SP SP+0
        CFI (cfiCond691) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker692 Using cfiCommon1
        CFI (cfiPicker692) NoFunction
        CFI (cfiPicker692) Picker
        MOV     A,?V0 + 0
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_639:
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond683
        CFI EndBlock cfiCond684
        CFI EndBlock cfiCond685
        CFI EndBlock cfiCond686
        CFI EndBlock cfiCond687
        CFI EndBlock cfiCond688
        CFI EndBlock cfiCond689
        CFI EndBlock cfiCond690
        CFI EndBlock cfiCond691
        CFI EndBlock cfiPicker692
        REQUIRE ??Subroutine178_0
        ; // Fall through to label ??Subroutine178_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine178_0:
        CFI Block cfiCond693 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_344
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond694 Using cfiCommon0
        CFI (cfiCond694) NoFunction
        CFI (cfiCond694) Conditional ??CrossCallReturnLabel_345
        CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond694) CFA_SP SP+0
        CFI (cfiCond694) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond695 Using cfiCommon0
        CFI (cfiCond695) NoFunction
        CFI (cfiCond695) Conditional ??CrossCallReturnLabel_346
        CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond695) CFA_SP SP+0
        CFI (cfiCond695) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond696 Using cfiCommon0
        CFI (cfiCond696) NoFunction
        CFI (cfiCond696) Conditional ??CrossCallReturnLabel_347
        CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond696) CFA_SP SP+0
        CFI (cfiCond696) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond697 Using cfiCommon0
        CFI (cfiCond697) NoFunction
        CFI (cfiCond697) Conditional ??CrossCallReturnLabel_348
        CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond697) CFA_SP SP+0
        CFI (cfiCond697) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond698 Using cfiCommon0
        CFI (cfiCond698) NoFunction
        CFI (cfiCond698) Conditional ??CrossCallReturnLabel_349
        CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond698) CFA_SP SP+0
        CFI (cfiCond698) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond699 Using cfiCommon0
        CFI (cfiCond699) NoFunction
        CFI (cfiCond699) Conditional ??CrossCallReturnLabel_350
        CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond699) CFA_SP SP+0
        CFI (cfiCond699) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond700 Using cfiCommon0
        CFI (cfiCond700) NoFunction
        CFI (cfiCond700) Conditional ??CrossCallReturnLabel_351
        CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond700) CFA_SP SP+0
        CFI (cfiCond700) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond701 Using cfiCommon0
        CFI (cfiCond701) NoFunction
        CFI (cfiCond701) Conditional ??CrossCallReturnLabel_352
        CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond701) CFA_SP SP+0
        CFI (cfiCond701) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond702 Using cfiCommon0
        CFI (cfiCond702) NoFunction
        CFI (cfiCond702) Conditional ??CrossCallReturnLabel_353
        CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond702) CFA_SP SP+0
        CFI (cfiCond702) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond703 Using cfiCommon0
        CFI (cfiCond703) NoFunction
        CFI (cfiCond703) Conditional ??CrossCallReturnLabel_354
        CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond703) CFA_SP SP+0
        CFI (cfiCond703) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond704 Using cfiCommon0
        CFI (cfiCond704) NoFunction
        CFI (cfiCond704) Conditional ??CrossCallReturnLabel_355
        CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond704) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond704) CFA_SP SP+0
        CFI (cfiCond704) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond705 Using cfiCommon0
        CFI (cfiCond705) NoFunction
        CFI (cfiCond705) Conditional ??CrossCallReturnLabel_356
        CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond705) CFA_SP SP+0
        CFI (cfiCond705) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond706 Using cfiCommon0
        CFI (cfiCond706) NoFunction
        CFI (cfiCond706) Conditional ??CrossCallReturnLabel_357
        CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond706) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond706) CFA_SP SP+0
        CFI (cfiCond706) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond707 Using cfiCommon0
        CFI (cfiCond707) NoFunction
        CFI (cfiCond707) Conditional ??CrossCallReturnLabel_358
        CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond707) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond707) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond707) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond707) CFA_SP SP+0
        CFI (cfiCond707) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond708 Using cfiCommon0
        CFI (cfiCond708) NoFunction
        CFI (cfiCond708) Conditional ??CrossCallReturnLabel_359
        CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond708) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond708) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond708) CFA_SP SP+0
        CFI (cfiCond708) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond709 Using cfiCommon0
        CFI (cfiCond709) NoFunction
        CFI (cfiCond709) Conditional ??CrossCallReturnLabel_360
        CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond709) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond709) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond709) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond709) CFA_SP SP+0
        CFI (cfiCond709) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker710 Using cfiCommon1
        CFI (cfiPicker710) NoFunction
        CFI (cfiPicker710) Picker
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_650:
        RET
        CFI EndBlock cfiCond693
        CFI EndBlock cfiCond694
        CFI EndBlock cfiCond695
        CFI EndBlock cfiCond696
        CFI EndBlock cfiCond697
        CFI EndBlock cfiCond698
        CFI EndBlock cfiCond699
        CFI EndBlock cfiCond700
        CFI EndBlock cfiCond701
        CFI EndBlock cfiCond702
        CFI EndBlock cfiCond703
        CFI EndBlock cfiCond704
        CFI EndBlock cfiCond705
        CFI EndBlock cfiCond706
        CFI EndBlock cfiCond707
        CFI EndBlock cfiCond708
        CFI EndBlock cfiCond709
        CFI EndBlock cfiPicker710

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
        CFI Block cfiCond711 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_107
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond712 Using cfiCommon0
        CFI (cfiCond712) NoFunction
        CFI (cfiCond712) Conditional ??CrossCallReturnLabel_108
        CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond712) CFA_SP SP+0
        CFI (cfiCond712) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker713 Using cfiCommon1
        CFI (cfiPicker713) NoFunction
        CFI (cfiPicker713) Picker
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        RET
        CFI EndBlock cfiCond711
        CFI EndBlock cfiCond712
        CFI EndBlock cfiPicker713

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
        CFI Block cfiCond714 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_100
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond715 Using cfiCommon0
        CFI (cfiCond715) NoFunction
        CFI (cfiCond715) Conditional ??CrossCallReturnLabel_99
        CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond715) CFA_SP SP+0
        CFI (cfiCond715) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker716 Using cfiCommon1
        CFI (cfiPicker716) NoFunction
        CFI (cfiPicker716) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_536:
        LCALL   ??print_string_ptr?relay
        RET
        CFI EndBlock cfiCond714
        CFI EndBlock cfiCond715
        CFI EndBlock cfiPicker716

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
        CFI Block cfiCond717 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_86
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond718 Using cfiCommon0
        CFI (cfiCond718) NoFunction
        CFI (cfiCond718) Conditional ??CrossCallReturnLabel_87
        CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond718) CFA_SP SP+0
        CFI (cfiCond718) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker719 Using cfiCommon1
        CFI (cfiPicker719) NoFunction
        CFI (cfiPicker719) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_219:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_311:
        MOV     R2,#0x1
        RET
        CFI EndBlock cfiCond717
        CFI EndBlock cfiCond718
        CFI EndBlock cfiPicker719

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
        CFI Block cfiCond720 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_56
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond721 Using cfiCommon0
        CFI (cfiCond721) NoFunction
        CFI (cfiCond721) Conditional ??CrossCallReturnLabel_57
        CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond721) CFA_SP SP+0
        CFI (cfiCond721) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond722 Using cfiCommon0
        CFI (cfiCond722) NoFunction
        CFI (cfiCond722) Conditional ??CrossCallReturnLabel_58
        CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond722) CFA_SP SP+0
        CFI (cfiCond722) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker723 Using cfiCommon1
        CFI (cfiPicker723) NoFunction
        CFI (cfiPicker723) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,?V0 + 2
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_240:
        RET
        CFI EndBlock cfiCond720
        CFI EndBlock cfiCond721
        CFI EndBlock cfiCond722
        CFI EndBlock cfiPicker723

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
        CFI Block cfiCond724 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_363
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond725 Using cfiCommon0
        CFI (cfiCond725) NoFunction
        CFI (cfiCond725) Conditional ??CrossCallReturnLabel_364
        CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond725) CFA_SP SP+0
        CFI (cfiCond725) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker726 Using cfiCommon1
        CFI (cfiPicker726) NoFunction
        CFI (cfiPicker726) Picker
        SUBB    A,R3
        MOV     R5,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond724
        CFI EndBlock cfiCond725
        CFI EndBlock cfiPicker726
        REQUIRE ??Subroutine179_0
        ; // Fall through to label ??Subroutine179_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine179_0:
        CFI Block cfiCond727 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_361
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond728 Using cfiCommon0
        CFI (cfiCond728) NoFunction
        CFI (cfiCond728) Conditional ??CrossCallReturnLabel_362
        CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond728) CFA_SP SP+0
        CFI (cfiCond728) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond729 Using cfiCommon0
        CFI (cfiCond729) NoFunction
        CFI (cfiCond729) Conditional ??CrossCallReturnLabel_363
        CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond729) CFA_SP SP+0
        CFI (cfiCond729) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond730 Using cfiCommon0
        CFI (cfiCond730) NoFunction
        CFI (cfiCond730) Conditional ??CrossCallReturnLabel_364
        CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond730) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond730) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond730) CFA_SP SP+0
        CFI (cfiCond730) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker731 Using cfiCommon1
        CFI (cfiPicker731) NoFunction
        CFI (cfiPicker731) Picker
        LCALL   ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_542:
        CLR     C
        MOV     A,R4
        SUBB    A,R2
        MOV     A,R5
        SUBB    A,R3
        RET
        CFI EndBlock cfiCond727
        CFI EndBlock cfiCond728
        CFI EndBlock cfiCond729
        CFI EndBlock cfiCond730
        CFI EndBlock cfiPicker731
// 1822 
// 1823 /* Get Array size/item / object item. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1824 CJSON_PUBLIC(int) cJSON_GetArraySize(const cJSON *array)
cJSON_GetArraySize:
        CFI Block cfiBlock732 Using cfiCommon0
        CFI Function cJSON_GetArraySize
        CODE
// 1825 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1826     cJSON *child = NULL;
// 1827     size_t size = 0;
        MOV     R4,#0x0
        MOV     R5,#0x0
// 1828 
// 1829     if (array == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_GetArraySize_0
// 1830     {
// 1831         return 0;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_GetArraySize_1
// 1832     }
// 1833 
// 1834     child = array->child;
??cJSON_GetArraySize_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??CrossCallReturnLabel_368
// 1835 
// 1836     while(child != NULL)
// 1837     {
// 1838         size++;
??cJSON_GetArraySize_2:
        LCALL   ??Subroutine180_0 & 0xFFFF
// 1839         child = child->next;
// 1840     }
??CrossCallReturnLabel_368:
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_612:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??cJSON_GetArraySize_2
// 1841 
// 1842     /* FIXME: Can overflow here. Cannot be fixed without breaking the API */
// 1843 
// 1844     return (int)size;
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
??cJSON_GetArraySize_1:
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock732
// 1845 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
        CFI Block cfiCond733 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_365
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond734 Using cfiCommon0
        CFI (cfiCond734) NoFunction
        CFI (cfiCond734) Conditional ??CrossCallReturnLabel_366
        CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond734) CFA_SP SP+0
        CFI (cfiCond734) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker735 Using cfiCommon1
        CFI (cfiPicker735) NoFunction
        CFI (cfiPicker735) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,#0x9
        LCALL   ?Subroutine141 & 0xFFFF
        CFI EndBlock cfiCond733
        CFI EndBlock cfiCond734
        CFI EndBlock cfiPicker735
??CrossCallReturnLabel_216:
        REQUIRE ??Subroutine180_0
        ; // Fall through to label ??Subroutine180_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine180_0:
        CFI Block cfiCond736 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_367
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond737 Using cfiCommon0
        CFI (cfiCond737) NoFunction
        CFI (cfiCond737) Conditional ??CrossCallReturnLabel_368
        CFI (cfiCond737) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond737) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond737) CFA_SP SP+-5
        CFI Block cfiCond738 Using cfiCommon0
        CFI (cfiCond738) NoFunction
        CFI (cfiCond738) Conditional ??CrossCallReturnLabel_365
        CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond738) CFA_SP SP+0
        CFI (cfiCond738) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond739 Using cfiCommon0
        CFI (cfiCond739) NoFunction
        CFI (cfiCond739) Conditional ??CrossCallReturnLabel_366
        CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond739) CFA_SP SP+0
        CFI (cfiCond739) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker740 Using cfiCommon1
        CFI (cfiPicker740) NoFunction
        CFI (cfiPicker740) Picker
        MOV     A,R4
        ADD     A,#0x1
        INC     R4
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        RET
        CFI EndBlock cfiCond736
        CFI EndBlock cfiCond737
        CFI EndBlock cfiCond738
        CFI EndBlock cfiCond739
        CFI EndBlock cfiPicker740
// 1846 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1847 static cJSON* get_array_item(const cJSON *array, size_t index)
get_array_item:
        CFI Block cfiBlock741 Using cfiCommon0
        CFI Function get_array_item
        CODE
// 1848 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1849     cJSON *current_child = NULL;
// 1850 
// 1851     if (array == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??get_array_item_0
// 1852     {
// 1853         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??get_array_item_1
// 1854     }
// 1855 
// 1856     current_child = array->child;
??get_array_item_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??get_array_item_2
// 1857     while ((current_child != NULL) && (index > 0))
// 1858     {
// 1859         index--;
??get_array_item_3:
        MOV     A,R4
        ADD     A,#-0x1
        DEC     R4
        MOV     A,R5
        ADDC    A,#-0x1
        MOV     R5,A
// 1860         current_child = current_child->next;
        MOV     DPL,R2
        MOV     DPH,R3
// 1861     }
??get_array_item_2:
        LCALL   ??Subroutine185_0 & 0xFFFF
??CrossCallReturnLabel_371:
        JZ      ??get_array_item_1
        MOV     A,R4
        ORL     A,R5
        JNZ     ??get_array_item_3
// 1862 
// 1863     return current_child;
??get_array_item_1:
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock741
// 1864 }
// 1865 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1866 CJSON_PUBLIC(cJSON *) cJSON_GetArrayItem(const cJSON *array, int index)
cJSON_GetArrayItem:
        CFI Block cfiBlock742 Using cfiCommon0
        CFI Function cJSON_GetArrayItem
        CODE
// 1867 {
        FUNCALL cJSON_GetArrayItem, get_array_item
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1868     if (index < 0)
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_495:
        JNC     ??cJSON_GetArrayItem_0
// 1869     {
// 1870         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_GetArrayItem_1
// 1871     }
// 1872 
// 1873     return get_array_item(array, (size_t)index);
??cJSON_GetArrayItem_0:
        ; Setup parameters for call to function get_array_item
        LCALL   ??get_array_item?relay
??cJSON_GetArrayItem_1:
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock742
// 1874 }
// 1875 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1876 static cJSON *get_object_item(const cJSON * const object, const char * const name, const cJSON_bool case_sensitive)
get_object_item:
        CFI Block cfiBlock743 Using cfiCommon0
        CFI Function get_object_item
        CODE
// 1877 {
        FUNCALL get_object_item, strcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL get_object_item, case_insensitive_strcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine226_0 & 0xFFFF
// 1878     cJSON *current_element = NULL;
// 1879 
// 1880     if ((object == NULL) || (name == NULL))
??CrossCallReturnLabel_613:
        MOV     A,R2
        ORL     A,R3
        JZ      ??get_object_item_0
        MOV     A,R6
        ORL     A,R7
        JNZ     ??get_object_item_1
// 1881     {
// 1882         return NULL;
??get_object_item_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??get_object_item_2
// 1883     }
// 1884 
// 1885     current_element = object->child;
??get_object_item_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine207_0 & 0xFFFF
// 1886     if (case_sensitive)
??CrossCallReturnLabel_508:
        MOV     A,R0
        ORL     A,R1
        JZ      ??CrossCallReturnLabel_515
// 1887     {
// 1888         while ((current_element != NULL) && (current_element->string != NULL) && (strcmp(name, current_element->string) != 0))
??get_object_item_3:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??get_object_item_0
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_353:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_459:
        JZ      ??get_object_item_4
        ; Setup parameters for call to function strcmp
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_654:
        LCALL   ??strcmp?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??get_object_item_4
// 1889         {
// 1890             current_element = current_element->next;
        LCALL   ?Subroutine60 & 0xFFFF
// 1891         }
// 1892     }
??CrossCallReturnLabel_514:
        SJMP    ??get_object_item_3
// 1893     else
// 1894     {
// 1895         while ((current_element != NULL) && (case_insensitive_strcmp((const unsigned char*)name, (const unsigned char*)(current_element->string)) != 0))
// 1896         {
// 1897             current_element = current_element->next;
??get_object_item_5:
        LCALL   ?Subroutine60 & 0xFFFF
// 1898         }
??CrossCallReturnLabel_515:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??get_object_item_0
        ; Setup parameters for call to function case_insensitive_strcmp
        LCALL   ?Subroutine31 & 0xFFFF
// 1899     }
??CrossCallReturnLabel_655:
        LCALL   ??case_insensitive_strcmp?relay
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??get_object_item_5
??get_object_item_4:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_354:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_460:
        JZ      ??get_object_item_0
// 1900 
// 1901     if ((current_element == NULL) || (current_element->string == NULL)) {
// 1902         return NULL;
// 1903     }
// 1904 
// 1905     return current_element;
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
??get_object_item_2:
        SJMP    ??Subroutine182_0
        CFI EndBlock cfiBlock743
// 1906 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
        CFI Block cfiBlock744 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 2,#global_hooks & 0xff
        MOV     ?V0 + 3,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ??Subroutine190_0 & 0xFFFF
        CFI EndBlock cfiBlock744
??CrossCallReturnLabel_402:
        REQUIRE ??Subroutine181_0
        ; // Fall through to label ??Subroutine181_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine181_0:
        CFI Block cfiBlock745 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
        CFI EndBlock cfiBlock745
        REQUIRE ??Subroutine182_0
        ; // Fall through to label ??Subroutine182_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine182_0:
        CFI Block cfiBlock746 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock746
// 1907 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1908 CJSON_PUBLIC(cJSON *) cJSON_GetObjectItem(const cJSON * const object, const char * const string)
cJSON_GetObjectItem:
        CFI Block cfiBlock747 Using cfiCommon0
        CFI Function cJSON_GetObjectItem
        CODE
// 1909 {
        FUNCALL cJSON_GetObjectItem, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1910     return get_object_item(object, string, false);
        ; Setup parameters for call to function get_object_item
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock747
// 1911 }
// 1912 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1913 CJSON_PUBLIC(cJSON *) cJSON_GetObjectItemCaseSensitive(const cJSON * const object, const char * const string)
cJSON_GetObjectItemCaseSensitive:
        CFI Block cfiBlock748 Using cfiCommon0
        CFI Function cJSON_GetObjectItemCaseSensitive
        CODE
// 1914 {
        FUNCALL cJSON_GetObjectItemCaseSensitive, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1915     return get_object_item(object, string, true);
        ; Setup parameters for call to function get_object_item
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        LJMP    ?Subroutine1 & 0xFFFF
        CFI EndBlock cfiBlock748
// 1916 }
// 1917 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1918 CJSON_PUBLIC(cJSON_bool) cJSON_HasObjectItem(const cJSON *object, const char *string)
cJSON_HasObjectItem:
        CFI Block cfiBlock749 Using cfiCommon0
        CFI Function cJSON_HasObjectItem
        CODE
// 1919 {
        FUNCALL cJSON_HasObjectItem, cJSON_GetObjectItem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 1920     return cJSON_GetObjectItem(object, string) ? 1 : 0;
        ; Setup parameters for call to function cJSON_GetObjectItem
        LCALL   ??cJSON_GetObjectItem?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??cJSON_HasObjectItem_0
        MOV     R2,#0x1
        SJMP    ??cJSON_HasObjectItem_1
??cJSON_HasObjectItem_0:
        MOV     R2,#0x0
        CFI EndBlock cfiBlock749
??cJSON_HasObjectItem_1:
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10
// 1921 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
        CFI Block cfiBlock750 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock750
// 1922 
// 1923 /* Utility for array list handling. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1924 static void suffix_object(cJSON *prev, cJSON *item)
suffix_object:
        CFI Block cfiBlock751 Using cfiCommon0
        CFI Function suffix_object
        CODE
// 1925 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1926     prev->next = item;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        MOVX    @DPTR,A
// 1927     item->prev = prev;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine218_0 & 0xFFFF
// 1928 }
??CrossCallReturnLabel_578:
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock751
// 1929 
// 1930 /* Utility for handling references. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1931 static cJSON *create_reference(const cJSON *item, const internal_hooks * const hooks)
create_reference:
        CFI Block cfiBlock752 Using cfiCommon0
        CFI Function create_reference
        CODE
// 1932 {
        FUNCALL create_reference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL create_reference, memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
// 1933     cJSON *reference = NULL;
// 1934     if (item == NULL)
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??create_reference_0
// 1935     {
// 1936         return NULL;
??create_reference_1:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??create_reference_2
// 1937     }
// 1938 
// 1939     reference = cJSON_New_Item(hooks);
??create_reference_0:
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine213_0 & 0xFFFF
// 1940     if (reference == NULL)
??CrossCallReturnLabel_555:
        JZ      ??create_reference_1
// 1941     {
// 1942         return NULL;
// 1943     }
// 1944 
// 1945     memcpy(reference, item, sizeof(cJSON));
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 2,#0x12
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        LCALL   ??Subroutine163_0 & 0xFFFF
??CrossCallReturnLabel_283:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
// 1946     reference->string = NULL;
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_643:
        MOV     A,R7
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_348:
        LCALL   ?Subroutine99 & 0xFFFF
// 1947     reference->type |= cJSON_IsReference;
??CrossCallReturnLabel_155:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x1
        LCALL   ?Subroutine106 & 0xFFFF
// 1948     reference->next = reference->prev = NULL;
??CrossCallReturnLabel_167:
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_222:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1949     return reference;
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??create_reference_2:
        LJMP    ??Subroutine182_0 & 0xFFFF
        CFI EndBlock cfiBlock752
// 1950 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine143:
        CFI Block cfiCond753 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_218
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond754 Using cfiCommon0
        CFI (cfiCond754) NoFunction
        CFI (cfiCond754) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_86
        CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond754) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond754) CFA_SP SP+0
        CFI (cfiCond754) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond755 Using cfiCommon0
        CFI (cfiCond755) NoFunction
        CFI (cfiCond755) Conditional ??CrossCallReturnLabel_219, ??CrossCallReturnLabel_87
        CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond755) CFA_SP SP+0
        CFI (cfiCond755) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond756 Using cfiCommon0
        CFI (cfiCond756) NoFunction
        CFI (cfiCond756) Conditional ??CrossCallReturnLabel_222
        CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond756) CFA_SP SP+0
        CFI (cfiCond756) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond757 Using cfiCommon0
        CFI (cfiCond757) NoFunction
        CFI (cfiCond757) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_169
        CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond757) CFA_SP SP+0
        CFI (cfiCond757) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond758 Using cfiCommon0
        CFI (cfiCond758) NoFunction
        CFI (cfiCond758) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_167
        CFI (cfiCond758) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond758) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond758) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond758) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond758) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond758) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond758) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond758) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond758) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond758) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond758) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond758) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond758) CFA_SP SP+0
        CFI (cfiCond758) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond759 Using cfiCommon0
        CFI (cfiCond759) NoFunction
        CFI (cfiCond759) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_168
        CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond759) CFA_SP SP+0
        CFI (cfiCond759) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond760 Using cfiCommon0
        CFI (cfiCond760) NoFunction
        CFI (cfiCond760) Conditional ??CrossCallReturnLabel_221
        CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond760) CFA_SP SP+0
        CFI (cfiCond760) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker761 Using cfiCommon1
        CFI (cfiPicker761) NoFunction
        CFI (cfiPicker761) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
        CFI EndBlock cfiCond753
        CFI EndBlock cfiCond754
        CFI EndBlock cfiCond755
        CFI EndBlock cfiCond756
        CFI EndBlock cfiCond757
        CFI EndBlock cfiCond758
        CFI EndBlock cfiCond759
        CFI EndBlock cfiCond760
        CFI EndBlock cfiPicker761

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
        CFI Block cfiCond762 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_169
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond763 Using cfiCommon0
        CFI (cfiCond763) NoFunction
        CFI (cfiCond763) Conditional ??CrossCallReturnLabel_167
        CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond763) CFA_SP SP+0
        CFI (cfiCond763) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond764 Using cfiCommon0
        CFI (cfiCond764) NoFunction
        CFI (cfiCond764) Conditional ??CrossCallReturnLabel_168
        CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond764) CFA_SP SP+0
        CFI (cfiCond764) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker765 Using cfiCommon1
        CFI (cfiPicker765) NoFunction
        CFI (cfiPicker765) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_220:
        INC     DPTR
        RET
        CFI EndBlock cfiCond762
        CFI EndBlock cfiCond763
        CFI EndBlock cfiCond764
        CFI EndBlock cfiPicker765

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
        CFI Block cfiCond766 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_154
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond767 Using cfiCommon0
        CFI (cfiCond767) NoFunction
        CFI (cfiCond767) Conditional ??CrossCallReturnLabel_155
        CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond767) CFA_SP SP+0
        CFI (cfiCond767) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker768 Using cfiCommon1
        CFI (cfiPicker768) NoFunction
        CFI (cfiPicker768) Picker
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_343:
        RET
        CFI EndBlock cfiCond766
        CFI EndBlock cfiCond767
        CFI EndBlock cfiPicker768

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine142:
        CFI Block cfiCond769 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_338
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond770 Using cfiCommon0
        CFI (cfiCond770) NoFunction
        CFI (cfiCond770) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_339
        CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond770) CFA_SP SP+0
        CFI (cfiCond770) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond771 Using cfiCommon0
        CFI (cfiCond771) NoFunction
        CFI (cfiCond771) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_340
        CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond771) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond771) CFA_SP SP+0
        CFI (cfiCond771) CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond772 Using cfiCommon0
        CFI (cfiCond772) NoFunction
        CFI (cfiCond772) Conditional ??CrossCallReturnLabel_342, ??CrossCallReturnLabel_341
        CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond772) CFA_SP SP+0
        CFI (cfiCond772) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond773 Using cfiCommon0
        CFI (cfiCond773) NoFunction
        CFI (cfiCond773) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_154
        CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond773) CFA_SP SP+0
        CFI (cfiCond773) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond774 Using cfiCommon0
        CFI (cfiCond774) NoFunction
        CFI (cfiCond774) Conditional ??CrossCallReturnLabel_343, ??CrossCallReturnLabel_155
        CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond774) CFA_SP SP+0
        CFI (cfiCond774) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker775 Using cfiCommon1
        CFI (cfiPicker775) NoFunction
        CFI (cfiPicker775) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond769
        CFI EndBlock cfiCond770
        CFI EndBlock cfiCond771
        CFI EndBlock cfiCond772
        CFI EndBlock cfiCond773
        CFI EndBlock cfiCond774
        CFI EndBlock cfiPicker775
// 1951 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1952 static cJSON_bool add_item_to_array(cJSON *array, cJSON *item)
add_item_to_array:
        CFI Block cfiBlock776 Using cfiCommon0
        CFI Function add_item_to_array
        CODE
// 1953 {
        FUNCALL add_item_to_array, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1954     cJSON *child = NULL;
// 1955 
// 1956     if ((item == NULL) || (array == NULL) || (array == item))
        MOV     A,R6
        ORL     A,R7
        JZ      ??add_item_to_array_0
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??add_item_to_array_0
        MOV     A,R6
        XRL     A,?V0 + 0
        JNZ     ??add_item_to_array_1
        MOV     A,R7
        XRL     A,?V0 + 1
??add_item_to_array_1:
        JNZ     ??add_item_to_array_2
// 1957     {
// 1958         return false;
??add_item_to_array_0:
        MOV     R2,#0x0
        SJMP    ??add_item_to_array_3
// 1959     }
// 1960 
// 1961     child = array->child;
??add_item_to_array_2:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine198_0 & 0xFFFF
// 1962     /*
// 1963      * To find the last item in array quickly, we use prev in array
// 1964      */
// 1965     if (child == NULL)
??CrossCallReturnLabel_441:
        JNZ     ??add_item_to_array_4
// 1966     {
// 1967         /* list is empty, start new one */
// 1968         array->child = item;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        LCALL   ?Subroutine106 & 0xFFFF
// 1969         item->prev = item;
// 1970         item->next = NULL;
// 1971     }
??CrossCallReturnLabel_168:
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_221:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??add_item_to_array_5
// 1972     else
// 1973     {
// 1974         /* append to the end */
// 1975         if (child->prev)
??add_item_to_array_4:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine184_0 & 0xFFFF
??CrossCallReturnLabel_373:
        JZ      ??add_item_to_array_6
// 1976         {
// 1977             suffix_object(child->prev, item);
        ; Setup parameters for call to function suffix_object
        LCALL   ??suffix_object?relay
// 1978             array->child->prev = item;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine68 & 0xFFFF
// 1979         }
// 1980     }
??CrossCallReturnLabel_103:
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
??add_item_to_array_5:
        MOVX    @DPTR,A
// 1981 
// 1982     return true;
??add_item_to_array_6:
        MOV     R2,#0x1
??add_item_to_array_3:
        LJMP    ?Subroutine10 & 0xFFFF
        CFI EndBlock cfiBlock776
// 1983 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
        CFI Block cfiCond777 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_369
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond778 Using cfiCommon0
        CFI (cfiCond778) NoFunction
        CFI (cfiCond778) Conditional ??CrossCallReturnLabel_370
        CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond778) CFA_SP SP+0
        CFI (cfiCond778) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker779 Using cfiCommon1
        CFI (cfiPicker779) NoFunction
        CFI (cfiPicker779) Picker
        LCALL   ?Subroutine141 & 0xFFFF
        CFI EndBlock cfiCond777
        CFI EndBlock cfiCond778
        CFI EndBlock cfiPicker779
??CrossCallReturnLabel_215:
        REQUIRE ??Subroutine183_0
        ; // Fall through to label ??Subroutine183_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine183_0:
        CFI Block cfiCond780 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_374
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond781 Using cfiCommon0
        CFI (cfiCond781) NoFunction
        CFI (cfiCond781) Conditional ??CrossCallReturnLabel_375
        CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond781) CFA_SP SP+0
        CFI (cfiCond781) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond782 Using cfiCommon0
        CFI (cfiCond782) NoFunction
        CFI (cfiCond782) Conditional ??CrossCallReturnLabel_376
        CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond782) CFA_SP SP+0
        CFI (cfiCond782) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond783 Using cfiCommon0
        CFI (cfiCond783) NoFunction
        CFI (cfiCond783) Conditional ??CrossCallReturnLabel_369
        CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond783) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond783) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond783) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond783) CFA_SP SP+0
        CFI (cfiCond783) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond784 Using cfiCommon0
        CFI (cfiCond784) NoFunction
        CFI (cfiCond784) Conditional ??CrossCallReturnLabel_370
        CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond784) CFA_SP SP+0
        CFI (cfiCond784) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker785 Using cfiCommon1
        CFI (cfiPicker785) NoFunction
        CFI (cfiPicker785) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond780
        CFI EndBlock cfiCond781
        CFI EndBlock cfiCond782
        CFI EndBlock cfiCond783
        CFI EndBlock cfiCond784
        CFI EndBlock cfiPicker785
        REQUIRE ??Subroutine184_0
        ; // Fall through to label ??Subroutine184_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine184_0:
        CFI Block cfiCond786 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_373
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond787 Using cfiCommon0
        CFI (cfiCond787) NoFunction
        CFI (cfiCond787) Conditional ??CrossCallReturnLabel_374
        CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond787) CFA_SP SP+0
        CFI (cfiCond787) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond788 Using cfiCommon0
        CFI (cfiCond788) NoFunction
        CFI (cfiCond788) Conditional ??CrossCallReturnLabel_375
        CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond788) CFA_SP SP+0
        CFI (cfiCond788) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond789 Using cfiCommon0
        CFI (cfiCond789) NoFunction
        CFI (cfiCond789) Conditional ??CrossCallReturnLabel_376
        CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond789) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond789) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond789) CFA_SP SP+0
        CFI (cfiCond789) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond790 Using cfiCommon0
        CFI (cfiCond790) NoFunction
        CFI (cfiCond790) Conditional ??CrossCallReturnLabel_369
        CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond790) CFA_SP SP+0
        CFI (cfiCond790) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond791 Using cfiCommon0
        CFI (cfiCond791) NoFunction
        CFI (cfiCond791) Conditional ??CrossCallReturnLabel_370
        CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond791) CFA_SP SP+0
        CFI (cfiCond791) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker792 Using cfiCommon1
        CFI (cfiPicker792) NoFunction
        CFI (cfiPicker792) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond786
        CFI EndBlock cfiCond787
        CFI EndBlock cfiCond788
        CFI EndBlock cfiCond789
        CFI EndBlock cfiCond790
        CFI EndBlock cfiCond791
        CFI EndBlock cfiPicker792
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine185_0:
        CFI Block cfiCond793 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_372
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond794 Using cfiCommon0
        CFI (cfiCond794) NoFunction
        CFI (cfiCond794) Conditional ??CrossCallReturnLabel_371
        CFI (cfiCond794) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond794) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond794) CFA_SP SP+-5
        CFI Block cfiCond795 Using cfiCommon0
        CFI (cfiCond795) NoFunction
        CFI (cfiCond795) Conditional ??CrossCallReturnLabel_373
        CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond795) CFA_SP SP+0
        CFI (cfiCond795) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond796 Using cfiCommon0
        CFI (cfiCond796) NoFunction
        CFI (cfiCond796) Conditional ??CrossCallReturnLabel_374
        CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond796) CFA_SP SP+0
        CFI (cfiCond796) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond797 Using cfiCommon0
        CFI (cfiCond797) NoFunction
        CFI (cfiCond797) Conditional ??CrossCallReturnLabel_375
        CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond797) CFA_SP SP+0
        CFI (cfiCond797) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond798 Using cfiCommon0
        CFI (cfiCond798) NoFunction
        CFI (cfiCond798) Conditional ??CrossCallReturnLabel_376
        CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond798) CFA_SP SP+0
        CFI (cfiCond798) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond799 Using cfiCommon0
        CFI (cfiCond799) NoFunction
        CFI (cfiCond799) Conditional ??CrossCallReturnLabel_369
        CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond799) CFA_SP SP+0
        CFI (cfiCond799) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond800 Using cfiCommon0
        CFI (cfiCond800) NoFunction
        CFI (cfiCond800) Conditional ??CrossCallReturnLabel_370
        CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond800) CFA_SP SP+0
        CFI (cfiCond800) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker801 Using cfiCommon1
        CFI (cfiPicker801) NoFunction
        CFI (cfiPicker801) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_538:
        MOV     A,R2
        ORL     A,R3
        RET
        CFI EndBlock cfiCond793
        CFI EndBlock cfiCond794
        CFI EndBlock cfiCond795
        CFI EndBlock cfiCond796
        CFI EndBlock cfiCond797
        CFI EndBlock cfiCond798
        CFI EndBlock cfiCond799
        CFI EndBlock cfiCond800
        CFI EndBlock cfiPicker801
// 1984 
// 1985 /* Add item to array/object. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1986 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToArray(cJSON *array, cJSON *item)
cJSON_AddItemToArray:
        CFI Block cfiBlock802 Using cfiCommon0
        CFI Function cJSON_AddItemToArray
        CODE
// 1987 {
        FUNCALL cJSON_AddItemToArray, add_item_to_array
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 1988     return add_item_to_array(array, item);
        ; Setup parameters for call to function add_item_to_array
        LCALL   ??add_item_to_array?relay
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock802
// 1989 }
// 1990 
// 1991 #if defined(__clang__) || (defined(__GNUC__)  && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ > 5))))
// 1992     #pragma GCC diagnostic push
// 1993 #endif
// 1994 #ifdef __GNUC__
// 1995 #pragma GCC diagnostic ignored "-Wcast-qual"
// 1996 #endif
// 1997 /* helper function to cast away const */
// 1998 static void* cast_away_const(const void* string)
// 1999 {
// 2000     return (void*)string;
// 2001 }
// 2002 #if defined(__clang__) || (defined(__GNUC__)  && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ > 5))))
// 2003     #pragma GCC diagnostic pop
// 2004 #endif
// 2005 
// 2006 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2007 static cJSON_bool add_item_to_object(cJSON * const object, const char * const string, cJSON * const item, const internal_hooks * const hooks, const cJSON_bool constant_key)
add_item_to_object:
        CFI Block cfiBlock803 Using cfiCommon0
        CFI Function add_item_to_object
        CODE
// 2008 {
        FUNCALL add_item_to_object, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL add_item_to_object, add_item_to_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_509:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2009     char *new_key = NULL;
// 2010     int new_type = cJSON_Invalid;
// 2011 
// 2012     if ((object == NULL) || (string == NULL) || (item == NULL) || (object == item))
??CrossCallReturnLabel_65:
        ORL     A,R7
        JZ      ??add_item_to_object_0
        MOV     A,R2
        ORL     A,R3
        JZ      ??add_item_to_object_0
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??add_item_to_object_0
        MOV     A,?V0 + 0
        XRL     A,R6
        JNZ     ??add_item_to_object_1
        MOV     A,?V0 + 1
        XRL     A,R7
??add_item_to_object_1:
        JNZ     ??add_item_to_object_2
// 2013     {
// 2014         return false;
??add_item_to_object_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??add_item_to_object_3 & 0xFFFF
// 2015     }
// 2016 
// 2017     if (constant_key)
??add_item_to_object_2:
        MOV     A,R0
        ORL     A,R1
        JZ      ??add_item_to_object_4
// 2018     {
// 2019         new_key = (char*)cast_away_const(string);
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2020         new_type = item->type | cJSON_StringIsConst;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x2
        SJMP    ??add_item_to_object_5
// 2021     }
// 2022     else
// 2023     {
// 2024         new_key = (char*)cJSON_strdup((const unsigned char*)string, hooks);
??add_item_to_object_4:
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ??cJSON_strdup?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2025         if (new_key == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??add_item_to_object_0
// 2026         {
// 2027             return false;
// 2028         }
// 2029 
// 2030         new_type = item->type & ~cJSON_StringIsConst;
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xfd
??add_item_to_object_5:
        MOV     ?V0 + 5,A
// 2031     }
// 2032 
// 2033     if (!(item->type & cJSON_StringIsConst) && (item->string != NULL))
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??add_item_to_object_6
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_355:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_461:
        JZ      ??add_item_to_object_6
// 2034     {
// 2035         hooks->deallocate(item->string);
        ; Setup parameters for indirect call
        LCALL   ?Subroutine85 & 0xFFFF
// 2036     }
??CrossCallReturnLabel_356:
        LCALL   ??Subroutine188_0 & 0xFFFF
??CrossCallReturnLabel_384:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_260:
        LCALL   ?CALL_IND
// 2037 
// 2038     item->string = new_key;
??add_item_to_object_6:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_357:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ?Subroutine92 & 0xFFFF
// 2039     item->type = new_type;
??CrossCallReturnLabel_149:
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 2040 
// 2041     return add_item_to_array(object, item);
        ; Setup parameters for call to function add_item_to_array
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??add_item_to_array?relay
??add_item_to_object_3:
        LJMP    ??Subroutine151_0 & 0xFFFF
        CFI EndBlock cfiBlock803
// 2042 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
        CFI Block cfiCond804 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_67
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond805 Using cfiCommon0
        CFI (cfiCond805) NoFunction
        CFI (cfiCond805) Conditional ??CrossCallReturnLabel_68
        CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond805) CFA_SP SP+0
        CFI (cfiCond805) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond806 Using cfiCommon0
        CFI (cfiCond806) NoFunction
        CFI (cfiCond806) Conditional ??CrossCallReturnLabel_65
        CFI (cfiCond806) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond806) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond806) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond806) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond806) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond806) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond806) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond806) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond806) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond806) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond806) CFA_SP SP+0
        CFI (cfiCond806) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond807 Using cfiCommon0
        CFI (cfiCond807) NoFunction
        CFI (cfiCond807) Conditional ??CrossCallReturnLabel_66
        CFI (cfiCond807) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond807) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond807) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond807) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond807) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond807) CFA_SP SP+0
        CFI (cfiCond807) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker808 Using cfiCommon1
        CFI (cfiPicker808) NoFunction
        CFI (cfiPicker808) Picker
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_628:
        MOV     A,R6
        RET
        CFI EndBlock cfiCond804
        CFI EndBlock cfiCond805
        CFI EndBlock cfiCond806
        CFI EndBlock cfiCond807
        CFI EndBlock cfiPicker808
// 2043 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2044 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToObject(cJSON *object, const char *string, cJSON *item)
cJSON_AddItemToObject:
        CFI Block cfiBlock809 Using cfiCommon0
        CFI Function cJSON_AddItemToObject
        CODE
// 2045 {
        FUNCALL cJSON_AddItemToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
// 2046     return add_item_to_object(object, string, item, &global_hooks, false);
??CrossCallReturnLabel_71:
        LJMP    ?Subroutine7 & 0xFFFF
        CFI EndBlock cfiBlock809
// 2047 }
// 2048 
// 2049 /* Add an item to an object with constant string as key */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2050 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToObjectCS(cJSON *object, const char *string, cJSON *item)
cJSON_AddItemToObjectCS:
        CFI Block cfiBlock810 Using cfiCommon0
        CFI Function cJSON_AddItemToObjectCS
        CODE
// 2051 {
        FUNCALL cJSON_AddItemToObjectCS, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
// 2052     return add_item_to_object(object, string, item, &global_hooks, true);
??CrossCallReturnLabel_63:
        LJMP    ?Subroutine7 & 0xFFFF
        CFI EndBlock cfiBlock810
// 2053 }
// 2054 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2055 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)
cJSON_AddItemReferenceToArray:
        CFI Block cfiBlock811 Using cfiCommon0
        CFI Function cJSON_AddItemReferenceToArray
        CODE
// 2056 {
        FUNCALL cJSON_AddItemReferenceToArray, create_reference
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddItemReferenceToArray, add_item_to_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
// 2057     if (array == NULL)
        MOV     A,R6
        ORL     A,R7
        JNZ     ??cJSON_AddItemReferenceToArray_0
// 2058     {
// 2059         return false;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_AddItemReferenceToArray_1
// 2060     }
// 2061 
// 2062     return add_item_to_array(array, create_reference(item, &global_hooks));
??cJSON_AddItemReferenceToArray_0:
        ; Setup parameters for call to function add_item_to_array
        ; Setup parameters for call to function create_reference
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        LCALL   ??create_reference?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??add_item_to_array?relay
??cJSON_AddItemReferenceToArray_1:
        SJMP    ??Subroutine186_0
        CFI EndBlock cfiBlock811
// 2063 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
        CFI Block cfiBlock812 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_DetachItemViaPointer?relay
        CFI EndBlock cfiBlock812
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine186_0:
        CFI Block cfiBlock813 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock813
// 2064 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2065 CJSON_PUBLIC(cJSON_bool) cJSON_AddItemReferenceToObject(cJSON *object, const char *string, cJSON *item)
cJSON_AddItemReferenceToObject:
        CFI Block cfiBlock814 Using cfiCommon0
        CFI Function cJSON_AddItemReferenceToObject
        CODE
// 2066 {
        FUNCALL cJSON_AddItemReferenceToObject, create_reference
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddItemReferenceToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
// 2067     if ((object == NULL) || (string == NULL))
??CrossCallReturnLabel_385:
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_AddItemReferenceToObject_0
        MOV     A,R4
        ORL     A,?V0 + 1
        JNZ     ??cJSON_AddItemReferenceToObject_1
// 2068     {
// 2069         return false;
??cJSON_AddItemReferenceToObject_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_AddItemReferenceToObject_2
// 2070     }
// 2071 
// 2072     return add_item_to_object(object, string, create_reference(item, &global_hooks), &global_hooks, false);
??cJSON_AddItemReferenceToObject_1:
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 2,#global_hooks & 0xff
        MOV     ?V0 + 3,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        ; Setup parameters for call to function create_reference
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        LCALL   ??create_reference?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_392:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
??cJSON_AddItemReferenceToObject_2:
        LJMP    ??Subroutine182_0 & 0xFFFF
        CFI EndBlock cfiBlock814
// 2073 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
        CFI Block cfiCond815 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_390
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond816 Using cfiCommon0
        CFI (cfiCond816) NoFunction
        CFI (cfiCond816) Conditional ??CrossCallReturnLabel_391
        CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond816) CFA_SP SP+0
        CFI (cfiCond816) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker817 Using cfiCommon1
        CFI (cfiPicker817) NoFunction
        CFI (cfiPicker817) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond815
        CFI EndBlock cfiCond816
        CFI EndBlock cfiPicker817
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine187_0:
        CFI Block cfiCond818 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_388
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond819 Using cfiCommon0
        CFI (cfiCond819) NoFunction
        CFI (cfiCond819) Conditional ??CrossCallReturnLabel_389
        CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond819) CFA_SP SP+0
        CFI (cfiCond819) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond820 Using cfiCommon0
        CFI (cfiCond820) NoFunction
        CFI (cfiCond820) Conditional ??CrossCallReturnLabel_390
        CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond820) CFA_SP SP+0
        CFI (cfiCond820) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond821 Using cfiCommon0
        CFI (cfiCond821) NoFunction
        CFI (cfiCond821) Conditional ??CrossCallReturnLabel_391
        CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond821) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond821) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond821) CFA_SP SP+0
        CFI (cfiCond821) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker822 Using cfiCommon1
        CFI (cfiPicker822) NoFunction
        CFI (cfiPicker822) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond818
        CFI EndBlock cfiCond819
        CFI EndBlock cfiCond820
        CFI EndBlock cfiCond821
        CFI EndBlock cfiPicker822
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine188_0:
        CFI Block cfiCond823 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_377
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond824 Using cfiCommon0
        CFI (cfiCond824) NoFunction
        CFI (cfiCond824) Conditional ??CrossCallReturnLabel_378
        CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond824) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond824) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond824) CFA_SP SP+0
        CFI (cfiCond824) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond825 Using cfiCommon0
        CFI (cfiCond825) NoFunction
        CFI (cfiCond825) Conditional ??CrossCallReturnLabel_379
        CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond825) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond825) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond825) CFA_SP SP+-2
        CFI (cfiCond825) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond826 Using cfiCommon0
        CFI (cfiCond826) NoFunction
        CFI (cfiCond826) Conditional ??CrossCallReturnLabel_380
        CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond826) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond826) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond826) CFA_SP SP+0
        CFI (cfiCond826) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond827 Using cfiCommon0
        CFI (cfiCond827) NoFunction
        CFI (cfiCond827) Conditional ??CrossCallReturnLabel_381
        CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond827) CFA_SP SP+0
        CFI (cfiCond827) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond828 Using cfiCommon0
        CFI (cfiCond828) NoFunction
        CFI (cfiCond828) Conditional ??CrossCallReturnLabel_382
        CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond828) CFA_SP SP+-2
        CFI (cfiCond828) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond829 Using cfiCommon0
        CFI (cfiCond829) NoFunction
        CFI (cfiCond829) Conditional ??CrossCallReturnLabel_383
        CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond829) CFA_SP SP+0
        CFI (cfiCond829) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond830 Using cfiCommon0
        CFI (cfiCond830) NoFunction
        CFI (cfiCond830) Conditional ??CrossCallReturnLabel_384
        CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond830) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond830) CFA_SP SP+0
        CFI (cfiCond830) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond831 Using cfiCommon0
        CFI (cfiCond831) NoFunction
        CFI (cfiCond831) Conditional ??CrossCallReturnLabel_385
        CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond831) CFA_SP SP+0
        CFI (cfiCond831) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond832 Using cfiCommon0
        CFI (cfiCond832) NoFunction
        CFI (cfiCond832) Conditional ??CrossCallReturnLabel_386
        CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond832) CFA_SP SP+0
        CFI (cfiCond832) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond833 Using cfiCommon0
        CFI (cfiCond833) NoFunction
        CFI (cfiCond833) Conditional ??CrossCallReturnLabel_387
        CFI (cfiCond833) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond833) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond833) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond833) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond833) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond833) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond833) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond833) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond833) CFA_SP SP+0
        CFI (cfiCond833) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond834 Using cfiCommon0
        CFI (cfiCond834) NoFunction
        CFI (cfiCond834) Conditional ??CrossCallReturnLabel_388
        CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond834) CFA_SP SP+0
        CFI (cfiCond834) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond835 Using cfiCommon0
        CFI (cfiCond835) NoFunction
        CFI (cfiCond835) Conditional ??CrossCallReturnLabel_389
        CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond835) CFA_SP SP+0
        CFI (cfiCond835) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond836 Using cfiCommon0
        CFI (cfiCond836) NoFunction
        CFI (cfiCond836) Conditional ??CrossCallReturnLabel_390
        CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond836) CFA_SP SP+0
        CFI (cfiCond836) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond837 Using cfiCommon0
        CFI (cfiCond837) NoFunction
        CFI (cfiCond837) Conditional ??CrossCallReturnLabel_391
        CFI (cfiCond837) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond837) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond837) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond837) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond837) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond837) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond837) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond837) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond837) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond837) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond837) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond837) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond837) CFA_SP SP+0
        CFI (cfiCond837) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker838 Using cfiCommon1
        CFI (cfiPicker838) NoFunction
        CFI (cfiPicker838) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_539:
        RET
        CFI EndBlock cfiCond823
        CFI EndBlock cfiCond824
        CFI EndBlock cfiCond825
        CFI EndBlock cfiCond826
        CFI EndBlock cfiCond827
        CFI EndBlock cfiCond828
        CFI EndBlock cfiCond829
        CFI EndBlock cfiCond830
        CFI EndBlock cfiCond831
        CFI EndBlock cfiCond832
        CFI EndBlock cfiCond833
        CFI EndBlock cfiCond834
        CFI EndBlock cfiCond835
        CFI EndBlock cfiCond836
        CFI EndBlock cfiCond837
        CFI EndBlock cfiPicker838
// 2074 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2075 CJSON_PUBLIC(cJSON*) cJSON_AddNullToObject(cJSON * const object, const char * const name)
cJSON_AddNullToObject:
        CFI Block cfiBlock839 Using cfiCommon0
        CFI Function cJSON_AddNullToObject
        CODE
// 2076 {
        FUNCALL cJSON_AddNullToObject, cJSON_CreateNull
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNullToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNullToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2077     cJSON *null = cJSON_CreateNull();
        ; Setup parameters for call to function cJSON_CreateNull
        LCALL   ??cJSON_CreateNull?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2078     if (add_item_to_object(object, name, null, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_393:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_123:
        JNZ     ??CrossCallReturnLabel_405
// 2079     {
// 2080         return null;
// 2081     }
// 2082 
// 2083     cJSON_Delete(null);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2084     return NULL;
??CrossCallReturnLabel_405:
        SJMP    ??Subroutine189_0
        CFI EndBlock cfiBlock839
// 2085 }
// 2086 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2087 CJSON_PUBLIC(cJSON*) cJSON_AddTrueToObject(cJSON * const object, const char * const name)
cJSON_AddTrueToObject:
        CFI Block cfiBlock840 Using cfiCommon0
        CFI Function cJSON_AddTrueToObject
        CODE
// 2088 {
        FUNCALL cJSON_AddTrueToObject, cJSON_CreateTrue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddTrueToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddTrueToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2089     cJSON *true_item = cJSON_CreateTrue();
        ; Setup parameters for call to function cJSON_CreateTrue
        LCALL   ??cJSON_CreateTrue?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2090     if (add_item_to_object(object, name, true_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_394:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_124:
        JNZ     ??CrossCallReturnLabel_406
// 2091     {
// 2092         return true_item;
// 2093     }
// 2094 
// 2095     cJSON_Delete(true_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2096     return NULL;
??CrossCallReturnLabel_406:
        SJMP    ??Subroutine189_0
        CFI EndBlock cfiBlock840
// 2097 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
        CFI Block cfiBlock841 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R3,#0x0
        CFI EndBlock cfiBlock841
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine189_0:
        CFI Block cfiBlock842 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock842
// 2098 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2099 CJSON_PUBLIC(cJSON*) cJSON_AddFalseToObject(cJSON * const object, const char * const name)
cJSON_AddFalseToObject:
        CFI Block cfiBlock843 Using cfiCommon0
        CFI Function cJSON_AddFalseToObject
        CODE
// 2100 {
        FUNCALL cJSON_AddFalseToObject, cJSON_CreateFalse
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddFalseToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddFalseToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2101     cJSON *false_item = cJSON_CreateFalse();
        ; Setup parameters for call to function cJSON_CreateFalse
        LCALL   ??cJSON_CreateFalse?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2102     if (add_item_to_object(object, name, false_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_395:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_125:
        JNZ     ??CrossCallReturnLabel_407
// 2103     {
// 2104         return false_item;
// 2105     }
// 2106 
// 2107     cJSON_Delete(false_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2108     return NULL;
??CrossCallReturnLabel_407:
        SJMP    ??Subroutine189_0
        CFI EndBlock cfiBlock843
// 2109 }
// 2110 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2111 CJSON_PUBLIC(cJSON*) cJSON_AddBoolToObject(cJSON * const object, const char * const name, const cJSON_bool boolean)
cJSON_AddBoolToObject:
        CFI Block cfiBlock844 Using cfiCommon0
        CFI Function cJSON_AddBoolToObject
        CODE
// 2112 {
        FUNCALL cJSON_AddBoolToObject, cJSON_CreateBool
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddBoolToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddBoolToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
// 2113     cJSON *bool_item = cJSON_CreateBool(boolean);
??CrossCallReturnLabel_386:
        ; Setup parameters for call to function cJSON_CreateBool
        LCALL   ??cJSON_CreateBool?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2114     if (add_item_to_object(object, name, bool_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_396:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_126:
        JNZ     ??CrossCallReturnLabel_408
// 2115     {
// 2116         return bool_item;
// 2117     }
// 2118 
// 2119     cJSON_Delete(bool_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2120     return NULL;
??CrossCallReturnLabel_408:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock844
// 2121 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
        CFI Block cfiCond845 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_392
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond846 Using cfiCommon0
        CFI (cfiCond846) NoFunction
        CFI (cfiCond846) Conditional ??CrossCallReturnLabel_393
        CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond846) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond846) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond846) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond846) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond846) CFA_SP SP+0
        CFI (cfiCond846) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond847 Using cfiCommon0
        CFI (cfiCond847) NoFunction
        CFI (cfiCond847) Conditional ??CrossCallReturnLabel_394
        CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond847) CFA_SP SP+0
        CFI (cfiCond847) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond848 Using cfiCommon0
        CFI (cfiCond848) NoFunction
        CFI (cfiCond848) Conditional ??CrossCallReturnLabel_395
        CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond848) CFA_SP SP+0
        CFI (cfiCond848) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond849 Using cfiCommon0
        CFI (cfiCond849) NoFunction
        CFI (cfiCond849) Conditional ??CrossCallReturnLabel_396
        CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond849) CFA_SP SP+0
        CFI (cfiCond849) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond850 Using cfiCommon0
        CFI (cfiCond850) NoFunction
        CFI (cfiCond850) Conditional ??CrossCallReturnLabel_397
        CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond850) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond850) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond850) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond850) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond850) CFA_SP SP+0
        CFI (cfiCond850) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond851 Using cfiCommon0
        CFI (cfiCond851) NoFunction
        CFI (cfiCond851) Conditional ??CrossCallReturnLabel_398
        CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond851) CFA_SP SP+0
        CFI (cfiCond851) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond852 Using cfiCommon0
        CFI (cfiCond852) NoFunction
        CFI (cfiCond852) Conditional ??CrossCallReturnLabel_399
        CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond852) CFA_SP SP+0
        CFI (cfiCond852) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond853 Using cfiCommon0
        CFI (cfiCond853) NoFunction
        CFI (cfiCond853) Conditional ??CrossCallReturnLabel_400
        CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond853) CFA_SP SP+0
        CFI (cfiCond853) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond854 Using cfiCommon0
        CFI (cfiCond854) NoFunction
        CFI (cfiCond854) Conditional ??CrossCallReturnLabel_401
        CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond854) CFA_SP SP+0
        CFI (cfiCond854) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker855 Using cfiCommon1
        CFI (cfiPicker855) NoFunction
        CFI (cfiPicker855) Picker
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        CFI EndBlock cfiCond845
        CFI EndBlock cfiCond846
        CFI EndBlock cfiCond847
        CFI EndBlock cfiCond848
        CFI EndBlock cfiCond849
        CFI EndBlock cfiCond850
        CFI EndBlock cfiCond851
        CFI EndBlock cfiCond852
        CFI EndBlock cfiCond853
        CFI EndBlock cfiCond854
        CFI EndBlock cfiPicker855
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine190_0:
        CFI Block cfiCond856 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_402
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond857 Using cfiCommon0
        CFI (cfiCond857) NoFunction
        CFI (cfiCond857) Conditional ??CrossCallReturnLabel_402
        CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond857) CFA_SP SP+0
        CFI (cfiCond857) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond858 Using cfiCommon0
        CFI (cfiCond858) NoFunction
        CFI (cfiCond858) Conditional ??CrossCallReturnLabel_392
        CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond858) CFA_SP SP+0
        CFI (cfiCond858) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond859 Using cfiCommon0
        CFI (cfiCond859) NoFunction
        CFI (cfiCond859) Conditional ??CrossCallReturnLabel_393
        CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond859) CFA_SP SP+0
        CFI (cfiCond859) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond860 Using cfiCommon0
        CFI (cfiCond860) NoFunction
        CFI (cfiCond860) Conditional ??CrossCallReturnLabel_394
        CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond860) CFA_SP SP+0
        CFI (cfiCond860) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond861 Using cfiCommon0
        CFI (cfiCond861) NoFunction
        CFI (cfiCond861) Conditional ??CrossCallReturnLabel_395
        CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond861) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond861) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond861) CFA_SP SP+0
        CFI (cfiCond861) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond862 Using cfiCommon0
        CFI (cfiCond862) NoFunction
        CFI (cfiCond862) Conditional ??CrossCallReturnLabel_396
        CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond862) CFA_SP SP+0
        CFI (cfiCond862) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond863 Using cfiCommon0
        CFI (cfiCond863) NoFunction
        CFI (cfiCond863) Conditional ??CrossCallReturnLabel_397
        CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond863) CFA_SP SP+0
        CFI (cfiCond863) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond864 Using cfiCommon0
        CFI (cfiCond864) NoFunction
        CFI (cfiCond864) Conditional ??CrossCallReturnLabel_398
        CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond864) CFA_SP SP+0
        CFI (cfiCond864) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond865 Using cfiCommon0
        CFI (cfiCond865) NoFunction
        CFI (cfiCond865) Conditional ??CrossCallReturnLabel_399
        CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond865) CFA_SP SP+0
        CFI (cfiCond865) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond866 Using cfiCommon0
        CFI (cfiCond866) NoFunction
        CFI (cfiCond866) Conditional ??CrossCallReturnLabel_400
        CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond866) CFA_SP SP+0
        CFI (cfiCond866) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond867 Using cfiCommon0
        CFI (cfiCond867) NoFunction
        CFI (cfiCond867) Conditional ??CrossCallReturnLabel_401
        CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond867) CFA_SP SP+0
        CFI (cfiCond867) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker868 Using cfiCommon1
        CFI (cfiPicker868) NoFunction
        CFI (cfiPicker868) Picker
        LCALL   ??add_item_to_object?relay
        MOV     A,#0x6
        RET
        CFI EndBlock cfiCond856
        CFI EndBlock cfiCond857
        CFI EndBlock cfiCond858
        CFI EndBlock cfiCond859
        CFI EndBlock cfiCond860
        CFI EndBlock cfiCond861
        CFI EndBlock cfiCond862
        CFI EndBlock cfiCond863
        CFI EndBlock cfiCond864
        CFI EndBlock cfiCond865
        CFI EndBlock cfiCond866
        CFI EndBlock cfiCond867
        CFI EndBlock cfiPicker868
// 2122 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2123 CJSON_PUBLIC(cJSON*) cJSON_AddNumberToObject(cJSON * const object, const char * const name, const double number)
cJSON_AddNumberToObject:
        CFI Block cfiBlock869 Using cfiCommon0
        CFI Function cJSON_AddNumberToObject
        CODE
// 2124 {
        FUNCALL cJSON_AddNumberToObject, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNumberToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddNumberToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
// 2125     cJSON *number_item = cJSON_CreateNumber(number);
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        LCALL   ??cJSON_CreateNumber?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2126     if (add_item_to_object(object, name, number_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 22)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_397:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_127:
        JNZ     ??CrossCallReturnLabel_409
// 2127     {
// 2128         return number_item;
// 2129     }
// 2130 
// 2131     cJSON_Delete(number_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2132     return NULL;
??CrossCallReturnLabel_409:
        LJMP    ??Subroutine151_0 & 0xFFFF
        CFI EndBlock cfiBlock869
// 2133 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
        CFI Block cfiCond870 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_123
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond871 Using cfiCommon0
        CFI (cfiCond871) NoFunction
        CFI (cfiCond871) Conditional ??CrossCallReturnLabel_124
        CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond871) CFA_SP SP+0
        CFI (cfiCond871) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond872 Using cfiCommon0
        CFI (cfiCond872) NoFunction
        CFI (cfiCond872) Conditional ??CrossCallReturnLabel_125
        CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond872) CFA_SP SP+0
        CFI (cfiCond872) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond873 Using cfiCommon0
        CFI (cfiCond873) NoFunction
        CFI (cfiCond873) Conditional ??CrossCallReturnLabel_126
        CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond873) CFA_SP SP+0
        CFI (cfiCond873) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond874 Using cfiCommon0
        CFI (cfiCond874) NoFunction
        CFI (cfiCond874) Conditional ??CrossCallReturnLabel_127
        CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond874) CFA_SP SP+0
        CFI (cfiCond874) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond875 Using cfiCommon0
        CFI (cfiCond875) NoFunction
        CFI (cfiCond875) Conditional ??CrossCallReturnLabel_128
        CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond875) CFA_SP SP+0
        CFI (cfiCond875) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond876 Using cfiCommon0
        CFI (cfiCond876) NoFunction
        CFI (cfiCond876) Conditional ??CrossCallReturnLabel_129
        CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond876) CFA_SP SP+0
        CFI (cfiCond876) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond877 Using cfiCommon0
        CFI (cfiCond877) NoFunction
        CFI (cfiCond877) Conditional ??CrossCallReturnLabel_130
        CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond877) CFA_SP SP+0
        CFI (cfiCond877) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond878 Using cfiCommon0
        CFI (cfiCond878) NoFunction
        CFI (cfiCond878) Conditional ??CrossCallReturnLabel_131
        CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond878) CFA_SP SP+0
        CFI (cfiCond878) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker879 Using cfiCommon1
        CFI (cfiPicker879) NoFunction
        CFI (cfiPicker879) Picker
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        RET
        CFI EndBlock cfiCond870
        CFI EndBlock cfiCond871
        CFI EndBlock cfiCond872
        CFI EndBlock cfiCond873
        CFI EndBlock cfiCond874
        CFI EndBlock cfiCond875
        CFI EndBlock cfiCond876
        CFI EndBlock cfiCond877
        CFI EndBlock cfiCond878
        CFI EndBlock cfiPicker879
// 2134 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2135 CJSON_PUBLIC(cJSON*) cJSON_AddStringToObject(cJSON * const object, const char * const name, const char * const string)
cJSON_AddStringToObject:
        CFI Block cfiBlock880 Using cfiCommon0
        CFI Function cJSON_AddStringToObject
        CODE
// 2136 {
        FUNCALL cJSON_AddStringToObject, cJSON_CreateString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddStringToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddStringToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine47 & 0xFFFF
// 2137     cJSON *string_item = cJSON_CreateString(string);
// 2138     if (add_item_to_object(object, name, string_item, &global_hooks, false))
??CrossCallReturnLabel_69:
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_398:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_128:
        JNZ     ??CrossCallReturnLabel_410
// 2139     {
// 2140         return string_item;
// 2141     }
// 2142 
// 2143     cJSON_Delete(string_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2144     return NULL;
??CrossCallReturnLabel_410:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock880
// 2145 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
        CFI Block cfiCond881 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_403
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond882 Using cfiCommon0
        CFI (cfiCond882) NoFunction
        CFI (cfiCond882) Conditional ??CrossCallReturnLabel_404
        CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond882) CFA_SP SP+0
        CFI (cfiCond882) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker883 Using cfiCommon1
        CFI (cfiPicker883) NoFunction
        CFI (cfiPicker883) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        CFI EndBlock cfiCond881
        CFI EndBlock cfiCond882
        CFI EndBlock cfiPicker883
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine191_0:
        CFI Block cfiCond884 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_405
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond885 Using cfiCommon0
        CFI (cfiCond885) NoFunction
        CFI (cfiCond885) Conditional ??CrossCallReturnLabel_406
        CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond885) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond885) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond885) CFA_SP SP+0
        CFI (cfiCond885) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond886 Using cfiCommon0
        CFI (cfiCond886) NoFunction
        CFI (cfiCond886) Conditional ??CrossCallReturnLabel_407
        CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond886) CFA_SP SP+0
        CFI (cfiCond886) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond887 Using cfiCommon0
        CFI (cfiCond887) NoFunction
        CFI (cfiCond887) Conditional ??CrossCallReturnLabel_408
        CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond887) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond887) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond887) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond887) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond887) CFA_SP SP+0
        CFI (cfiCond887) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond888 Using cfiCommon0
        CFI (cfiCond888) NoFunction
        CFI (cfiCond888) Conditional ??CrossCallReturnLabel_409
        CFI (cfiCond888) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond888) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond888) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond888) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond888) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond888) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond888) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond888) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond888) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond888) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond888) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond888) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond888) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond888) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond888) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond888) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond888) CFA_SP SP+0
        CFI (cfiCond888) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond889 Using cfiCommon0
        CFI (cfiCond889) NoFunction
        CFI (cfiCond889) Conditional ??CrossCallReturnLabel_410
        CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond889) CFA_SP SP+0
        CFI (cfiCond889) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond890 Using cfiCommon0
        CFI (cfiCond890) NoFunction
        CFI (cfiCond890) Conditional ??CrossCallReturnLabel_411
        CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond890) CFA_SP SP+0
        CFI (cfiCond890) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond891 Using cfiCommon0
        CFI (cfiCond891) NoFunction
        CFI (cfiCond891) Conditional ??CrossCallReturnLabel_412
        CFI (cfiCond891) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond891) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond891) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond891) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond891) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond891) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond891) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond891) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond891) CFA_SP SP+0
        CFI (cfiCond891) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond892 Using cfiCommon0
        CFI (cfiCond892) NoFunction
        CFI (cfiCond892) Conditional ??CrossCallReturnLabel_413
        CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond892) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond892) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond892) CFA_SP SP+0
        CFI (cfiCond892) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond893 Using cfiCommon0
        CFI (cfiCond893) NoFunction
        CFI (cfiCond893) Conditional ??CrossCallReturnLabel_403
        CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond893) CFA_SP SP+0
        CFI (cfiCond893) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond894 Using cfiCommon0
        CFI (cfiCond894) NoFunction
        CFI (cfiCond894) Conditional ??CrossCallReturnLabel_404
        CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond894) CFA_SP SP+0
        CFI (cfiCond894) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker895 Using cfiCommon1
        CFI (cfiPicker895) NoFunction
        CFI (cfiPicker895) Picker
        LCALL   ??cJSON_Delete?relay
        MOV     R2,#0x0
        MOV     R3,#0x0
        RET
        CFI EndBlock cfiCond884
        CFI EndBlock cfiCond885
        CFI EndBlock cfiCond886
        CFI EndBlock cfiCond887
        CFI EndBlock cfiCond888
        CFI EndBlock cfiCond889
        CFI EndBlock cfiCond890
        CFI EndBlock cfiCond891
        CFI EndBlock cfiCond892
        CFI EndBlock cfiCond893
        CFI EndBlock cfiCond894
        CFI EndBlock cfiPicker895
// 2146 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2147 CJSON_PUBLIC(cJSON*) cJSON_AddRawToObject(cJSON * const object, const char * const name, const char * const raw)
cJSON_AddRawToObject:
        CFI Block cfiBlock896 Using cfiCommon0
        CFI Function cJSON_AddRawToObject
        CODE
// 2148 {
        FUNCALL cJSON_AddRawToObject, cJSON_CreateRaw
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddRawToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddRawToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine188_0 & 0xFFFF
// 2149     cJSON *raw_item = cJSON_CreateRaw(raw);
??CrossCallReturnLabel_387:
        ; Setup parameters for call to function cJSON_CreateRaw
        LCALL   ??cJSON_CreateRaw?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2150     if (add_item_to_object(object, name, raw_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_399:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_129:
        JNZ     ??CrossCallReturnLabel_411
// 2151     {
// 2152         return raw_item;
// 2153     }
// 2154 
// 2155     cJSON_Delete(raw_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2156     return NULL;
??CrossCallReturnLabel_411:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock896
// 2157 }
// 2158 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2159 CJSON_PUBLIC(cJSON*) cJSON_AddObjectToObject(cJSON * const object, const char * const name)
cJSON_AddObjectToObject:
        CFI Block cfiBlock897 Using cfiCommon0
        CFI Function cJSON_AddObjectToObject
        CODE
// 2160 {
        FUNCALL cJSON_AddObjectToObject, cJSON_CreateObject
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddObjectToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddObjectToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2161     cJSON *object_item = cJSON_CreateObject();
        ; Setup parameters for call to function cJSON_CreateObject
        LCALL   ??cJSON_CreateObject?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2162     if (add_item_to_object(object, name, object_item, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_400:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_130:
        JNZ     ??CrossCallReturnLabel_412
// 2163     {
// 2164         return object_item;
// 2165     }
// 2166 
// 2167     cJSON_Delete(object_item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2168     return NULL;
??CrossCallReturnLabel_412:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock897
// 2169 }
// 2170 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2171 CJSON_PUBLIC(cJSON*) cJSON_AddArrayToObject(cJSON * const object, const char * const name)
cJSON_AddArrayToObject:
        CFI Block cfiBlock898 Using cfiCommon0
        CFI Function cJSON_AddArrayToObject
        CODE
// 2172 {
        FUNCALL cJSON_AddArrayToObject, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddArrayToObject, add_item_to_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_AddArrayToObject, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2173     cJSON *array = cJSON_CreateArray();
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ??cJSON_CreateArray?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2174     if (add_item_to_object(object, name, array, &global_hooks, false))
        ; Setup parameters for call to function add_item_to_object
        CLR     A
        MOV     ?V0 + 4,A
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     ?V0 + 4,#global_hooks & 0xff
        MOV     ?V0 + 5,#(global_hooks >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_401:
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_131:
        JNZ     ??CrossCallReturnLabel_413
// 2175     {
// 2176         return array;
// 2177     }
// 2178 
// 2179     cJSON_Delete(array);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??Subroutine191_0 & 0xFFFF
// 2180     return NULL;
??CrossCallReturnLabel_413:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock898
// 2181 }
// 2182 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2183 CJSON_PUBLIC(cJSON *) cJSON_DetachItemViaPointer(cJSON *parent, cJSON * const item)
cJSON_DetachItemViaPointer:
        CFI Block cfiBlock899 Using cfiCommon0
        CFI Function cJSON_DetachItemViaPointer
        CODE
// 2184 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2185     if ((parent == NULL) || (item == NULL))
        MOV     A,R2
        ORL     A,R3
        JZ      ??cJSON_DetachItemViaPointer_0
        MOV     A,R4
        ORL     A,R5
        JNZ     ??cJSON_DetachItemViaPointer_1
// 2186     {
// 2187         return NULL;
??cJSON_DetachItemViaPointer_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        LJMP    ??cJSON_DetachItemViaPointer_2 & 0xFFFF
// 2188     }
// 2189 
// 2190     if (item != parent->child)
??cJSON_DetachItemViaPointer_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_621:
        MOV     A,R4
        XRL     A,R0
        JNZ     ??cJSON_DetachItemViaPointer_3
        MOV     A,R5
        XRL     A,R1
??cJSON_DetachItemViaPointer_3:
        JZ      ??CrossCallReturnLabel_422
// 2191     {
// 2192         /* not the first element */
// 2193         item->prev->next = item->next;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine153_0 & 0xFFFF
// 2194     }
??CrossCallReturnLabel_227:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_111:
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2195     if (item->next != NULL)
??CrossCallReturnLabel_422:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_462:
        JZ      ??CrossCallReturnLabel_430
// 2196     {
// 2197         /* not the last element */
// 2198         item->next->prev = item->prev;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine152_0 & 0xFFFF
// 2199     }
??CrossCallReturnLabel_228:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2200 
// 2201     if (item == parent->child)
??CrossCallReturnLabel_430:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_622:
        MOV     A,R4
        XRL     A,R0
        JNZ     ??cJSON_DetachItemViaPointer_4
        MOV     A,R5
        XRL     A,R1
??cJSON_DetachItemViaPointer_4:
        MOV     DPL,R4
        MOV     DPH,R5
        JNZ     ??cJSON_DetachItemViaPointer_5
// 2202     {
// 2203         /* first element */
// 2204         parent->child = item->next;
        LCALL   ?Subroutine49 & 0xFFFF
// 2205     }
??CrossCallReturnLabel_73:
        SJMP    ??cJSON_DetachItemViaPointer_6
// 2206     else if (item->next == NULL)
??cJSON_DetachItemViaPointer_5:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_463:
        JNZ     ??CrossCallReturnLabel_431
// 2207     {
// 2208         /* last element */
// 2209         parent->child->prev = item->prev;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine49 & 0xFFFF
// 2210     }
??CrossCallReturnLabel_74:
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
??cJSON_DetachItemViaPointer_6:
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2211 
// 2212     /* make sure the detached item doesn't point anywhere anymore */
// 2213     item->prev = NULL;
??CrossCallReturnLabel_431:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2214     item->next = NULL;
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2215 
// 2216     return item;
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
??cJSON_DetachItemViaPointer_2:
        LJMP    ??Subroutine186_0 & 0xFFFF
        CFI EndBlock cfiBlock899
// 2217 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
        CFI Block cfiCond900 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_437
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond901 Using cfiCommon0
        CFI (cfiCond901) NoFunction
        CFI (cfiCond901) Conditional ??CrossCallReturnLabel_438
        CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond901) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond901) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond901) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond901) CFA_SP SP+0
        CFI (cfiCond901) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker902 Using cfiCommon1
        CFI (cfiPicker902) NoFunction
        CFI (cfiPicker902) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond900
        CFI EndBlock cfiCond901
        CFI EndBlock cfiPicker902
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine192_0:
        CFI Block cfiCond903 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_435
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond904 Using cfiCommon0
        CFI (cfiCond904) NoFunction
        CFI (cfiCond904) Conditional ??CrossCallReturnLabel_436
        CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond904) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond904) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond904) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond904) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond904) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond904) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond904) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond904) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond904) CFA_SP SP+0
        CFI (cfiCond904) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond905 Using cfiCommon0
        CFI (cfiCond905) NoFunction
        CFI (cfiCond905) Conditional ??CrossCallReturnLabel_437
        CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond905) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond905) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond905) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond905) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond905) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond905) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond905) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond905) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond905) CFA_SP SP+0
        CFI (cfiCond905) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond906 Using cfiCommon0
        CFI (cfiCond906) NoFunction
        CFI (cfiCond906) Conditional ??CrossCallReturnLabel_438
        CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond906) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond906) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond906) CFA_SP SP+0
        CFI (cfiCond906) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker907 Using cfiCommon1
        CFI (cfiPicker907) NoFunction
        CFI (cfiPicker907) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond903
        CFI EndBlock cfiCond904
        CFI EndBlock cfiCond905
        CFI EndBlock cfiCond906
        CFI EndBlock cfiPicker907
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine193_0:
        CFI Block cfiCond908 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_430
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond909 Using cfiCommon0
        CFI (cfiCond909) NoFunction
        CFI (cfiCond909) Conditional ??CrossCallReturnLabel_431
        CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond909) CFA_SP SP+0
        CFI (cfiCond909) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond910 Using cfiCommon0
        CFI (cfiCond910) NoFunction
        CFI (cfiCond910) Conditional ??CrossCallReturnLabel_432
        CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond910) CFA_SP SP+0
        CFI (cfiCond910) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond911 Using cfiCommon0
        CFI (cfiCond911) NoFunction
        CFI (cfiCond911) Conditional ??CrossCallReturnLabel_433
        CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond911) CFA_SP SP+0
        CFI (cfiCond911) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond912 Using cfiCommon0
        CFI (cfiCond912) NoFunction
        CFI (cfiCond912) Conditional ??CrossCallReturnLabel_434
        CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond912) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond912) CFA_SP SP+0
        CFI (cfiCond912) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond913 Using cfiCommon0
        CFI (cfiCond913) NoFunction
        CFI (cfiCond913) Conditional ??CrossCallReturnLabel_435
        CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond913) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond913) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond913) CFA_SP SP+0
        CFI (cfiCond913) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond914 Using cfiCommon0
        CFI (cfiCond914) NoFunction
        CFI (cfiCond914) Conditional ??CrossCallReturnLabel_436
        CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond914) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond914) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond914) CFA_SP SP+0
        CFI (cfiCond914) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond915 Using cfiCommon0
        CFI (cfiCond915) NoFunction
        CFI (cfiCond915) Conditional ??CrossCallReturnLabel_437
        CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond915) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond915) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond915) CFA_SP SP+0
        CFI (cfiCond915) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond916 Using cfiCommon0
        CFI (cfiCond916) NoFunction
        CFI (cfiCond916) Conditional ??CrossCallReturnLabel_438
        CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond916) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond916) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond916) CFA_SP SP+0
        CFI (cfiCond916) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker917 Using cfiCommon1
        CFI (cfiPicker917) NoFunction
        CFI (cfiPicker917) Picker
        INC     DPTR
        CFI EndBlock cfiCond908
        CFI EndBlock cfiCond909
        CFI EndBlock cfiCond910
        CFI EndBlock cfiCond911
        CFI EndBlock cfiCond912
        CFI EndBlock cfiCond913
        CFI EndBlock cfiCond914
        CFI EndBlock cfiCond915
        CFI EndBlock cfiCond916
        CFI EndBlock cfiPicker917
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine194_0:
        CFI Block cfiCond918 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_429
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond919 Using cfiCommon0
        CFI (cfiCond919) NoFunction
        CFI (cfiCond919) Conditional ??CrossCallReturnLabel_430
        CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond919) CFA_SP SP+0
        CFI (cfiCond919) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond920 Using cfiCommon0
        CFI (cfiCond920) NoFunction
        CFI (cfiCond920) Conditional ??CrossCallReturnLabel_431
        CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond920) CFA_SP SP+0
        CFI (cfiCond920) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond921 Using cfiCommon0
        CFI (cfiCond921) NoFunction
        CFI (cfiCond921) Conditional ??CrossCallReturnLabel_432
        CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond921) CFA_SP SP+0
        CFI (cfiCond921) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond922 Using cfiCommon0
        CFI (cfiCond922) NoFunction
        CFI (cfiCond922) Conditional ??CrossCallReturnLabel_433
        CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond922) CFA_SP SP+0
        CFI (cfiCond922) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond923 Using cfiCommon0
        CFI (cfiCond923) NoFunction
        CFI (cfiCond923) Conditional ??CrossCallReturnLabel_434
        CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond923) CFA_SP SP+0
        CFI (cfiCond923) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond924 Using cfiCommon0
        CFI (cfiCond924) NoFunction
        CFI (cfiCond924) Conditional ??CrossCallReturnLabel_435
        CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond924) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond924) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond924) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond924) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond924) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond924) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond924) CFA_SP SP+0
        CFI (cfiCond924) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond925 Using cfiCommon0
        CFI (cfiCond925) NoFunction
        CFI (cfiCond925) Conditional ??CrossCallReturnLabel_436
        CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond925) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond925) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond925) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond925) CFA_SP SP+0
        CFI (cfiCond925) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond926 Using cfiCommon0
        CFI (cfiCond926) NoFunction
        CFI (cfiCond926) Conditional ??CrossCallReturnLabel_437
        CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond926) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond926) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond926) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond926) CFA_SP SP+0
        CFI (cfiCond926) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond927 Using cfiCommon0
        CFI (cfiCond927) NoFunction
        CFI (cfiCond927) Conditional ??CrossCallReturnLabel_438
        CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond927) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond927) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond927) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond927) CFA_SP SP+0
        CFI (cfiCond927) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker928 Using cfiCommon1
        CFI (cfiPicker928) NoFunction
        CFI (cfiPicker928) Picker
        INC     DPTR
        CFI EndBlock cfiCond918
        CFI EndBlock cfiCond919
        CFI EndBlock cfiCond920
        CFI EndBlock cfiCond921
        CFI EndBlock cfiCond922
        CFI EndBlock cfiCond923
        CFI EndBlock cfiCond924
        CFI EndBlock cfiCond925
        CFI EndBlock cfiCond926
        CFI EndBlock cfiCond927
        CFI EndBlock cfiPicker928
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine195_0:
        CFI Block cfiCond929 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_414
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond930 Using cfiCommon0
        CFI (cfiCond930) NoFunction
        CFI (cfiCond930) Conditional ??CrossCallReturnLabel_415
        CFI (cfiCond930) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond930) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond930) CFA_SP SP+-5
        CFI Block cfiCond931 Using cfiCommon0
        CFI (cfiCond931) NoFunction
        CFI (cfiCond931) Conditional ??CrossCallReturnLabel_416
        CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond931) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond931) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond931) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond931) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond931) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond931) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond931) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond931) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond931) CFA_SP SP+0
        CFI (cfiCond931) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond932 Using cfiCommon0
        CFI (cfiCond932) NoFunction
        CFI (cfiCond932) Conditional ??CrossCallReturnLabel_417
        CFI (cfiCond932) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond932) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond932) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond932) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond932) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond932) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond932) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond932) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond932) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond932) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond932) CFA_SP SP+0
        CFI (cfiCond932) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond933 Using cfiCommon0
        CFI (cfiCond933) NoFunction
        CFI (cfiCond933) Conditional ??CrossCallReturnLabel_418
        CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond933) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond933) CFA_SP SP+0
        CFI (cfiCond933) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond934 Using cfiCommon0
        CFI (cfiCond934) NoFunction
        CFI (cfiCond934) Conditional ??CrossCallReturnLabel_419
        CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond934) CFA_SP SP+0
        CFI (cfiCond934) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond935 Using cfiCommon0
        CFI (cfiCond935) NoFunction
        CFI (cfiCond935) Conditional ??CrossCallReturnLabel_420
        CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond935) CFA_SP SP+0
        CFI (cfiCond935) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond936 Using cfiCommon0
        CFI (cfiCond936) NoFunction
        CFI (cfiCond936) Conditional ??CrossCallReturnLabel_421
        CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond936) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond936) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond936) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond936) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond936) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond936) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond936) CFA_SP SP+0
        CFI (cfiCond936) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond937 Using cfiCommon0
        CFI (cfiCond937) NoFunction
        CFI (cfiCond937) Conditional ??CrossCallReturnLabel_422
        CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond937) CFA_SP SP+0
        CFI (cfiCond937) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond938 Using cfiCommon0
        CFI (cfiCond938) NoFunction
        CFI (cfiCond938) Conditional ??CrossCallReturnLabel_423
        CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond938) CFA_SP SP+0
        CFI (cfiCond938) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond939 Using cfiCommon0
        CFI (cfiCond939) NoFunction
        CFI (cfiCond939) Conditional ??CrossCallReturnLabel_424
        CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond939) CFA_SP SP+0
        CFI (cfiCond939) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond940 Using cfiCommon0
        CFI (cfiCond940) NoFunction
        CFI (cfiCond940) Conditional ??CrossCallReturnLabel_425
        CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond940) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond940) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond940) CFA_SP SP+0
        CFI (cfiCond940) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond941 Using cfiCommon0
        CFI (cfiCond941) NoFunction
        CFI (cfiCond941) Conditional ??CrossCallReturnLabel_426
        CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond941) CFA_SP SP+0
        CFI (cfiCond941) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond942 Using cfiCommon0
        CFI (cfiCond942) NoFunction
        CFI (cfiCond942) Conditional ??CrossCallReturnLabel_427
        CFI (cfiCond942) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond942) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond942) CFA_SP SP+-5
        CFI (cfiCond942) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond943 Using cfiCommon0
        CFI (cfiCond943) NoFunction
        CFI (cfiCond943) Conditional ??CrossCallReturnLabel_428
        CFI (cfiCond943) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond943) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond943) CFA_SP SP+-5
        CFI (cfiCond943) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond944 Using cfiCommon0
        CFI (cfiCond944) NoFunction
        CFI (cfiCond944) Conditional ??CrossCallReturnLabel_429
        CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond944) CFA_SP SP+0
        CFI (cfiCond944) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond945 Using cfiCommon0
        CFI (cfiCond945) NoFunction
        CFI (cfiCond945) Conditional ??CrossCallReturnLabel_430
        CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond945) CFA_SP SP+0
        CFI (cfiCond945) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond946 Using cfiCommon0
        CFI (cfiCond946) NoFunction
        CFI (cfiCond946) Conditional ??CrossCallReturnLabel_431
        CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond946) CFA_SP SP+0
        CFI (cfiCond946) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond947 Using cfiCommon0
        CFI (cfiCond947) NoFunction
        CFI (cfiCond947) Conditional ??CrossCallReturnLabel_432
        CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond947) CFA_SP SP+0
        CFI (cfiCond947) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond948 Using cfiCommon0
        CFI (cfiCond948) NoFunction
        CFI (cfiCond948) Conditional ??CrossCallReturnLabel_433
        CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond948) CFA_SP SP+0
        CFI (cfiCond948) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond949 Using cfiCommon0
        CFI (cfiCond949) NoFunction
        CFI (cfiCond949) Conditional ??CrossCallReturnLabel_434
        CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond949) CFA_SP SP+0
        CFI (cfiCond949) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond950 Using cfiCommon0
        CFI (cfiCond950) NoFunction
        CFI (cfiCond950) Conditional ??CrossCallReturnLabel_435
        CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond950) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond950) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond950) CFA_SP SP+0
        CFI (cfiCond950) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond951 Using cfiCommon0
        CFI (cfiCond951) NoFunction
        CFI (cfiCond951) Conditional ??CrossCallReturnLabel_436
        CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond951) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond951) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond951) CFA_SP SP+0
        CFI (cfiCond951) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond952 Using cfiCommon0
        CFI (cfiCond952) NoFunction
        CFI (cfiCond952) Conditional ??CrossCallReturnLabel_437
        CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond952) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond952) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond952) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond952) CFA_SP SP+0
        CFI (cfiCond952) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond953 Using cfiCommon0
        CFI (cfiCond953) NoFunction
        CFI (cfiCond953) Conditional ??CrossCallReturnLabel_438
        CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond953) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond953) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond953) CFA_SP SP+0
        CFI (cfiCond953) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker954 Using cfiCommon1
        CFI (cfiPicker954) NoFunction
        CFI (cfiPicker954) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond929
        CFI EndBlock cfiCond930
        CFI EndBlock cfiCond931
        CFI EndBlock cfiCond932
        CFI EndBlock cfiCond933
        CFI EndBlock cfiCond934
        CFI EndBlock cfiCond935
        CFI EndBlock cfiCond936
        CFI EndBlock cfiCond937
        CFI EndBlock cfiCond938
        CFI EndBlock cfiCond939
        CFI EndBlock cfiCond940
        CFI EndBlock cfiCond941
        CFI EndBlock cfiCond942
        CFI EndBlock cfiCond943
        CFI EndBlock cfiCond944
        CFI EndBlock cfiCond945
        CFI EndBlock cfiCond946
        CFI EndBlock cfiCond947
        CFI EndBlock cfiCond948
        CFI EndBlock cfiCond949
        CFI EndBlock cfiCond950
        CFI EndBlock cfiCond951
        CFI EndBlock cfiCond952
        CFI EndBlock cfiCond953
        CFI EndBlock cfiPicker954

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
        CFI Block cfiCond955 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_111
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond956 Using cfiCommon0
        CFI (cfiCond956) NoFunction
        CFI (cfiCond956) Conditional ??CrossCallReturnLabel_112
        CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond956) CFA_SP SP+0
        CFI (cfiCond956) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker957 Using cfiCommon1
        CFI (cfiPicker957) NoFunction
        CFI (cfiPicker957) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R6
        RET
        CFI EndBlock cfiCond955
        CFI EndBlock cfiCond956
        CFI EndBlock cfiPicker957

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
        CFI Block cfiCond958 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_73
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond959 Using cfiCommon0
        CFI (cfiCond959) NoFunction
        CFI (cfiCond959) Conditional ??CrossCallReturnLabel_74
        CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond959) CFA_SP SP+0
        CFI (cfiCond959) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker960 Using cfiCommon1
        CFI (cfiPicker960) NoFunction
        CFI (cfiPicker960) Picker
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_629:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond958
        CFI EndBlock cfiCond959
        CFI EndBlock cfiPicker960

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
        CFI Block cfiCond961 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_439
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond962 Using cfiCommon0
        CFI (cfiCond962) NoFunction
        CFI (cfiCond962) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond962) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond962) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond962) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond962) CFA_SP SP+0
        CFI (cfiCond962) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker963 Using cfiCommon1
        CFI (cfiPicker963) NoFunction
        CFI (cfiPicker963) Picker
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??update_offset?relay
        CFI EndBlock cfiCond961
        CFI EndBlock cfiCond962
        CFI EndBlock cfiPicker963
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine196_0:
        CFI Block cfiCond964 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_486
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond965 Using cfiCommon0
        CFI (cfiCond965) NoFunction
        CFI (cfiCond965) Conditional ??CrossCallReturnLabel_487
        CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond965) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond965) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond965) CFA_SP SP+0
        CFI (cfiCond965) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond966 Using cfiCommon0
        CFI (cfiCond966) NoFunction
        CFI (cfiCond966) Conditional ??CrossCallReturnLabel_439
        CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond966) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond966) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond966) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond966) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond966) CFA_SP SP+0
        CFI (cfiCond966) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond967 Using cfiCommon0
        CFI (cfiCond967) NoFunction
        CFI (cfiCond967) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond967) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond967) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond967) CFA_SP SP+0
        CFI (cfiCond967) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker968 Using cfiCommon1
        CFI (cfiPicker968) NoFunction
        CFI (cfiPicker968) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond964
        CFI EndBlock cfiCond965
        CFI EndBlock cfiCond966
        CFI EndBlock cfiCond967
        CFI EndBlock cfiPicker968
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine197_0:
        CFI Block cfiCond969 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_480
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond970 Using cfiCommon0
        CFI (cfiCond970) NoFunction
        CFI (cfiCond970) Conditional ??CrossCallReturnLabel_481
        CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond970) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond970) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond970) CFA_SP SP+0
        CFI (cfiCond970) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond971 Using cfiCommon0
        CFI (cfiCond971) NoFunction
        CFI (cfiCond971) Conditional ??CrossCallReturnLabel_482
        CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond971) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond971) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond971) CFA_SP SP+0
        CFI (cfiCond971) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond972 Using cfiCommon0
        CFI (cfiCond972) NoFunction
        CFI (cfiCond972) Conditional ??CrossCallReturnLabel_483
        CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond972) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond972) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond972) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond972) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond972) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond972) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond972) CFA_SP SP+0
        CFI (cfiCond972) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond973 Using cfiCommon0
        CFI (cfiCond973) NoFunction
        CFI (cfiCond973) Conditional ??CrossCallReturnLabel_484
        CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond973) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond973) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond973) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond973) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond973) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond973) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond973) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond973) CFA_SP SP+0
        CFI (cfiCond973) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond974 Using cfiCommon0
        CFI (cfiCond974) NoFunction
        CFI (cfiCond974) Conditional ??CrossCallReturnLabel_485
        CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond974) CFA_SP SP+0
        CFI (cfiCond974) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond975 Using cfiCommon0
        CFI (cfiCond975) NoFunction
        CFI (cfiCond975) Conditional ??CrossCallReturnLabel_486
        CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond975) CFA_SP SP+0
        CFI (cfiCond975) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond976 Using cfiCommon0
        CFI (cfiCond976) NoFunction
        CFI (cfiCond976) Conditional ??CrossCallReturnLabel_487
        CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond976) CFA_SP SP+0
        CFI (cfiCond976) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond977 Using cfiCommon0
        CFI (cfiCond977) NoFunction
        CFI (cfiCond977) Conditional ??CrossCallReturnLabel_439
        CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond977) CFA_SP SP+0
        CFI (cfiCond977) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond978 Using cfiCommon0
        CFI (cfiCond978) NoFunction
        CFI (cfiCond978) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond978) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond978) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond978) CFA_SP SP+0
        CFI (cfiCond978) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker979 Using cfiCommon1
        CFI (cfiPicker979) NoFunction
        CFI (cfiPicker979) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond969
        CFI EndBlock cfiCond970
        CFI EndBlock cfiCond971
        CFI EndBlock cfiCond972
        CFI EndBlock cfiCond973
        CFI EndBlock cfiCond974
        CFI EndBlock cfiCond975
        CFI EndBlock cfiCond976
        CFI EndBlock cfiCond977
        CFI EndBlock cfiCond978
        CFI EndBlock cfiPicker979
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine198_0:
        CFI Block cfiCond980 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_472
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond981 Using cfiCommon0
        CFI (cfiCond981) NoFunction
        CFI (cfiCond981) Conditional ??CrossCallReturnLabel_473
        CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond981) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond981) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond981) CFA_SP SP+0
        CFI (cfiCond981) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond982 Using cfiCommon0
        CFI (cfiCond982) NoFunction
        CFI (cfiCond982) Conditional ??CrossCallReturnLabel_474
        CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond982) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond982) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond982) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond982) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond982) CFA_SP SP+0
        CFI (cfiCond982) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond983 Using cfiCommon0
        CFI (cfiCond983) NoFunction
        CFI (cfiCond983) Conditional ??CrossCallReturnLabel_441
        CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond983) CFA_SP SP+0
        CFI (cfiCond983) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond984 Using cfiCommon0
        CFI (cfiCond984) NoFunction
        CFI (cfiCond984) Conditional ??CrossCallReturnLabel_475
        CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond984) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond984) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond984) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond984) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond984) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond984) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond984) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond984) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond984) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond984) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond984) CFA_SP SP+0
        CFI (cfiCond984) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond985 Using cfiCommon0
        CFI (cfiCond985) NoFunction
        CFI (cfiCond985) Conditional ??CrossCallReturnLabel_476
        CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond985) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond985) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond985) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond985) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond985) CFA_SP SP+0
        CFI (cfiCond985) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond986 Using cfiCommon0
        CFI (cfiCond986) NoFunction
        CFI (cfiCond986) Conditional ??CrossCallReturnLabel_477
        CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond986) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond986) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond986) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond986) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond986) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond986) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond986) CFA_SP SP+0
        CFI (cfiCond986) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond987 Using cfiCommon0
        CFI (cfiCond987) NoFunction
        CFI (cfiCond987) Conditional ??CrossCallReturnLabel_478
        CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond987) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond987) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond987) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond987) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond987) CFA_SP SP+0
        CFI (cfiCond987) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond988 Using cfiCommon0
        CFI (cfiCond988) NoFunction
        CFI (cfiCond988) Conditional ??CrossCallReturnLabel_479
        CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond988) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond988) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond988) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond988) CFA_SP SP+0
        CFI (cfiCond988) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond989 Using cfiCommon0
        CFI (cfiCond989) NoFunction
        CFI (cfiCond989) Conditional ??CrossCallReturnLabel_480
        CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond989) CFA_SP SP+0
        CFI (cfiCond989) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond990 Using cfiCommon0
        CFI (cfiCond990) NoFunction
        CFI (cfiCond990) Conditional ??CrossCallReturnLabel_481
        CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond990) CFA_SP SP+0
        CFI (cfiCond990) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond991 Using cfiCommon0
        CFI (cfiCond991) NoFunction
        CFI (cfiCond991) Conditional ??CrossCallReturnLabel_482
        CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond991) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond991) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond991) CFA_SP SP+0
        CFI (cfiCond991) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond992 Using cfiCommon0
        CFI (cfiCond992) NoFunction
        CFI (cfiCond992) Conditional ??CrossCallReturnLabel_483
        CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond992) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond992) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond992) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond992) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond992) CFA_SP SP+0
        CFI (cfiCond992) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond993 Using cfiCommon0
        CFI (cfiCond993) NoFunction
        CFI (cfiCond993) Conditional ??CrossCallReturnLabel_484
        CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond993) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond993) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond993) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond993) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond993) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond993) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond993) CFA_SP SP+0
        CFI (cfiCond993) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond994 Using cfiCommon0
        CFI (cfiCond994) NoFunction
        CFI (cfiCond994) Conditional ??CrossCallReturnLabel_485
        CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond994) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond994) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond994) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond994) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond994) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond994) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond994) CFA_SP SP+0
        CFI (cfiCond994) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond995 Using cfiCommon0
        CFI (cfiCond995) NoFunction
        CFI (cfiCond995) Conditional ??CrossCallReturnLabel_486
        CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond995) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond995) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond995) CFA_SP SP+0
        CFI (cfiCond995) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond996 Using cfiCommon0
        CFI (cfiCond996) NoFunction
        CFI (cfiCond996) Conditional ??CrossCallReturnLabel_487
        CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond996) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond996) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond996) CFA_SP SP+0
        CFI (cfiCond996) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond997 Using cfiCommon0
        CFI (cfiCond997) NoFunction
        CFI (cfiCond997) Conditional ??CrossCallReturnLabel_439
        CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond997) CFA_SP SP+0
        CFI (cfiCond997) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond998 Using cfiCommon0
        CFI (cfiCond998) NoFunction
        CFI (cfiCond998) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond998) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond998) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond998) CFA_SP SP+0
        CFI (cfiCond998) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker999 Using cfiCommon1
        CFI (cfiPicker999) NoFunction
        CFI (cfiPicker999) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond980
        CFI EndBlock cfiCond981
        CFI EndBlock cfiCond982
        CFI EndBlock cfiCond983
        CFI EndBlock cfiCond984
        CFI EndBlock cfiCond985
        CFI EndBlock cfiCond986
        CFI EndBlock cfiCond987
        CFI EndBlock cfiCond988
        CFI EndBlock cfiCond989
        CFI EndBlock cfiCond990
        CFI EndBlock cfiCond991
        CFI EndBlock cfiCond992
        CFI EndBlock cfiCond993
        CFI EndBlock cfiCond994
        CFI EndBlock cfiCond995
        CFI EndBlock cfiCond996
        CFI EndBlock cfiCond997
        CFI EndBlock cfiCond998
        CFI EndBlock cfiPicker999
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine199_0:
        CFI Block cfiCond1000 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_470
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1001 Using cfiCommon0
        CFI (cfiCond1001) NoFunction
        CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_471
        CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1001) CFA_SP SP+0
        CFI (cfiCond1001) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1002 Using cfiCommon0
        CFI (cfiCond1002) NoFunction
        CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_472
        CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1002) CFA_SP SP+0
        CFI (cfiCond1002) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1003 Using cfiCommon0
        CFI (cfiCond1003) NoFunction
        CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_473
        CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1003) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1003) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1003) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1003) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1003) CFA_SP SP+0
        CFI (cfiCond1003) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1004 Using cfiCommon0
        CFI (cfiCond1004) NoFunction
        CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_474
        CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1004) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1004) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1004) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1004) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1004) CFA_SP SP+0
        CFI (cfiCond1004) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1005 Using cfiCommon0
        CFI (cfiCond1005) NoFunction
        CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_441
        CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1005) CFA_SP SP+0
        CFI (cfiCond1005) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1006 Using cfiCommon0
        CFI (cfiCond1006) NoFunction
        CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_475
        CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1006) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1006) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1006) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1006) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1006) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1006) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1006) CFA_SP SP+0
        CFI (cfiCond1006) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1007 Using cfiCommon0
        CFI (cfiCond1007) NoFunction
        CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_476
        CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1007) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1007) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1007) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1007) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1007) CFA_SP SP+0
        CFI (cfiCond1007) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1008 Using cfiCommon0
        CFI (cfiCond1008) NoFunction
        CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_477
        CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1008) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1008) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1008) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1008) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1008) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1008) CFA_SP SP+0
        CFI (cfiCond1008) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1009 Using cfiCommon0
        CFI (cfiCond1009) NoFunction
        CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_478
        CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1009) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1009) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1009) CFA_SP SP+0
        CFI (cfiCond1009) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1010 Using cfiCommon0
        CFI (cfiCond1010) NoFunction
        CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_479
        CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1010) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1010) CFA_SP SP+0
        CFI (cfiCond1010) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1011 Using cfiCommon0
        CFI (cfiCond1011) NoFunction
        CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_480
        CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1011) CFA_SP SP+0
        CFI (cfiCond1011) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1012 Using cfiCommon0
        CFI (cfiCond1012) NoFunction
        CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_481
        CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1012) CFA_SP SP+0
        CFI (cfiCond1012) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1013 Using cfiCommon0
        CFI (cfiCond1013) NoFunction
        CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_482
        CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1013) CFA_SP SP+0
        CFI (cfiCond1013) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1014 Using cfiCommon0
        CFI (cfiCond1014) NoFunction
        CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_483
        CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1014) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1014) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1014) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1014) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1014) CFA_SP SP+0
        CFI (cfiCond1014) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1015 Using cfiCommon0
        CFI (cfiCond1015) NoFunction
        CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_484
        CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1015) CFA_SP SP+0
        CFI (cfiCond1015) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1016 Using cfiCommon0
        CFI (cfiCond1016) NoFunction
        CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_485
        CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1016) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1016) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1016) CFA_SP SP+0
        CFI (cfiCond1016) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1017 Using cfiCommon0
        CFI (cfiCond1017) NoFunction
        CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_486
        CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1017) CFA_SP SP+0
        CFI (cfiCond1017) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1018 Using cfiCommon0
        CFI (cfiCond1018) NoFunction
        CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_487
        CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1018) CFA_SP SP+0
        CFI (cfiCond1018) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1019 Using cfiCommon0
        CFI (cfiCond1019) NoFunction
        CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_439
        CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1019) CFA_SP SP+0
        CFI (cfiCond1019) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1020 Using cfiCommon0
        CFI (cfiCond1020) NoFunction
        CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1020) CFA_SP SP+0
        CFI (cfiCond1020) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1021 Using cfiCommon1
        CFI (cfiPicker1021) NoFunction
        CFI (cfiPicker1021) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1000
        CFI EndBlock cfiCond1001
        CFI EndBlock cfiCond1002
        CFI EndBlock cfiCond1003
        CFI EndBlock cfiCond1004
        CFI EndBlock cfiCond1005
        CFI EndBlock cfiCond1006
        CFI EndBlock cfiCond1007
        CFI EndBlock cfiCond1008
        CFI EndBlock cfiCond1009
        CFI EndBlock cfiCond1010
        CFI EndBlock cfiCond1011
        CFI EndBlock cfiCond1012
        CFI EndBlock cfiCond1013
        CFI EndBlock cfiCond1014
        CFI EndBlock cfiCond1015
        CFI EndBlock cfiCond1016
        CFI EndBlock cfiCond1017
        CFI EndBlock cfiCond1018
        CFI EndBlock cfiCond1019
        CFI EndBlock cfiCond1020
        CFI EndBlock cfiPicker1021
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine200_0:
        CFI Block cfiCond1022 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_442
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1023 Using cfiCommon0
        CFI (cfiCond1023) NoFunction
        CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_443
        CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1023) CFA_SP SP+0
        CFI (cfiCond1023) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1024 Using cfiCommon0
        CFI (cfiCond1024) NoFunction
        CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_444
        CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1024) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1024) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1024) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1024) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1024) CFA_SP SP+0
        CFI (cfiCond1024) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1025 Using cfiCommon0
        CFI (cfiCond1025) NoFunction
        CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_445
        CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1025) CFA_SP SP+0
        CFI (cfiCond1025) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1026 Using cfiCommon0
        CFI (cfiCond1026) NoFunction
        CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_446
        CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1026) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1026) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1026) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1026) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1026) CFA_SP SP+0
        CFI (cfiCond1026) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1027 Using cfiCommon0
        CFI (cfiCond1027) NoFunction
        CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_447
        CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1027) CFA_SP SP+0
        CFI (cfiCond1027) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1028 Using cfiCommon0
        CFI (cfiCond1028) NoFunction
        CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_448
        CFI (cfiCond1028) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1028) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1028) CFA_SP SP+-5
        CFI Block cfiCond1029 Using cfiCommon0
        CFI (cfiCond1029) NoFunction
        CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_449
        CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1029) CFA_SP SP+0
        CFI (cfiCond1029) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1030 Using cfiCommon0
        CFI (cfiCond1030) NoFunction
        CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_450
        CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1030) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1030) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1030) CFA_SP SP+0
        CFI (cfiCond1030) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1031 Using cfiCommon0
        CFI (cfiCond1031) NoFunction
        CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_451
        CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1031) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1031) CFA_SP SP+0
        CFI (cfiCond1031) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1032 Using cfiCommon0
        CFI (cfiCond1032) NoFunction
        CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_452
        CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1032) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1032) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1032) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1032) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1032) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1032) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1032) CFA_SP SP+0
        CFI (cfiCond1032) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1033 Using cfiCommon0
        CFI (cfiCond1033) NoFunction
        CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_453
        CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1033) CFA_SP SP+0
        CFI (cfiCond1033) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1034 Using cfiCommon0
        CFI (cfiCond1034) NoFunction
        CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_454
        CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1034) CFA_SP SP+0
        CFI (cfiCond1034) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1035 Using cfiCommon0
        CFI (cfiCond1035) NoFunction
        CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_455
        CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1035) CFA_SP SP+0
        CFI (cfiCond1035) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1036 Using cfiCommon0
        CFI (cfiCond1036) NoFunction
        CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_456
        CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1036) CFA_SP SP+0
        CFI (cfiCond1036) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1037 Using cfiCommon0
        CFI (cfiCond1037) NoFunction
        CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_457
        CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1037) CFA_SP SP+0
        CFI (cfiCond1037) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1038 Using cfiCommon0
        CFI (cfiCond1038) NoFunction
        CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_458
        CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1038) CFA_SP SP+0
        CFI (cfiCond1038) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1039 Using cfiCommon0
        CFI (cfiCond1039) NoFunction
        CFI (cfiCond1039) Conditional ??CrossCallReturnLabel_459
        CFI (cfiCond1039) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1039) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1039) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1039) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1039) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1039) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1039) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1039) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1039) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1039) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1039) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1039) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1039) CFA_SP SP+0
        CFI (cfiCond1039) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1040 Using cfiCommon0
        CFI (cfiCond1040) NoFunction
        CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_460
        CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1040) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1040) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1040) CFA_SP SP+0
        CFI (cfiCond1040) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1041 Using cfiCommon0
        CFI (cfiCond1041) NoFunction
        CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_461
        CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1041) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1041) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1041) CFA_SP SP+0
        CFI (cfiCond1041) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1042 Using cfiCommon0
        CFI (cfiCond1042) NoFunction
        CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_462
        CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1042) CFA_SP SP+0
        CFI (cfiCond1042) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1043 Using cfiCommon0
        CFI (cfiCond1043) NoFunction
        CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_463
        CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1043) CFA_SP SP+0
        CFI (cfiCond1043) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1044 Using cfiCommon0
        CFI (cfiCond1044) NoFunction
        CFI (cfiCond1044) Conditional ??CrossCallReturnLabel_464
        CFI (cfiCond1044) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1044) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1044) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1044) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1044) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1044) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1044) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1044) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1044) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1044) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1044) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1044) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1044) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1044) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1044) CFA_SP SP+0
        CFI (cfiCond1044) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1045 Using cfiCommon0
        CFI (cfiCond1045) NoFunction
        CFI (cfiCond1045) Conditional ??CrossCallReturnLabel_465
        CFI (cfiCond1045) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1045) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1045) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1045) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1045) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1045) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1045) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1045) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1045) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1045) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1045) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1045) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1045) CFA_SP SP+0
        CFI (cfiCond1045) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1046 Using cfiCommon0
        CFI (cfiCond1046) NoFunction
        CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_466
        CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1046) CFA_SP SP+0
        CFI (cfiCond1046) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1047 Using cfiCommon0
        CFI (cfiCond1047) NoFunction
        CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_467
        CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1047) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1047) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1047) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1047) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1047) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1047) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1047) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1047) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1047) CFA_SP SP+0
        CFI (cfiCond1047) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1048 Using cfiCommon0
        CFI (cfiCond1048) NoFunction
        CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_468
        CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1048) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1048) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1048) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1048) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1048) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1048) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1048) CFA_SP SP+0
        CFI (cfiCond1048) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1049 Using cfiCommon0
        CFI (cfiCond1049) NoFunction
        CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_469
        CFI (cfiCond1049) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1049) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1049) CFA_SP SP+-5
        CFI (cfiCond1049) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1050 Using cfiCommon0
        CFI (cfiCond1050) NoFunction
        CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_470
        CFI (cfiCond1050) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1050) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1050) CFA_SP SP+-5
        CFI Block cfiCond1051 Using cfiCommon0
        CFI (cfiCond1051) NoFunction
        CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_471
        CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1051) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1051) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1051) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1051) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1051) CFA_SP SP+0
        CFI (cfiCond1051) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1052 Using cfiCommon0
        CFI (cfiCond1052) NoFunction
        CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_472
        CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1052) CFA_SP SP+0
        CFI (cfiCond1052) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1053 Using cfiCommon0
        CFI (cfiCond1053) NoFunction
        CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_473
        CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1053) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1053) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1053) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1053) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1053) CFA_SP SP+0
        CFI (cfiCond1053) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1054 Using cfiCommon0
        CFI (cfiCond1054) NoFunction
        CFI (cfiCond1054) Conditional ??CrossCallReturnLabel_474
        CFI (cfiCond1054) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1054) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1054) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1054) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1054) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1054) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1054) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1054) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1054) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1054) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1054) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1054) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1054) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1054) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1054) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1054) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1054) CFA_SP SP+0
        CFI (cfiCond1054) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1055 Using cfiCommon0
        CFI (cfiCond1055) NoFunction
        CFI (cfiCond1055) Conditional ??CrossCallReturnLabel_441
        CFI (cfiCond1055) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1055) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1055) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1055) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1055) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1055) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1055) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1055) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1055) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1055) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1055) CFA_SP SP+0
        CFI (cfiCond1055) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1056 Using cfiCommon0
        CFI (cfiCond1056) NoFunction
        CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_475
        CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1056) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1056) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1056) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1056) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1056) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1056) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1056) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1056) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1056) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1056) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1056) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1056) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1056) CFA_SP SP+0
        CFI (cfiCond1056) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1057 Using cfiCommon0
        CFI (cfiCond1057) NoFunction
        CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_476
        CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1057) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1057) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1057) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1057) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1057) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1057) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1057) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1057) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1057) CFA_SP SP+0
        CFI (cfiCond1057) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1058 Using cfiCommon0
        CFI (cfiCond1058) NoFunction
        CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_477
        CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1058) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1058) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1058) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1058) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1058) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1058) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1058) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1058) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1058) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1058) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1058) CFA_SP SP+0
        CFI (cfiCond1058) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1059 Using cfiCommon0
        CFI (cfiCond1059) NoFunction
        CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_478
        CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1059) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1059) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1059) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1059) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1059) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1059) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1059) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1059) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1059) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1059) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1059) CFA_SP SP+0
        CFI (cfiCond1059) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1060 Using cfiCommon0
        CFI (cfiCond1060) NoFunction
        CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_479
        CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1060) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1060) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1060) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1060) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1060) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1060) CFA_SP SP+0
        CFI (cfiCond1060) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1061 Using cfiCommon0
        CFI (cfiCond1061) NoFunction
        CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_480
        CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1061) CFA_SP SP+0
        CFI (cfiCond1061) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1062 Using cfiCommon0
        CFI (cfiCond1062) NoFunction
        CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_481
        CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1062) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1062) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1062) CFA_SP SP+0
        CFI (cfiCond1062) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1063 Using cfiCommon0
        CFI (cfiCond1063) NoFunction
        CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_482
        CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1063) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1063) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1063) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1063) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1063) CFA_SP SP+0
        CFI (cfiCond1063) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1064 Using cfiCommon0
        CFI (cfiCond1064) NoFunction
        CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_483
        CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1064) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1064) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1064) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1064) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1064) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1064) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1064) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1064) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1064) CFA_SP SP+0
        CFI (cfiCond1064) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1065 Using cfiCommon0
        CFI (cfiCond1065) NoFunction
        CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_484
        CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1065) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1065) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1065) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1065) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1065) CFA_SP SP+0
        CFI (cfiCond1065) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1066 Using cfiCommon0
        CFI (cfiCond1066) NoFunction
        CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_485
        CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1066) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1066) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1066) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1066) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1066) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1066) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1066) CFA_SP SP+0
        CFI (cfiCond1066) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1067 Using cfiCommon0
        CFI (cfiCond1067) NoFunction
        CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_486
        CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1067) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1067) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1067) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1067) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1067) CFA_SP SP+0
        CFI (cfiCond1067) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1068 Using cfiCommon0
        CFI (cfiCond1068) NoFunction
        CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_487
        CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1068) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1068) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1068) CFA_SP SP+0
        CFI (cfiCond1068) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1069 Using cfiCommon0
        CFI (cfiCond1069) NoFunction
        CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_439
        CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1069) CFA_SP SP+0
        CFI (cfiCond1069) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1070 Using cfiCommon0
        CFI (cfiCond1070) NoFunction
        CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_440
        CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1070) CFA_SP SP+0
        CFI (cfiCond1070) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1071 Using cfiCommon1
        CFI (cfiPicker1071) NoFunction
        CFI (cfiPicker1071) Picker
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_634:
        MOV     A,R0
        ORL     A,R1
        RET
        CFI EndBlock cfiCond1022
        CFI EndBlock cfiCond1023
        CFI EndBlock cfiCond1024
        CFI EndBlock cfiCond1025
        CFI EndBlock cfiCond1026
        CFI EndBlock cfiCond1027
        CFI EndBlock cfiCond1028
        CFI EndBlock cfiCond1029
        CFI EndBlock cfiCond1030
        CFI EndBlock cfiCond1031
        CFI EndBlock cfiCond1032
        CFI EndBlock cfiCond1033
        CFI EndBlock cfiCond1034
        CFI EndBlock cfiCond1035
        CFI EndBlock cfiCond1036
        CFI EndBlock cfiCond1037
        CFI EndBlock cfiCond1038
        CFI EndBlock cfiCond1039
        CFI EndBlock cfiCond1040
        CFI EndBlock cfiCond1041
        CFI EndBlock cfiCond1042
        CFI EndBlock cfiCond1043
        CFI EndBlock cfiCond1044
        CFI EndBlock cfiCond1045
        CFI EndBlock cfiCond1046
        CFI EndBlock cfiCond1047
        CFI EndBlock cfiCond1048
        CFI EndBlock cfiCond1049
        CFI EndBlock cfiCond1050
        CFI EndBlock cfiCond1051
        CFI EndBlock cfiCond1052
        CFI EndBlock cfiCond1053
        CFI EndBlock cfiCond1054
        CFI EndBlock cfiCond1055
        CFI EndBlock cfiCond1056
        CFI EndBlock cfiCond1057
        CFI EndBlock cfiCond1058
        CFI EndBlock cfiCond1059
        CFI EndBlock cfiCond1060
        CFI EndBlock cfiCond1061
        CFI EndBlock cfiCond1062
        CFI EndBlock cfiCond1063
        CFI EndBlock cfiCond1064
        CFI EndBlock cfiCond1065
        CFI EndBlock cfiCond1066
        CFI EndBlock cfiCond1067
        CFI EndBlock cfiCond1068
        CFI EndBlock cfiCond1069
        CFI EndBlock cfiCond1070
        CFI EndBlock cfiPicker1071

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
        CFI Block cfiCond1072 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_317
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1073 Using cfiCommon0
        CFI (cfiCond1073) NoFunction
        CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_318
        CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1073) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1073) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1073) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1073) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1073) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1073) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1073) CFA_SP SP+0
        CFI (cfiCond1073) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1074 Using cfiCommon0
        CFI (cfiCond1074) NoFunction
        CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_61
        CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1074) CFA_SP SP+0
        CFI (cfiCond1074) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1075 Using cfiCommon0
        CFI (cfiCond1075) NoFunction
        CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_62
        CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1075) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1075) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1075) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1075) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1075) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1075) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1075) CFA_SP SP+0
        CFI (cfiCond1075) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1076 Using cfiCommon1
        CFI (cfiPicker1076) NoFunction
        CFI (cfiPicker1076) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1072
        CFI EndBlock cfiCond1073
        CFI EndBlock cfiCond1074
        CFI EndBlock cfiCond1075
        CFI EndBlock cfiPicker1076
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine201_0:
        CFI Block cfiCond1077 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_229
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1078 Using cfiCommon0
        CFI (cfiCond1078) NoFunction
        CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_230
        CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1078) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1078) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1078) CFA_SP SP+0
        CFI (cfiCond1078) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1079 Using cfiCommon0
        CFI (cfiCond1079) NoFunction
        CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_228
        CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1079) CFA_SP SP+0
        CFI (cfiCond1079) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1080 Using cfiCommon0
        CFI (cfiCond1080) NoFunction
        CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_227
        CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1080) CFA_SP SP+0
        CFI (cfiCond1080) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1081 Using cfiCommon0
        CFI (cfiCond1081) NoFunction
        CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_75
        CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1081) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1081) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1081) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1081) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1081) CFA_SP SP+0
        CFI (cfiCond1081) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1082 Using cfiCommon0
        CFI (cfiCond1082) NoFunction
        CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_76
        CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1082) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1082) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1082) CFA_SP SP+0
        CFI (cfiCond1082) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1083 Using cfiCommon0
        CFI (cfiCond1083) NoFunction
        CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_67
        CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1083) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1083) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1083) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1083) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1083) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1083) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1083) CFA_SP SP+0
        CFI (cfiCond1083) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1084 Using cfiCommon0
        CFI (cfiCond1084) NoFunction
        CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_68
        CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1084) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1084) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1084) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1084) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1084) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1084) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1084) CFA_SP SP+0
        CFI (cfiCond1084) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1085 Using cfiCommon0
        CFI (cfiCond1085) NoFunction
        CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_65
        CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1085) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1085) CFA_SP SP+0
        CFI (cfiCond1085) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1086 Using cfiCommon0
        CFI (cfiCond1086) NoFunction
        CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_66
        CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1086) CFA_SP SP+0
        CFI (cfiCond1086) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1087 Using cfiCommon0
        CFI (cfiCond1087) NoFunction
        CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_73
        CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1087) CFA_SP SP+0
        CFI (cfiCond1087) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1088 Using cfiCommon0
        CFI (cfiCond1088) NoFunction
        CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_74
        CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1088) CFA_SP SP+0
        CFI (cfiCond1088) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1089 Using cfiCommon0
        CFI (cfiCond1089) NoFunction
        CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_439
        CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1089) CFA_SP SP+0
        CFI (cfiCond1089) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1090 Using cfiCommon0
        CFI (cfiCond1090) NoFunction
        CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_440
        CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1090) CFA_SP SP+0
        CFI (cfiCond1090) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1091 Using cfiCommon0
        CFI (cfiCond1091) NoFunction
        CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_486
        CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1091) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1091) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1091) CFA_SP SP+0
        CFI (cfiCond1091) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1092 Using cfiCommon0
        CFI (cfiCond1092) NoFunction
        CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_487
        CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1092) CFA_SP SP+0
        CFI (cfiCond1092) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1093 Using cfiCommon0
        CFI (cfiCond1093) NoFunction
        CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_480
        CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1093) CFA_SP SP+0
        CFI (cfiCond1093) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1094 Using cfiCommon0
        CFI (cfiCond1094) NoFunction
        CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_481
        CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1094) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1094) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1094) CFA_SP SP+0
        CFI (cfiCond1094) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1095 Using cfiCommon0
        CFI (cfiCond1095) NoFunction
        CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_482
        CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1095) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1095) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1095) CFA_SP SP+0
        CFI (cfiCond1095) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1096 Using cfiCommon0
        CFI (cfiCond1096) NoFunction
        CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_483
        CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1096) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1096) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1096) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1096) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1096) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1096) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1096) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1096) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1096) CFA_SP SP+0
        CFI (cfiCond1096) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1097 Using cfiCommon0
        CFI (cfiCond1097) NoFunction
        CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_484
        CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1097) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1097) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1097) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1097) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1097) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1097) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1097) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1097) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1097) CFA_SP SP+0
        CFI (cfiCond1097) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1098 Using cfiCommon0
        CFI (cfiCond1098) NoFunction
        CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_485
        CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1098) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1098) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1098) CFA_SP SP+0
        CFI (cfiCond1098) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1099 Using cfiCommon0
        CFI (cfiCond1099) NoFunction
        CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_472
        CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1099) CFA_SP SP+0
        CFI (cfiCond1099) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1100 Using cfiCommon0
        CFI (cfiCond1100) NoFunction
        CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_473
        CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1100) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1100) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1100) CFA_SP SP+0
        CFI (cfiCond1100) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1101 Using cfiCommon0
        CFI (cfiCond1101) NoFunction
        CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_474
        CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1101) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1101) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1101) CFA_SP SP+0
        CFI (cfiCond1101) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1102 Using cfiCommon0
        CFI (cfiCond1102) NoFunction
        CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_441
        CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1102) CFA_SP SP+0
        CFI (cfiCond1102) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1103 Using cfiCommon0
        CFI (cfiCond1103) NoFunction
        CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_475
        CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1103) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1103) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1103) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1103) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1103) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1103) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1103) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1103) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1103) CFA_SP SP+0
        CFI (cfiCond1103) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1104 Using cfiCommon0
        CFI (cfiCond1104) NoFunction
        CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_476
        CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1104) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1104) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1104) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1104) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1104) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1104) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1104) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1104) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1104) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1104) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1104) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1104) CFA_SP SP+0
        CFI (cfiCond1104) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1105 Using cfiCommon0
        CFI (cfiCond1105) NoFunction
        CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_477
        CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1105) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1105) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1105) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1105) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1105) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1105) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1105) CFA_SP SP+0
        CFI (cfiCond1105) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1106 Using cfiCommon0
        CFI (cfiCond1106) NoFunction
        CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_478
        CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1106) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1106) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1106) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1106) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1106) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1106) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1106) CFA_SP SP+0
        CFI (cfiCond1106) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1107 Using cfiCommon0
        CFI (cfiCond1107) NoFunction
        CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_479
        CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1107) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1107) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1107) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1107) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1107) CFA_SP SP+0
        CFI (cfiCond1107) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1108 Using cfiCommon0
        CFI (cfiCond1108) NoFunction
        CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_470
        CFI (cfiCond1108) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1108) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1108) CFA_SP SP+-5
        CFI Block cfiCond1109 Using cfiCommon0
        CFI (cfiCond1109) NoFunction
        CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_471
        CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1109) CFA_SP SP+0
        CFI (cfiCond1109) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1110 Using cfiCommon0
        CFI (cfiCond1110) NoFunction
        CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_442
        CFI (cfiCond1110) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1110) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1110) CFA_SP SP+-5
        CFI Block cfiCond1111 Using cfiCommon0
        CFI (cfiCond1111) NoFunction
        CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_443
        CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1111) CFA_SP SP+0
        CFI (cfiCond1111) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1112 Using cfiCommon0
        CFI (cfiCond1112) NoFunction
        CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_444
        CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1112) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1112) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1112) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1112) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1112) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1112) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1112) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1112) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1112) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1112) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1112) CFA_SP SP+0
        CFI (cfiCond1112) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1113 Using cfiCommon0
        CFI (cfiCond1113) NoFunction
        CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_445
        CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1113) CFA_SP SP+0
        CFI (cfiCond1113) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1114 Using cfiCommon0
        CFI (cfiCond1114) NoFunction
        CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_446
        CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1114) CFA_SP SP+0
        CFI (cfiCond1114) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1115 Using cfiCommon0
        CFI (cfiCond1115) NoFunction
        CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_447
        CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1115) CFA_SP SP+0
        CFI (cfiCond1115) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1116 Using cfiCommon0
        CFI (cfiCond1116) NoFunction
        CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_448
        CFI (cfiCond1116) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1116) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1116) CFA_SP SP+-5
        CFI Block cfiCond1117 Using cfiCommon0
        CFI (cfiCond1117) NoFunction
        CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_449
        CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1117) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1117) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1117) CFA_SP SP+0
        CFI (cfiCond1117) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1118 Using cfiCommon0
        CFI (cfiCond1118) NoFunction
        CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_450
        CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1118) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1118) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1118) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1118) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1118) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1118) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1118) CFA_SP SP+0
        CFI (cfiCond1118) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1119 Using cfiCommon0
        CFI (cfiCond1119) NoFunction
        CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_451
        CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1119) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1119) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1119) CFA_SP SP+0
        CFI (cfiCond1119) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1120 Using cfiCommon0
        CFI (cfiCond1120) NoFunction
        CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_452
        CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1120) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1120) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1120) CFA_SP SP+0
        CFI (cfiCond1120) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1121 Using cfiCommon0
        CFI (cfiCond1121) NoFunction
        CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_453
        CFI (cfiCond1121) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1121) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1121) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1121) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1121) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1121) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1121) CFA_SP SP+0
        CFI (cfiCond1121) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1122 Using cfiCommon0
        CFI (cfiCond1122) NoFunction
        CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_454
        CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1122) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1122) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1122) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1122) CFA_SP SP+0
        CFI (cfiCond1122) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1123 Using cfiCommon0
        CFI (cfiCond1123) NoFunction
        CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_455
        CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1123) CFA_SP SP+0
        CFI (cfiCond1123) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1124 Using cfiCommon0
        CFI (cfiCond1124) NoFunction
        CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_456
        CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1124) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1124) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1124) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1124) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1124) CFA_SP SP+0
        CFI (cfiCond1124) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1125 Using cfiCommon0
        CFI (cfiCond1125) NoFunction
        CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_457
        CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1125) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1125) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1125) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1125) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1125) CFA_SP SP+0
        CFI (cfiCond1125) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1126 Using cfiCommon0
        CFI (cfiCond1126) NoFunction
        CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_458
        CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1126) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1126) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1126) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1126) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1126) CFA_SP SP+0
        CFI (cfiCond1126) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1127 Using cfiCommon0
        CFI (cfiCond1127) NoFunction
        CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_459
        CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1127) CFA_SP SP+0
        CFI (cfiCond1127) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1128 Using cfiCommon0
        CFI (cfiCond1128) NoFunction
        CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_460
        CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1128) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1128) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1128) CFA_SP SP+0
        CFI (cfiCond1128) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1129 Using cfiCommon0
        CFI (cfiCond1129) NoFunction
        CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_461
        CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1129) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1129) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1129) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1129) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1129) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1129) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1129) CFA_SP SP+0
        CFI (cfiCond1129) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1130 Using cfiCommon0
        CFI (cfiCond1130) NoFunction
        CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_462
        CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1130) CFA_SP SP+0
        CFI (cfiCond1130) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1131 Using cfiCommon0
        CFI (cfiCond1131) NoFunction
        CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_463
        CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1131) CFA_SP SP+0
        CFI (cfiCond1131) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1132 Using cfiCommon0
        CFI (cfiCond1132) NoFunction
        CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_464
        CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1132) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1132) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1132) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1132) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1132) CFA_SP SP+0
        CFI (cfiCond1132) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1133 Using cfiCommon0
        CFI (cfiCond1133) NoFunction
        CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_465
        CFI (cfiCond1133) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1133) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1133) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1133) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1133) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1133) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1133) CFA_SP SP+0
        CFI (cfiCond1133) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1134 Using cfiCommon0
        CFI (cfiCond1134) NoFunction
        CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_466
        CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1134) CFA_SP SP+0
        CFI (cfiCond1134) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1135 Using cfiCommon0
        CFI (cfiCond1135) NoFunction
        CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_467
        CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1135) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1135) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1135) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1135) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1135) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1135) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1135) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1135) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1135) CFA_SP SP+0
        CFI (cfiCond1135) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1136 Using cfiCommon0
        CFI (cfiCond1136) NoFunction
        CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_468
        CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1136) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1136) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1136) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1136) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1136) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1136) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1136) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1136) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1136) CFA_SP SP+0
        CFI (cfiCond1136) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1137 Using cfiCommon0
        CFI (cfiCond1137) NoFunction
        CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_634, ??CrossCallReturnLabel_469
        CFI (cfiCond1137) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1137) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1137) CFA_SP SP+-5
        CFI (cfiCond1137) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1138 Using cfiCommon0
        CFI (cfiCond1138) NoFunction
        CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_623
        CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1138) CFA_SP SP+-2
        CFI (cfiCond1138) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1139 Using cfiCommon0
        CFI (cfiCond1139) NoFunction
        CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_624
        CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1139) CFA_SP SP+-2
        CFI (cfiCond1139) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1140 Using cfiCommon0
        CFI (cfiCond1140) NoFunction
        CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_625
        CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1140) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1140) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1140) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1140) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1140) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1140) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1140) CFA_SP SP+-2
        CFI (cfiCond1140) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1141 Using cfiCommon0
        CFI (cfiCond1141) NoFunction
        CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_626
        CFI (cfiCond1141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1141) CFA_SP SP+-2
        CFI (cfiCond1141) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1142 Using cfiCommon0
        CFI (cfiCond1142) NoFunction
        CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_627
        CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1142) CFA_SP SP+-2
        CFI (cfiCond1142) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1143 Using cfiCommon0
        CFI (cfiCond1143) NoFunction
        CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_615
        CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1143) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1143) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1143) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1143) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1143) CFA_SP SP+0
        CFI (cfiCond1143) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1144 Using cfiCommon0
        CFI (cfiCond1144) NoFunction
        CFI (cfiCond1144) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_616
        CFI (cfiCond1144) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1144) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1144) CFA_SP SP+-7
        CFI Block cfiCond1145 Using cfiCommon0
        CFI (cfiCond1145) NoFunction
        CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_617
        CFI (cfiCond1145) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1145) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1145) CFA_SP SP+-7
        CFI Block cfiCond1146 Using cfiCommon0
        CFI (cfiCond1146) NoFunction
        CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_618
        CFI (cfiCond1146) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1146) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1146) CFA_SP SP+-5
        CFI Block cfiCond1147 Using cfiCommon0
        CFI (cfiCond1147) NoFunction
        CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_619
        CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1147) CFA_SP SP+-2
        CFI (cfiCond1147) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1148 Using cfiCommon0
        CFI (cfiCond1148) NoFunction
        CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_620
        CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1148) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1148) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1148) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1148) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1148) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1148) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1148) CFA_SP SP+-2
        CFI (cfiCond1148) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1149 Using cfiCommon0
        CFI (cfiCond1149) NoFunction
        CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_621
        CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1149) CFA_SP SP+0
        CFI (cfiCond1149) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1150 Using cfiCommon0
        CFI (cfiCond1150) NoFunction
        CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_622
        CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1150) CFA_SP SP+0
        CFI (cfiCond1150) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1151 Using cfiCommon0
        CFI (cfiCond1151) NoFunction
        CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_608
        CFI (cfiCond1151) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1151) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1151) CFA_SP SP+-5
        CFI Block cfiCond1152 Using cfiCommon0
        CFI (cfiCond1152) NoFunction
        CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_609
        CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1152) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1152) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1152) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1152) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1152) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1152) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1152) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1152) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1152) CFA_SP SP+-2
        CFI (cfiCond1152) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1153 Using cfiCommon0
        CFI (cfiCond1153) NoFunction
        CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_610
        CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1153) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1153) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1153) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1153) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1153) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1153) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1153) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1153) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1153) CFA_SP SP+0
        CFI (cfiCond1153) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1154 Using cfiCommon0
        CFI (cfiCond1154) NoFunction
        CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_611
        CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1154) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1154) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1154) CFA_SP SP+-2
        CFI (cfiCond1154) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1155 Using cfiCommon0
        CFI (cfiCond1155) NoFunction
        CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_612
        CFI (cfiCond1155) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1155) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1155) CFA_SP SP+-5
        CFI Block cfiCond1156 Using cfiCommon0
        CFI (cfiCond1156) NoFunction
        CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_613
        CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1156) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1156) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1156) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1156) CFA_SP SP+0
        CFI (cfiCond1156) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1157 Using cfiCommon0
        CFI (cfiCond1157) NoFunction
        CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_635, ??CrossCallReturnLabel_614
        CFI (cfiCond1157) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1157) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1157) CFA_SP SP+-5
        CFI (cfiCond1157) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1158 Using cfiCommon0
        CFI (cfiCond1158) NoFunction
        CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_317
        CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1158) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1158) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1158) CFA_SP SP+0
        CFI (cfiCond1158) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1159 Using cfiCommon0
        CFI (cfiCond1159) NoFunction
        CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_318
        CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1159) CFA_SP SP+0
        CFI (cfiCond1159) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1160 Using cfiCommon0
        CFI (cfiCond1160) NoFunction
        CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_61
        CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1160) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1160) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1160) CFA_SP SP+0
        CFI (cfiCond1160) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1161 Using cfiCommon0
        CFI (cfiCond1161) NoFunction
        CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_62
        CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1161) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1161) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1161) CFA_SP SP+0
        CFI (cfiCond1161) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1162 Using cfiCommon1
        CFI (cfiPicker1162) NoFunction
        CFI (cfiPicker1162) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
        CFI EndBlock cfiCond1077
        CFI EndBlock cfiCond1078
        CFI EndBlock cfiCond1079
        CFI EndBlock cfiCond1080
        CFI EndBlock cfiCond1081
        CFI EndBlock cfiCond1082
        CFI EndBlock cfiCond1083
        CFI EndBlock cfiCond1084
        CFI EndBlock cfiCond1085
        CFI EndBlock cfiCond1086
        CFI EndBlock cfiCond1087
        CFI EndBlock cfiCond1088
        CFI EndBlock cfiCond1089
        CFI EndBlock cfiCond1090
        CFI EndBlock cfiCond1091
        CFI EndBlock cfiCond1092
        CFI EndBlock cfiCond1093
        CFI EndBlock cfiCond1094
        CFI EndBlock cfiCond1095
        CFI EndBlock cfiCond1096
        CFI EndBlock cfiCond1097
        CFI EndBlock cfiCond1098
        CFI EndBlock cfiCond1099
        CFI EndBlock cfiCond1100
        CFI EndBlock cfiCond1101
        CFI EndBlock cfiCond1102
        CFI EndBlock cfiCond1103
        CFI EndBlock cfiCond1104
        CFI EndBlock cfiCond1105
        CFI EndBlock cfiCond1106
        CFI EndBlock cfiCond1107
        CFI EndBlock cfiCond1108
        CFI EndBlock cfiCond1109
        CFI EndBlock cfiCond1110
        CFI EndBlock cfiCond1111
        CFI EndBlock cfiCond1112
        CFI EndBlock cfiCond1113
        CFI EndBlock cfiCond1114
        CFI EndBlock cfiCond1115
        CFI EndBlock cfiCond1116
        CFI EndBlock cfiCond1117
        CFI EndBlock cfiCond1118
        CFI EndBlock cfiCond1119
        CFI EndBlock cfiCond1120
        CFI EndBlock cfiCond1121
        CFI EndBlock cfiCond1122
        CFI EndBlock cfiCond1123
        CFI EndBlock cfiCond1124
        CFI EndBlock cfiCond1125
        CFI EndBlock cfiCond1126
        CFI EndBlock cfiCond1127
        CFI EndBlock cfiCond1128
        CFI EndBlock cfiCond1129
        CFI EndBlock cfiCond1130
        CFI EndBlock cfiCond1131
        CFI EndBlock cfiCond1132
        CFI EndBlock cfiCond1133
        CFI EndBlock cfiCond1134
        CFI EndBlock cfiCond1135
        CFI EndBlock cfiCond1136
        CFI EndBlock cfiCond1137
        CFI EndBlock cfiCond1138
        CFI EndBlock cfiCond1139
        CFI EndBlock cfiCond1140
        CFI EndBlock cfiCond1141
        CFI EndBlock cfiCond1142
        CFI EndBlock cfiCond1143
        CFI EndBlock cfiCond1144
        CFI EndBlock cfiCond1145
        CFI EndBlock cfiCond1146
        CFI EndBlock cfiCond1147
        CFI EndBlock cfiCond1148
        CFI EndBlock cfiCond1149
        CFI EndBlock cfiCond1150
        CFI EndBlock cfiCond1151
        CFI EndBlock cfiCond1152
        CFI EndBlock cfiCond1153
        CFI EndBlock cfiCond1154
        CFI EndBlock cfiCond1155
        CFI EndBlock cfiCond1156
        CFI EndBlock cfiCond1157
        CFI EndBlock cfiCond1158
        CFI EndBlock cfiCond1159
        CFI EndBlock cfiCond1160
        CFI EndBlock cfiCond1161
        CFI EndBlock cfiPicker1162
// 2218 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2219 CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromArray(cJSON *array, int which)
cJSON_DetachItemFromArray:
        CFI Block cfiBlock1163 Using cfiCommon0
        CFI Function cJSON_DetachItemFromArray
        CODE
// 2220 {
        FUNCALL cJSON_DetachItemFromArray, get_array_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DetachItemFromArray, cJSON_DetachItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2221     if (which < 0)
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_496:
        JNC     ??cJSON_DetachItemFromArray_0
// 2222     {
// 2223         return NULL;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_DetachItemFromArray_1
// 2224     }
// 2225 
// 2226     return cJSON_DetachItemViaPointer(array, get_array_item(array, (size_t)which));
??cJSON_DetachItemFromArray_0:
        ; Setup parameters for call to function cJSON_DetachItemViaPointer
        ; Setup parameters for call to function get_array_item
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL   ??cJSON_DetachItemViaPointer?relay
??cJSON_DetachItemFromArray_1:
        LJMP    ??Subroutine186_0 & 0xFFFF
        CFI EndBlock cfiBlock1163
// 2227 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
        CFI Block cfiCond1164 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_488
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1165 Using cfiCommon0
        CFI (cfiCond1165) NoFunction
        CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_489
        CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1165) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1165) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1165) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1165) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1165) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1165) CFA_SP SP+0
        CFI (cfiCond1165) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1166 Using cfiCommon1
        CFI (cfiPicker1166) NoFunction
        CFI (cfiPicker1166) Picker
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
        CFI EndBlock cfiCond1164
        CFI EndBlock cfiCond1165
        CFI EndBlock cfiPicker1166
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine202_0:
        CFI Block cfiCond1167 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_495
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1168 Using cfiCommon0
        CFI (cfiCond1168) NoFunction
        CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_496
        CFI (cfiCond1168) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1168) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1168) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1168) CFA_SP SP+0
        CFI (cfiCond1168) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1169 Using cfiCommon0
        CFI (cfiCond1169) NoFunction
        CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_497
        CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1169) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1169) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1169) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1169) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1169) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1169) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1169) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1169) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1169) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1169) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1169) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1169) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1169) CFA_SP SP+0
        CFI (cfiCond1169) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1170 Using cfiCommon0
        CFI (cfiCond1170) NoFunction
        CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_498
        CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1170) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1170) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1170) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1170) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1170) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1170) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1170) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1170) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1170) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1170) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1170) CFA_SP SP+0
        CFI (cfiCond1170) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1171 Using cfiCommon0
        CFI (cfiCond1171) NoFunction
        CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_488
        CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1171) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1171) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1171) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1171) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1171) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1171) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1171) CFA_SP SP+0
        CFI (cfiCond1171) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1172 Using cfiCommon0
        CFI (cfiCond1172) NoFunction
        CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_489
        CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1172) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1172) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1172) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1172) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1172) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1172) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1172) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1172) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1172) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1172) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1172) CFA_SP SP+0
        CFI (cfiCond1172) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1173 Using cfiCommon1
        CFI (cfiPicker1173) NoFunction
        CFI (cfiPicker1173) Picker
        CLR     C
        MOV     A,R5
        CFI EndBlock cfiCond1167
        CFI EndBlock cfiCond1168
        CFI EndBlock cfiCond1169
        CFI EndBlock cfiCond1170
        CFI EndBlock cfiCond1171
        CFI EndBlock cfiCond1172
        CFI EndBlock cfiPicker1173
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine203_0:
        CFI Block cfiCond1174 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_490
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1175 Using cfiCommon0
        CFI (cfiCond1175) NoFunction
        CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_491
        CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1175) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1175) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1175) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1175) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1175) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1175) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1175) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1175) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1175) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1175) CFA_SP SP+0
        CFI (cfiCond1175) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1176 Using cfiCommon0
        CFI (cfiCond1176) NoFunction
        CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_492
        CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1176) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1176) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1176) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1176) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1176) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1176) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1176) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1176) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1176) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1176) CFA_SP SP+0
        CFI (cfiCond1176) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1177 Using cfiCommon0
        CFI (cfiCond1177) NoFunction
        CFI (cfiCond1177) Conditional ??CrossCallReturnLabel_493
        CFI (cfiCond1177) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1177) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1177) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1177) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1177) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1177) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1177) CFA_SP SP+0
        CFI (cfiCond1177) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1178 Using cfiCommon0
        CFI (cfiCond1178) NoFunction
        CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_494
        CFI (cfiCond1178) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1178) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1178) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1178) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1178) CFA_SP SP+0
        CFI (cfiCond1178) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1179 Using cfiCommon0
        CFI (cfiCond1179) NoFunction
        CFI (cfiCond1179) Conditional ??CrossCallReturnLabel_495
        CFI (cfiCond1179) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1179) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1179) CFA_SP SP+-5
        CFI Block cfiCond1180 Using cfiCommon0
        CFI (cfiCond1180) NoFunction
        CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_496
        CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1180) CFA_SP SP+0
        CFI (cfiCond1180) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1181 Using cfiCommon0
        CFI (cfiCond1181) NoFunction
        CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_497
        CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1181) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1181) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1181) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1181) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1181) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1181) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1181) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1181) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1181) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1181) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1181) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1181) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1181) CFA_SP SP+0
        CFI (cfiCond1181) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1182 Using cfiCommon0
        CFI (cfiCond1182) NoFunction
        CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_498
        CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1182) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1182) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1182) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1182) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1182) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1182) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1182) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1182) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1182) CFA_SP SP+0
        CFI (cfiCond1182) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1183 Using cfiCommon0
        CFI (cfiCond1183) NoFunction
        CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_488
        CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1183) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1183) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1183) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1183) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1183) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1183) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1183) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1183) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1183) CFA_SP SP+0
        CFI (cfiCond1183) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1184 Using cfiCommon0
        CFI (cfiCond1184) NoFunction
        CFI (cfiCond1184) Conditional ??CrossCallReturnLabel_489
        CFI (cfiCond1184) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1184) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1184) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1184) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1184) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1184) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1184) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1184) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1184) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1184) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1184) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1184) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1184) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1184) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1184) CFA_SP SP+0
        CFI (cfiCond1184) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1185 Using cfiCommon1
        CFI (cfiPicker1185) NoFunction
        CFI (cfiPicker1185) Picker
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond1174
        CFI EndBlock cfiCond1175
        CFI EndBlock cfiCond1176
        CFI EndBlock cfiCond1177
        CFI EndBlock cfiCond1178
        CFI EndBlock cfiCond1179
        CFI EndBlock cfiCond1180
        CFI EndBlock cfiCond1181
        CFI EndBlock cfiCond1182
        CFI EndBlock cfiCond1183
        CFI EndBlock cfiCond1184
        CFI EndBlock cfiPicker1185
// 2228 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2229 CJSON_PUBLIC(void) cJSON_DeleteItemFromArray(cJSON *array, int which)
cJSON_DeleteItemFromArray:
        CFI Block cfiBlock1186 Using cfiCommon0
        CFI Function cJSON_DeleteItemFromArray
        CODE
// 2230 {
        FUNCALL cJSON_DeleteItemFromArray, cJSON_DetachItemFromArray
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DeleteItemFromArray, cJSON_Delete
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2231     cJSON_Delete(cJSON_DetachItemFromArray(array, which));
        ; Setup parameters for call to function cJSON_Delete
        ; Setup parameters for call to function cJSON_DetachItemFromArray
        LCALL   ??cJSON_DetachItemFromArray?relay
        CFI EndBlock cfiBlock1186
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8
// 2232 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
        CFI Block cfiBlock1187 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        LCALL   ??cJSON_Delete?relay
        SJMP    ??Subroutine204_0
        CFI EndBlock cfiBlock1187
// 2233 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2234 CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObject(cJSON *object, const char *string)
cJSON_DetachItemFromObject:
        CFI Block cfiBlock1188 Using cfiCommon0
        CFI Function cJSON_DetachItemFromObject
        CODE
// 2235 {
        FUNCALL cJSON_DetachItemFromObject, cJSON_GetObjectItem
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DetachItemFromObject, cJSON_DetachItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2236     cJSON *to_detach = cJSON_GetObjectItem(object, string);
// 2237 
// 2238     return cJSON_DetachItemViaPointer(object, to_detach);
        ; Setup parameters for call to function cJSON_DetachItemViaPointer
        ; Setup parameters for call to function cJSON_GetObjectItem
        LCALL   ??cJSON_GetObjectItem?relay
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock1188
// 2239 }
// 2240 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2241 CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObjectCaseSensitive(cJSON *object, const char *string)
cJSON_DetachItemFromObjectCaseSensitive:
        CFI Block cfiBlock1189 Using cfiCommon0
        CFI Function cJSON_DetachItemFromObjectCaseSensitive
        CODE
// 2242 {
        FUNCALL cJSON_DetachItemFromObjectCaseSensitive, cJSON_GetObjectItemCaseSensitive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DetachItemFromObjectCaseSensitive, cJSON_DetachItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2243     cJSON *to_detach = cJSON_GetObjectItemCaseSensitive(object, string);
// 2244 
// 2245     return cJSON_DetachItemViaPointer(object, to_detach);
        ; Setup parameters for call to function cJSON_DetachItemViaPointer
        ; Setup parameters for call to function cJSON_GetObjectItemCaseSensitive
        LCALL   ??cJSON_GetObjectItemCaseSensitive?relay
        LJMP    ?Subroutine3 & 0xFFFF
        CFI EndBlock cfiBlock1189
// 2246 }
// 2247 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2248 CJSON_PUBLIC(void) cJSON_DeleteItemFromObject(cJSON *object, const char *string)
cJSON_DeleteItemFromObject:
        CFI Block cfiBlock1190 Using cfiCommon0
        CFI Function cJSON_DeleteItemFromObject
        CODE
// 2249 {
        FUNCALL cJSON_DeleteItemFromObject, cJSON_DetachItemFromObject
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DeleteItemFromObject, cJSON_Delete
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2250     cJSON_Delete(cJSON_DetachItemFromObject(object, string));
        ; Setup parameters for call to function cJSON_Delete
        ; Setup parameters for call to function cJSON_DetachItemFromObject
        LCALL   ??cJSON_DetachItemFromObject?relay
        SJMP    ?Subroutine8
        CFI EndBlock cfiBlock1190
// 2251 }
// 2252 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2253 CJSON_PUBLIC(void) cJSON_DeleteItemFromObjectCaseSensitive(cJSON *object, const char *string)
cJSON_DeleteItemFromObjectCaseSensitive:
        CFI Block cfiBlock1191 Using cfiCommon0
        CFI Function cJSON_DeleteItemFromObjectCaseSensitive
        CODE
// 2254 {
        FUNCALL cJSON_DeleteItemFromObjectCaseSensitive, cJSON_DetachItemFromObjectCaseSensitive
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_DeleteItemFromObjectCaseSensitive, cJSON_Delete
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2255     cJSON_Delete(cJSON_DetachItemFromObjectCaseSensitive(object, string));
        ; Setup parameters for call to function cJSON_Delete
        ; Setup parameters for call to function cJSON_DetachItemFromObjectCaseSensitive
        LCALL   ??cJSON_DetachItemFromObjectCaseSensitive?relay
        SJMP    ?Subroutine8
        CFI EndBlock cfiBlock1191
// 2256 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock1192 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_266:
        LCALL   ?CALL_IND
        CFI EndBlock cfiBlock1192
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine204_0:
        CFI Block cfiBlock1193 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock1193
// 2257 
// 2258 /* Replace array/object items with new ones. */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2259 CJSON_PUBLIC(cJSON_bool) cJSON_InsertItemInArray(cJSON *array, int which, cJSON *newitem)
cJSON_InsertItemInArray:
        CFI Block cfiBlock1194 Using cfiCommon0
        CFI Function cJSON_InsertItemInArray
        CODE
// 2260 {
        FUNCALL cJSON_InsertItemInArray, get_array_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_InsertItemInArray, add_item_to_array
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
// 2261     cJSON *after_inserted = NULL;
// 2262 
// 2263     if (which < 0)
??CrossCallReturnLabel_52:
        JNC     ??cJSON_InsertItemInArray_0
// 2264     {
// 2265         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_InsertItemInArray_1
// 2266     }
// 2267 
// 2268     after_inserted = get_array_item(array, (size_t)which);
??cJSON_InsertItemInArray_0:
        ; Setup parameters for call to function get_array_item
        LCALL   ??get_array_item?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
// 2269     if (after_inserted == NULL)
        MOV     A,R0
        ORL     A,R1
        JNZ     ??cJSON_InsertItemInArray_2
// 2270     {
// 2271         return add_item_to_array(array, newitem);
        ; Setup parameters for call to function add_item_to_array
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??add_item_to_array?relay
        SJMP    ??cJSON_InsertItemInArray_3
// 2272     }
// 2273 
// 2274     newitem->next = after_inserted;
??cJSON_InsertItemInArray_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2275     newitem->prev = after_inserted->prev;
??CrossCallReturnLabel_423:
        MOV     A,R0
        ADD     A,#0x2
        INC     R2
        INC     R2
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_524:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ?Subroutine102 & 0xFFFF
// 2276     after_inserted->prev = newitem;
??CrossCallReturnLabel_161:
        LCALL   ??Subroutine206_0 & 0xFFFF
// 2277     if (after_inserted == array->child)
??CrossCallReturnLabel_501:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine187_0 & 0xFFFF
??CrossCallReturnLabel_389:
        MOV     A,R0
        XRL     A,R2
        JNZ     ??cJSON_InsertItemInArray_4
        MOV     A,R1
        XRL     A,R3
??cJSON_InsertItemInArray_4:
        JNZ     ??cJSON_InsertItemInArray_5
// 2278     {
// 2279         array->child = newitem;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??CrossCallReturnLabel_261
// 2280     }
// 2281     else
// 2282     {
// 2283         newitem->prev->next = newitem;
??cJSON_InsertItemInArray_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine162_0 & 0xFFFF
// 2284     }
??CrossCallReturnLabel_261:
        LCALL   ??Subroutine206_0 & 0xFFFF
// 2285     return true;
??CrossCallReturnLabel_502:
        MOV     R2,#0x1
??cJSON_InsertItemInArray_1:
        MOV     R3,#0x0
??cJSON_InsertItemInArray_3:
        LJMP    ??Subroutine182_0 & 0xFFFF
        CFI EndBlock cfiBlock1194
// 2286 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
        CFI Block cfiCond1195 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_159
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1196 Using cfiCommon0
        CFI (cfiCond1196) NoFunction
        CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_160
        CFI (cfiCond1196) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1196) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1196) CFA_SP SP+-5
        CFI Block cfiCond1197 Using cfiCommon0
        CFI (cfiCond1197) NoFunction
        CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_161
        CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1197) CFA_SP SP+0
        CFI (cfiCond1197) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1198 Using cfiCommon0
        CFI (cfiCond1198) NoFunction
        CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_162
        CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1198) CFA_SP SP+0
        CFI (cfiCond1198) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1199 Using cfiCommon0
        CFI (cfiCond1199) NoFunction
        CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_163
        CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1199) CFA_SP SP+0
        CFI (cfiCond1199) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1200 Using cfiCommon1
        CFI (cfiPicker1200) NoFunction
        CFI (cfiPicker1200) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        RET
        CFI EndBlock cfiCond1195
        CFI EndBlock cfiCond1196
        CFI EndBlock cfiCond1197
        CFI EndBlock cfiCond1198
        CFI EndBlock cfiCond1199
        CFI EndBlock cfiPicker1200

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
        CFI Block cfiCond1201 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_504
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1202 Using cfiCommon0
        CFI (cfiCond1202) NoFunction
        CFI (cfiCond1202) Conditional ??CrossCallReturnLabel_505
        CFI (cfiCond1202) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1202) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1202) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1202) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1202) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1202) CFA_SP SP+0
        CFI (cfiCond1202) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1203 Using cfiCommon1
        CFI (cfiPicker1203) NoFunction
        CFI (cfiPicker1203) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        CFI EndBlock cfiCond1201
        CFI EndBlock cfiCond1202
        CFI EndBlock cfiPicker1203
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine205_0:
        CFI Block cfiCond1204 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_503
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1205 Using cfiCommon0
        CFI (cfiCond1205) NoFunction
        CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1205) CFA_SP SP+0
        CFI (cfiCond1205) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1206 Using cfiCommon0
        CFI (cfiCond1206) NoFunction
        CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_505
        CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1206) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1206) CFA_SP SP+0
        CFI (cfiCond1206) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1207 Using cfiCommon1
        CFI (cfiPicker1207) NoFunction
        CFI (cfiPicker1207) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1204
        CFI EndBlock cfiCond1205
        CFI EndBlock cfiCond1206
        CFI EndBlock cfiPicker1207
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine206_0:
        CFI Block cfiCond1208 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_499
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1209 Using cfiCommon0
        CFI (cfiCond1209) NoFunction
        CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_500
        CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1209) CFA_SP SP+0
        CFI (cfiCond1209) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1210 Using cfiCommon0
        CFI (cfiCond1210) NoFunction
        CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_501
        CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1210) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1210) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1210) CFA_SP SP+0
        CFI (cfiCond1210) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1211 Using cfiCommon0
        CFI (cfiCond1211) NoFunction
        CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_502
        CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1211) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1211) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1211) CFA_SP SP+0
        CFI (cfiCond1211) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1212 Using cfiCommon0
        CFI (cfiCond1212) NoFunction
        CFI (cfiCond1212) Conditional ??CrossCallReturnLabel_503
        CFI (cfiCond1212) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1212) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1212) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1212) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1212) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1212) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1212) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1212) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1212) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1212) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1212) CFA_SP SP+0
        CFI (cfiCond1212) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1213 Using cfiCommon0
        CFI (cfiCond1213) NoFunction
        CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_504
        CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1213) CFA_SP SP+0
        CFI (cfiCond1213) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1214 Using cfiCommon0
        CFI (cfiCond1214) NoFunction
        CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_505
        CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1214) CFA_SP SP+0
        CFI (cfiCond1214) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1215 Using cfiCommon1
        CFI (cfiPicker1215) NoFunction
        CFI (cfiPicker1215) Picker
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1208
        CFI EndBlock cfiCond1209
        CFI EndBlock cfiCond1210
        CFI EndBlock cfiCond1211
        CFI EndBlock cfiCond1212
        CFI EndBlock cfiCond1213
        CFI EndBlock cfiCond1214
        CFI EndBlock cfiPicker1215
// 2287 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2288 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemViaPointer(cJSON * const parent, cJSON * const item, cJSON * replacement)
cJSON_ReplaceItemViaPointer:
        CFI Block cfiBlock1216 Using cfiCommon0
        CFI Function cJSON_ReplaceItemViaPointer
        CODE
// 2289 {
        FUNCALL cJSON_ReplaceItemViaPointer, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,R4
        MOV     R2,A
        MOV     A,R5
        MOV     R3,A
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
// 2290     if ((parent == NULL) || (replacement == NULL) || (item == NULL))
??CrossCallReturnLabel_66:
        ORL     A,R7
        JZ      ??cJSON_ReplaceItemViaPointer_0
        MOV     A,R0
        ORL     A,R1
        JZ      ??cJSON_ReplaceItemViaPointer_0
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_ReplaceItemViaPointer_1
// 2291     {
// 2292         return false;
??cJSON_ReplaceItemViaPointer_0:
        MOV     R2,#0x0
        LJMP    ??cJSON_ReplaceItemViaPointer_2 & 0xFFFF
// 2293     }
// 2294 
// 2295     if (replacement == item)
??cJSON_ReplaceItemViaPointer_1:
        MOV     A,R2
        XRL     A,R0
        JNZ     ??cJSON_ReplaceItemViaPointer_3
        MOV     A,R3
        XRL     A,R1
??cJSON_ReplaceItemViaPointer_3:
        JNZ     $+5
        LJMP    ??cJSON_ReplaceItemViaPointer_4 & 0xFFFF
// 2296     {
// 2297         return true;
// 2298     }
// 2299 
// 2300     replacement->next = item->next;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_525:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ?Subroutine101 & 0xFFFF
// 2301     replacement->prev = item->prev;
??CrossCallReturnLabel_156:
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_510:
        LCALL   ?Subroutine94 & 0xFFFF
// 2302 
// 2303     if (replacement->next != NULL)
??CrossCallReturnLabel_505:
        MOV     A,R4
        ORL     A,R5
        JZ      ??CrossCallReturnLabel_432
// 2304     {
// 2305         replacement->next->prev = replacement;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine75 & 0xFFFF
// 2306     }
??CrossCallReturnLabel_113:
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2307     if (parent->child == item)
??CrossCallReturnLabel_432:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_529:
        MOV     A,R2
        XRL     A,R4
        JNZ     ??cJSON_ReplaceItemViaPointer_5
        MOV     A,R3
        XRL     A,R5
??cJSON_ReplaceItemViaPointer_5:
        JNZ     ??cJSON_ReplaceItemViaPointer_6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_511:
        MOV     A,R4
        XRL     A,?V0 + 0
        JNZ     ??cJSON_ReplaceItemViaPointer_7
        MOV     A,R5
        XRL     A,?V0 + 1
??cJSON_ReplaceItemViaPointer_7:
        JNZ     ??CrossCallReturnLabel_433
// 2308     {
// 2309         if (parent->child->prev == parent->child)
// 2310         {
// 2311             replacement->prev = replacement;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2312         }
// 2313         parent->child = replacement;
??CrossCallReturnLabel_433:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        SJMP    ??CrossCallReturnLabel_114
// 2314     }
// 2315     else
// 2316     {   /*
// 2317          * To find the last item in array quickly, we use prev in array.
// 2318          * We can't modify the last item's next pointer where this item was the parent's child
// 2319          */
// 2320         if (replacement->prev != NULL)
??cJSON_ReplaceItemViaPointer_6:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_528:
        MOV     A,R4
        ORL     A,R5
        JZ      ??CrossCallReturnLabel_424
// 2321         {
// 2322             replacement->prev->next = replacement;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2323         }
// 2324         if (replacement->next == NULL)
??CrossCallReturnLabel_424:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_526:
        MOV     A,R4
        ORL     A,R5
        JNZ     ??CrossCallReturnLabel_434
// 2325         {
// 2326             parent->child->prev = replacement;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine75 & 0xFFFF
// 2327         }
// 2328     }
??CrossCallReturnLabel_114:
        LCALL   ??Subroutine193_0 & 0xFFFF
// 2329 
// 2330     item->next = NULL;
??CrossCallReturnLabel_434:
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine101 & 0xFFFF
// 2331     item->prev = NULL;
??CrossCallReturnLabel_157:
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 2332     cJSON_Delete(item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ??cJSON_Delete?relay
// 2333 
// 2334     return true;
??cJSON_ReplaceItemViaPointer_4:
        MOV     R2,#0x1
??cJSON_ReplaceItemViaPointer_2:
        MOV     R3,#0x0
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1216
// 2335 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
        CFI Block cfiCond1217 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_113
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1218 Using cfiCommon0
        CFI (cfiCond1218) NoFunction
        CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_114
        CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1218) CFA_SP SP+0
        CFI (cfiCond1218) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiPicker1219 Using cfiCommon1
        CFI (cfiPicker1219) NoFunction
        CFI (cfiPicker1219) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        RET
        CFI EndBlock cfiCond1217
        CFI EndBlock cfiCond1218
        CFI EndBlock cfiPicker1219

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
        CFI Block cfiCond1220 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_512
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1221 Using cfiCommon0
        CFI (cfiCond1221) NoFunction
        CFI (cfiCond1221) Conditional ??CrossCallReturnLabel_513
        CFI (cfiCond1221) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1221) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1221) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1221) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1221) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1221) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1221) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1221) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1221) CFA_SP SP+0
        CFI (cfiCond1221) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1222 Using cfiCommon0
        CFI (cfiCond1222) NoFunction
        CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_514
        CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1222) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1222) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1222) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1222) CFA_SP SP+0
        CFI (cfiCond1222) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1223 Using cfiCommon0
        CFI (cfiCond1223) NoFunction
        CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_515
        CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1223) CFA_SP SP+0
        CFI (cfiCond1223) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1224 Using cfiCommon0
        CFI (cfiCond1224) NoFunction
        CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_516
        CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1224) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1224) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1224) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1224) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1224) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1224) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1224) CFA_SP SP+0
        CFI (cfiCond1224) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1225 Using cfiCommon1
        CFI (cfiPicker1225) NoFunction
        CFI (cfiPicker1225) Picker
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        CFI EndBlock cfiCond1220
        CFI EndBlock cfiCond1221
        CFI EndBlock cfiCond1222
        CFI EndBlock cfiCond1223
        CFI EndBlock cfiCond1224
        CFI EndBlock cfiPicker1225
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine207_0:
        CFI Block cfiCond1226 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_506
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1227 Using cfiCommon0
        CFI (cfiCond1227) NoFunction
        CFI (cfiCond1227) Conditional ??CrossCallReturnLabel_507
        CFI (cfiCond1227) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1227) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1227) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1227) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1227) CFA_SP SP+0
        CFI (cfiCond1227) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1228 Using cfiCommon0
        CFI (cfiCond1228) NoFunction
        CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_508
        CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1228) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1228) CFA_SP SP+0
        CFI (cfiCond1228) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1229 Using cfiCommon0
        CFI (cfiCond1229) NoFunction
        CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_509
        CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1229) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1229) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1229) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1229) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1229) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1229) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1229) CFA_SP SP+0
        CFI (cfiCond1229) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1230 Using cfiCommon0
        CFI (cfiCond1230) NoFunction
        CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_510
        CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1230) CFA_SP SP+0
        CFI (cfiCond1230) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1231 Using cfiCommon0
        CFI (cfiCond1231) NoFunction
        CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_511
        CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1231) CFA_SP SP+0
        CFI (cfiCond1231) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1232 Using cfiCommon0
        CFI (cfiCond1232) NoFunction
        CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_512
        CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1232) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1232) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1232) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1232) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1232) CFA_SP SP+0
        CFI (cfiCond1232) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1233 Using cfiCommon0
        CFI (cfiCond1233) NoFunction
        CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_513
        CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1233) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1233) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1233) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1233) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1233) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1233) CFA_SP SP+0
        CFI (cfiCond1233) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1234 Using cfiCommon0
        CFI (cfiCond1234) NoFunction
        CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_514
        CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1234) CFA_SP SP+0
        CFI (cfiCond1234) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1235 Using cfiCommon0
        CFI (cfiCond1235) NoFunction
        CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_515
        CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1235) CFA_SP SP+0
        CFI (cfiCond1235) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1236 Using cfiCommon0
        CFI (cfiCond1236) NoFunction
        CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_516
        CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1236) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1236) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1236) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1236) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1236) CFA_SP SP+0
        CFI (cfiCond1236) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1237 Using cfiCommon1
        CFI (cfiPicker1237) NoFunction
        CFI (cfiPicker1237) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_523:
        RET
        CFI EndBlock cfiCond1226
        CFI EndBlock cfiCond1227
        CFI EndBlock cfiCond1228
        CFI EndBlock cfiCond1229
        CFI EndBlock cfiCond1230
        CFI EndBlock cfiCond1231
        CFI EndBlock cfiCond1232
        CFI EndBlock cfiCond1233
        CFI EndBlock cfiCond1234
        CFI EndBlock cfiCond1235
        CFI EndBlock cfiCond1236
        CFI EndBlock cfiPicker1237

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
        CFI Block cfiCond1238 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_330
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1239 Using cfiCommon0
        CFI (cfiCond1239) NoFunction
        CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_331
        CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1239) CFA_SP SP+0
        CFI (cfiCond1239) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1240 Using cfiCommon0
        CFI (cfiCond1240) NoFunction
        CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_332
        CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1240) CFA_SP SP+0
        CFI (cfiCond1240) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1241 Using cfiCommon0
        CFI (cfiCond1241) NoFunction
        CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_512
        CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1241) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1241) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1241) CFA_SP SP+0
        CFI (cfiCond1241) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1242 Using cfiCommon0
        CFI (cfiCond1242) NoFunction
        CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_513
        CFI (cfiCond1242) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1242) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1242) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1242) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1242) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1242) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1242) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1242) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1242) CFA_SP SP+0
        CFI (cfiCond1242) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1243 Using cfiCommon0
        CFI (cfiCond1243) NoFunction
        CFI (cfiCond1243) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_514
        CFI (cfiCond1243) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1243) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1243) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1243) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1243) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1243) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1243) CFA_SP SP+0
        CFI (cfiCond1243) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1244 Using cfiCommon0
        CFI (cfiCond1244) NoFunction
        CFI (cfiCond1244) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_515
        CFI (cfiCond1244) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1244) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1244) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1244) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1244) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1244) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1244) CFA_SP SP+0
        CFI (cfiCond1244) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1245 Using cfiCommon0
        CFI (cfiCond1245) NoFunction
        CFI (cfiCond1245) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_516
        CFI (cfiCond1245) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1245) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1245) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1245) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1245) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1245) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1245) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1245) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1245) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1245) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1245) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1245) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1245) CFA_SP SP+0
        CFI (cfiCond1245) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1246 Using cfiCommon0
        CFI (cfiCond1246) NoFunction
        CFI (cfiCond1246) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_506
        CFI (cfiCond1246) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1246) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1246) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1246) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1246) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1246) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1246) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1246) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1246) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1246) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1246) CFA_SP SP+0
        CFI (cfiCond1246) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1247 Using cfiCommon0
        CFI (cfiCond1247) NoFunction
        CFI (cfiCond1247) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_507
        CFI (cfiCond1247) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1247) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1247) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1247) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1247) CFA_SP SP+0
        CFI (cfiCond1247) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1248 Using cfiCommon0
        CFI (cfiCond1248) NoFunction
        CFI (cfiCond1248) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_508
        CFI (cfiCond1248) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1248) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1248) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1248) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1248) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1248) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1248) CFA_SP SP+0
        CFI (cfiCond1248) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1249 Using cfiCommon0
        CFI (cfiCond1249) NoFunction
        CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_509
        CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1249) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1249) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1249) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1249) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1249) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1249) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1249) CFA_SP SP+0
        CFI (cfiCond1249) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1250 Using cfiCommon0
        CFI (cfiCond1250) NoFunction
        CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_510
        CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1250) CFA_SP SP+0
        CFI (cfiCond1250) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1251 Using cfiCommon0
        CFI (cfiCond1251) NoFunction
        CFI (cfiCond1251) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_511
        CFI (cfiCond1251) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1251) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1251) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1251) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1251) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1251) CFA_SP SP+0
        CFI (cfiCond1251) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1252 Using cfiCommon0
        CFI (cfiCond1252) NoFunction
        CFI (cfiCond1252) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_52
        CFI (cfiCond1252) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1252) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1252) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1252) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1252) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1252) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1252) CFA_SP SP+0
        CFI (cfiCond1252) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1253 Using cfiCommon0
        CFI (cfiCond1253) NoFunction
        CFI (cfiCond1253) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_53
        CFI (cfiCond1253) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1253) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1253) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1253) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1253) CFA_SP SP+0
        CFI (cfiCond1253) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1254 Using cfiCommon0
        CFI (cfiCond1254) NoFunction
        CFI (cfiCond1254) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_71
        CFI (cfiCond1254) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1254) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1254) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1254) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1254) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1254) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1254) CFA_SP SP+0
        CFI (cfiCond1254) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1255 Using cfiCommon0
        CFI (cfiCond1255) NoFunction
        CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_72
        CFI (cfiCond1255) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1255) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1255) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1255) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1255) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1255) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1255) CFA_SP SP+0
        CFI (cfiCond1255) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1256 Using cfiCommon0
        CFI (cfiCond1256) NoFunction
        CFI (cfiCond1256) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_63
        CFI (cfiCond1256) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1256) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1256) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1256) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1256) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1256) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1256) CFA_SP SP+0
        CFI (cfiCond1256) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1257 Using cfiCommon0
        CFI (cfiCond1257) NoFunction
        CFI (cfiCond1257) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_64
        CFI (cfiCond1257) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1257) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1257) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1257) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1257) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1257) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1257) CFA_SP SP+0
        CFI (cfiCond1257) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1258 Using cfiCommon0
        CFI (cfiCond1258) NoFunction
        CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_88
        CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1258) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1258) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1258) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1258) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1258) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1258) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1258) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1258) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1258) CFA_SP SP+0
        CFI (cfiCond1258) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1259 Using cfiCommon0
        CFI (cfiCond1259) NoFunction
        CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_89
        CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1259) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1259) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1259) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1259) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1259) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1259) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1259) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1259) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1259) CFA_SP SP+0
        CFI (cfiCond1259) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1260 Using cfiCommon0
        CFI (cfiCond1260) NoFunction
        CFI (cfiCond1260) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_54
        CFI (cfiCond1260) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1260) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1260) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1260) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1260) CFA_SP SP+0
        CFI (cfiCond1260) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1261 Using cfiCommon0
        CFI (cfiCond1261) NoFunction
        CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_55
        CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1261) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1261) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1261) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1261) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1261) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1261) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1261) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1261) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1261) CFA_SP SP+0
        CFI (cfiCond1261) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1262 Using cfiCommon1
        CFI (cfiPicker1262) NoFunction
        CFI (cfiPicker1262) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond1238
        CFI EndBlock cfiCond1239
        CFI EndBlock cfiCond1240
        CFI EndBlock cfiCond1241
        CFI EndBlock cfiCond1242
        CFI EndBlock cfiCond1243
        CFI EndBlock cfiCond1244
        CFI EndBlock cfiCond1245
        CFI EndBlock cfiCond1246
        CFI EndBlock cfiCond1247
        CFI EndBlock cfiCond1248
        CFI EndBlock cfiCond1249
        CFI EndBlock cfiCond1250
        CFI EndBlock cfiCond1251
        CFI EndBlock cfiCond1252
        CFI EndBlock cfiCond1253
        CFI EndBlock cfiCond1254
        CFI EndBlock cfiCond1255
        CFI EndBlock cfiCond1256
        CFI EndBlock cfiCond1257
        CFI EndBlock cfiCond1258
        CFI EndBlock cfiCond1259
        CFI EndBlock cfiCond1260
        CFI EndBlock cfiCond1261
        CFI EndBlock cfiPicker1262

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
        CFI Block cfiCond1263 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_529
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1264 Using cfiCommon0
        CFI (cfiCond1264) NoFunction
        CFI (cfiCond1264) Conditional ??CrossCallReturnLabel_530
        CFI (cfiCond1264) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1264) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1264) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1264) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1264) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1264) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1264) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1264) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1264) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1264) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1264) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1264) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1264) CFA_SP SP+0
        CFI (cfiCond1264) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1265 Using cfiCommon1
        CFI (cfiPicker1265) NoFunction
        CFI (cfiPicker1265) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1263
        CFI EndBlock cfiCond1264
        CFI EndBlock cfiPicker1265
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine208_0:
        CFI Block cfiCond1266 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_528
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1267 Using cfiCommon0
        CFI (cfiCond1267) NoFunction
        CFI (cfiCond1267) Conditional ??CrossCallReturnLabel_529
        CFI (cfiCond1267) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1267) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1267) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1267) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1267) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1267) CFA_SP SP+0
        CFI (cfiCond1267) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1268 Using cfiCommon0
        CFI (cfiCond1268) NoFunction
        CFI (cfiCond1268) Conditional ??CrossCallReturnLabel_530
        CFI (cfiCond1268) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1268) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1268) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1268) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1268) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1268) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1268) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1268) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1268) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1268) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1268) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1268) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1268) CFA_SP SP+0
        CFI (cfiCond1268) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1269 Using cfiCommon1
        CFI (cfiPicker1269) NoFunction
        CFI (cfiPicker1269) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1266
        CFI EndBlock cfiCond1267
        CFI EndBlock cfiCond1268
        CFI EndBlock cfiPicker1269
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine209_0:
        CFI Block cfiCond1270 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_524
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1271 Using cfiCommon0
        CFI (cfiCond1271) NoFunction
        CFI (cfiCond1271) Conditional ??CrossCallReturnLabel_525
        CFI (cfiCond1271) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1271) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1271) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1271) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1271) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1271) CFA_SP SP+0
        CFI (cfiCond1271) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1272 Using cfiCommon0
        CFI (cfiCond1272) NoFunction
        CFI (cfiCond1272) Conditional ??CrossCallReturnLabel_526
        CFI (cfiCond1272) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1272) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1272) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1272) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1272) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1272) CFA_SP SP+0
        CFI (cfiCond1272) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1273 Using cfiCommon0
        CFI (cfiCond1273) NoFunction
        CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_527
        CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1273) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1273) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1273) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1273) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1273) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1273) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1273) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1273) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1273) CFA_SP SP+0
        CFI (cfiCond1273) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1274 Using cfiCommon0
        CFI (cfiCond1274) NoFunction
        CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_528
        CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1274) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1274) CFA_SP SP+0
        CFI (cfiCond1274) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1275 Using cfiCommon0
        CFI (cfiCond1275) NoFunction
        CFI (cfiCond1275) Conditional ??CrossCallReturnLabel_529
        CFI (cfiCond1275) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1275) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1275) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1275) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1275) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1275) CFA_SP SP+0
        CFI (cfiCond1275) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1276 Using cfiCommon0
        CFI (cfiCond1276) NoFunction
        CFI (cfiCond1276) Conditional ??CrossCallReturnLabel_530
        CFI (cfiCond1276) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1276) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1276) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1276) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1276) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1276) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1276) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1276) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1276) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1276) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1276) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1276) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1276) CFA_SP SP+0
        CFI (cfiCond1276) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1277 Using cfiCommon1
        CFI (cfiPicker1277) NoFunction
        CFI (cfiPicker1277) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        RET
        CFI EndBlock cfiCond1270
        CFI EndBlock cfiCond1271
        CFI EndBlock cfiCond1272
        CFI EndBlock cfiCond1273
        CFI EndBlock cfiCond1274
        CFI EndBlock cfiCond1275
        CFI EndBlock cfiCond1276
        CFI EndBlock cfiPicker1277
// 2336 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2337 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInArray(cJSON *array, int which, cJSON *newitem)
cJSON_ReplaceItemInArray:
        CFI Block cfiBlock1278 Using cfiCommon0
        CFI Function cJSON_ReplaceItemInArray
        CODE
// 2338 {
        FUNCALL cJSON_ReplaceItemInArray, get_array_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_ReplaceItemInArray, cJSON_ReplaceItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine37 & 0xFFFF
// 2339     if (which < 0)
??CrossCallReturnLabel_53:
        JNC     ??cJSON_ReplaceItemInArray_0
// 2340     {
// 2341         return false;
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_ReplaceItemInArray_1
// 2342     }
// 2343 
// 2344     return cJSON_ReplaceItemViaPointer(array, get_array_item(array, (size_t)which), newitem);
??cJSON_ReplaceItemInArray_0:
        ; Setup parameters for call to function cJSON_ReplaceItemViaPointer
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        ; Setup parameters for call to function get_array_item
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL   ??cJSON_ReplaceItemViaPointer?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
??cJSON_ReplaceItemInArray_1:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1278
// 2345 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
        CFI Block cfiCond1279 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_187
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1280 Using cfiCommon0
        CFI (cfiCond1280) NoFunction
        CFI (cfiCond1280) Conditional ??CrossCallReturnLabel_188
        CFI (cfiCond1280) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1280) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1280) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1280) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1280) CFA_SP SP+0
        CFI (cfiCond1280) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1281 Using cfiCommon1
        CFI (cfiPicker1281) NoFunction
        CFI (cfiPicker1281) Picker
        LCALL   ??get_array_item?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
        CFI EndBlock cfiCond1279
        CFI EndBlock cfiCond1280
        CFI EndBlock cfiPicker1281

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
        CFI Block cfiCond1282 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_52
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1283 Using cfiCommon0
        CFI (cfiCond1283) NoFunction
        CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_53
        CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1283) CFA_SP SP+0
        CFI (cfiCond1283) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1284 Using cfiCommon1
        CFI (cfiPicker1284) NoFunction
        CFI (cfiPicker1284) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_517:
        CLR     C
        MOV     A,R5
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        RET
        CFI EndBlock cfiCond1282
        CFI EndBlock cfiCond1283
        CFI EndBlock cfiPicker1284
// 2346 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2347 static cJSON_bool replace_item_in_object(cJSON *object, const char *string, cJSON *replacement, cJSON_bool case_sensitive)
replace_item_in_object:
        CFI Block cfiBlock1285 Using cfiCommon0
        CFI Function replace_item_in_object
        CODE
// 2348 {
        FUNCALL replace_item_in_object, cJSON_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL replace_item_in_object, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL replace_item_in_object, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL replace_item_in_object, cJSON_ReplaceItemViaPointer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_85:
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
// 2349     if ((replacement == NULL) || (string == NULL))
??CrossCallReturnLabel_91:
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??replace_item_in_object_0
        MOV     A,R6
        ORL     A,R7
        JNZ     ??replace_item_in_object_1
// 2350     {
// 2351         return false;
??replace_item_in_object_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??replace_item_in_object_2
// 2352     }
// 2353 
// 2354     /* replace the name in the replacement */
// 2355     if (!(replacement->type & cJSON_StringIsConst) && (replacement->string != NULL))
??replace_item_in_object_1:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??CrossCallReturnLabel_98
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_349:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_464:
        JZ      ??CrossCallReturnLabel_98
// 2356     {
// 2357         cJSON_free(replacement->string);
        ; Setup parameters for call to function cJSON_free
        LCALL   ?Subroutine109 & 0xFFFF
// 2358     }
??CrossCallReturnLabel_171:
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_350:
        LCALL   ?Subroutine64 & 0xFFFF
// 2359     replacement->string = (char*)cJSON_strdup((const unsigned char*)string, &global_hooks);
??CrossCallReturnLabel_98:
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_strdup?relay
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL   ??Subroutine178_0 & 0xFFFF
??CrossCallReturnLabel_351:
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2360     replacement->type &= ~cJSON_StringIsConst;
??CrossCallReturnLabel_575:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xfd
        MOVX    @DPTR,A
// 2361 
// 2362     return cJSON_ReplaceItemViaPointer(object, get_object_item(object, string, case_sensitive), replacement);
        ; Setup parameters for call to function cJSON_ReplaceItemViaPointer
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        ; Setup parameters for call to function get_object_item
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??get_object_item?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_ReplaceItemViaPointer?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 14)
??replace_item_in_object_2:
        LJMP    ??Subroutine189_0 & 0xFFFF
        CFI EndBlock cfiBlock1285
// 2363 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
        CFI Block cfiCond1286 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_170
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1287 Using cfiCommon0
        CFI (cfiCond1287) NoFunction
        CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_171
        CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1287) CFA_SP SP+0
        CFI (cfiCond1287) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1288 Using cfiCommon0
        CFI (cfiCond1288) NoFunction
        CFI (cfiCond1288) Conditional ??CrossCallReturnLabel_172
        CFI (cfiCond1288) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1288) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1288) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1288) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1288) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1288) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1288) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1288) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1288) CFA_SP SP+0
        CFI (cfiCond1288) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1289 Using cfiCommon1
        CFI (cfiPicker1289) NoFunction
        CFI (cfiPicker1289) Picker
        MOV     A,?V0 + 4
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_640:
        MOV     A,?V0 + 5
        RET
        CFI EndBlock cfiCond1286
        CFI EndBlock cfiCond1287
        CFI EndBlock cfiCond1288
        CFI EndBlock cfiPicker1289

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
        CFI Block cfiCond1290 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_97
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1291 Using cfiCommon0
        CFI (cfiCond1291) NoFunction
        CFI (cfiCond1291) Conditional ??CrossCallReturnLabel_98
        CFI (cfiCond1291) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1291) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1291) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1291) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1291) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1291) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1291) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1291) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1291) CFA_SP SP+0
        CFI (cfiCond1291) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1292 Using cfiCommon1
        CFI (cfiPicker1292) NoFunction
        CFI (cfiPicker1292) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_535:
        LCALL   ??cJSON_free?relay
        RET
        CFI EndBlock cfiCond1290
        CFI EndBlock cfiCond1291
        CFI EndBlock cfiPicker1292

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
        CFI Block cfiCond1293 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_26
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1294 Using cfiCommon0
        CFI (cfiCond1294) NoFunction
        CFI (cfiCond1294) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_27
        CFI (cfiCond1294) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1294) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1294) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1294) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1294) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1294) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1294) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1294) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1294) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1294) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1294) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1294) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1294) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1294) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1294) CFA_SP SP+0
        CFI (cfiCond1294) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1295 Using cfiCommon0
        CFI (cfiCond1295) NoFunction
        CFI (cfiCond1295) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_95
        CFI (cfiCond1295) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1295) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1295) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1295) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1295) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1295) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1295) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1295) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1295) CFA_SP SP+0
        CFI (cfiCond1295) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1296 Using cfiCommon0
        CFI (cfiCond1296) NoFunction
        CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_96
        CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1296) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1296) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1296) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1296) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1296) CFA_SP SP+0
        CFI (cfiCond1296) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1297 Using cfiCommon1
        CFI (cfiPicker1297) NoFunction
        CFI (cfiPicker1297) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1293
        CFI EndBlock cfiCond1294
        CFI EndBlock cfiCond1295
        CFI EndBlock cfiCond1296
        CFI EndBlock cfiPicker1297
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine210_0:
        CFI Block cfiCond1298 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_363
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1299 Using cfiCommon0
        CFI (cfiCond1299) NoFunction
        CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_364
        CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1299) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1299) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1299) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1299) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1299) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1299) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1299) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1299) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1299) CFA_SP SP+0
        CFI (cfiCond1299) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1300 Using cfiCommon0
        CFI (cfiCond1300) NoFunction
        CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_361
        CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1300) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1300) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1300) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1300) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1300) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1300) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1300) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1300) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1300) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1300) CFA_SP SP+0
        CFI (cfiCond1300) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1301 Using cfiCommon0
        CFI (cfiCond1301) NoFunction
        CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_362
        CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1301) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1301) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1301) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1301) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1301) CFA_SP SP+0
        CFI (cfiCond1301) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1302 Using cfiCommon0
        CFI (cfiCond1302) NoFunction
        CFI (cfiCond1302) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_26
        CFI (cfiCond1302) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1302) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1302) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1302) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1302) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1302) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1302) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1302) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1302) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1302) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1302) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1302) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1302) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1302) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1302) CFA_SP SP+0
        CFI (cfiCond1302) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1303 Using cfiCommon0
        CFI (cfiCond1303) NoFunction
        CFI (cfiCond1303) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_27
        CFI (cfiCond1303) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1303) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1303) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1303) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1303) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1303) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1303) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1303) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1303) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1303) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1303) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1303) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1303) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1303) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1303) CFA_SP SP+0
        CFI (cfiCond1303) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1304 Using cfiCommon0
        CFI (cfiCond1304) NoFunction
        CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_95
        CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1304) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1304) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1304) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1304) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1304) CFA_SP SP+0
        CFI (cfiCond1304) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1305 Using cfiCommon0
        CFI (cfiCond1305) NoFunction
        CFI (cfiCond1305) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_96
        CFI (cfiCond1305) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1305) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1305) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1305) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1305) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1305) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1305) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1305) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1305) CFA_SP SP+0
        CFI (cfiCond1305) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1306 Using cfiCommon1
        CFI (cfiPicker1306) NoFunction
        CFI (cfiPicker1306) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1298
        CFI EndBlock cfiCond1299
        CFI EndBlock cfiCond1300
        CFI EndBlock cfiCond1301
        CFI EndBlock cfiCond1302
        CFI EndBlock cfiCond1303
        CFI EndBlock cfiCond1304
        CFI EndBlock cfiCond1305
        CFI EndBlock cfiPicker1306
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine211_0:
        CFI Block cfiCond1307 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_28
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1308 Using cfiCommon0
        CFI (cfiCond1308) NoFunction
        CFI (cfiCond1308) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_29
        CFI (cfiCond1308) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1308) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1308) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1308) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1308) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1308) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1308) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1308) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1308) CFA_SP SP+0
        CFI (cfiCond1308) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1309 Using cfiCommon0
        CFI (cfiCond1309) NoFunction
        CFI (cfiCond1309) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_23
        CFI (cfiCond1309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1309) CFA_SP SP+0
        CFI (cfiCond1309) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1310 Using cfiCommon0
        CFI (cfiCond1310) NoFunction
        CFI (cfiCond1310) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_24
        CFI (cfiCond1310) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1310) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1310) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1310) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1310) CFA_SP SP+0
        CFI (cfiCond1310) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1311 Using cfiCommon0
        CFI (cfiCond1311) NoFunction
        CFI (cfiCond1311) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_25
        CFI (cfiCond1311) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1311) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1311) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1311) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1311) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1311) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1311) CFA_SP SP+0
        CFI (cfiCond1311) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1312 Using cfiCommon0
        CFI (cfiCond1312) NoFunction
        CFI (cfiCond1312) Conditional ??CrossCallReturnLabel_533, ??CrossCallReturnLabel_45
        CFI (cfiCond1312) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1312) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1312) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1312) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1312) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1312) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1312) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1312) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1312) CFA_SP SP+0
        CFI (cfiCond1312) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1313 Using cfiCommon0
        CFI (cfiCond1313) NoFunction
        CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_533, ??CrossCallReturnLabel_46
        CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1313) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1313) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1313) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1313) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1313) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1313) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1313) CFA_SP SP+0
        CFI (cfiCond1313) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1314 Using cfiCommon0
        CFI (cfiCond1314) NoFunction
        CFI (cfiCond1314) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_100
        CFI (cfiCond1314) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1314) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1314) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1314) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1314) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1314) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1314) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1314) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1314) CFA_SP SP+0
        CFI (cfiCond1314) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1315 Using cfiCommon0
        CFI (cfiCond1315) NoFunction
        CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_99
        CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1315) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1315) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1315) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1315) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1315) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1315) CFA_SP SP+0
        CFI (cfiCond1315) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1316 Using cfiCommon0
        CFI (cfiCond1316) NoFunction
        CFI (cfiCond1316) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_369
        CFI (cfiCond1316) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1316) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1316) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1316) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1316) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1316) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1316) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1316) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1316) CFA_SP SP+0
        CFI (cfiCond1316) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1317 Using cfiCommon0
        CFI (cfiCond1317) NoFunction
        CFI (cfiCond1317) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_370
        CFI (cfiCond1317) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1317) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1317) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1317) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1317) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1317) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1317) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1317) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1317) CFA_SP SP+0
        CFI (cfiCond1317) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1318 Using cfiCommon0
        CFI (cfiCond1318) NoFunction
        CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_374
        CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1318) CFA_SP SP+0
        CFI (cfiCond1318) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1319 Using cfiCommon0
        CFI (cfiCond1319) NoFunction
        CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_375
        CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1319) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1319) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1319) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1319) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1319) CFA_SP SP+0
        CFI (cfiCond1319) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1320 Using cfiCommon0
        CFI (cfiCond1320) NoFunction
        CFI (cfiCond1320) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_376
        CFI (cfiCond1320) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1320) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1320) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1320) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1320) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1320) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1320) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1320) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1320) CFA_SP SP+0
        CFI (cfiCond1320) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1321 Using cfiCommon0
        CFI (cfiCond1321) NoFunction
        CFI (cfiCond1321) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_373
        CFI (cfiCond1321) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1321) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1321) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1321) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1321) CFA_SP SP+0
        CFI (cfiCond1321) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1322 Using cfiCommon0
        CFI (cfiCond1322) NoFunction
        CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_372
        CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1322) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1322) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1322) CFA_SP SP+0
        CFI (cfiCond1322) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1323 Using cfiCommon0
        CFI (cfiCond1323) NoFunction
        CFI (cfiCond1323) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_371
        CFI (cfiCond1323) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1323) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1323) CFA_SP SP+-5
        CFI Block cfiCond1324 Using cfiCommon0
        CFI (cfiCond1324) NoFunction
        CFI (cfiCond1324) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_390
        CFI (cfiCond1324) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1324) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1324) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1324) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1324) CFA_SP SP+0
        CFI (cfiCond1324) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1325 Using cfiCommon0
        CFI (cfiCond1325) NoFunction
        CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_391
        CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1325) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1325) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1325) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1325) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1325) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1325) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1325) CFA_SP SP+0
        CFI (cfiCond1325) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1326 Using cfiCommon0
        CFI (cfiCond1326) NoFunction
        CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_388
        CFI (cfiCond1326) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1326) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1326) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1326) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1326) CFA_SP SP+0
        CFI (cfiCond1326) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1327 Using cfiCommon0
        CFI (cfiCond1327) NoFunction
        CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_389
        CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1327) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1327) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1327) CFA_SP SP+0
        CFI (cfiCond1327) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1328 Using cfiCommon0
        CFI (cfiCond1328) NoFunction
        CFI (cfiCond1328) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_377
        CFI (cfiCond1328) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1328) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1328) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1328) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1328) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1328) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1328) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1328) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1328) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1328) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1328) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1328) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1328) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1328) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1328) CFA_SP SP+0
        CFI (cfiCond1328) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1329 Using cfiCommon0
        CFI (cfiCond1329) NoFunction
        CFI (cfiCond1329) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_378
        CFI (cfiCond1329) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1329) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1329) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1329) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1329) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1329) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1329) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1329) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1329) CFA_SP SP+0
        CFI (cfiCond1329) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1330 Using cfiCommon0
        CFI (cfiCond1330) NoFunction
        CFI (cfiCond1330) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_379
        CFI (cfiCond1330) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1330) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1330) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1330) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1330) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1330) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1330) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1330) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1330) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1330) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1330) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1330) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1330) CFA_SP SP+-2
        CFI (cfiCond1330) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1331 Using cfiCommon0
        CFI (cfiCond1331) NoFunction
        CFI (cfiCond1331) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_380
        CFI (cfiCond1331) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1331) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1331) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1331) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1331) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1331) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1331) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1331) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1331) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1331) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1331) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1331) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1331) CFA_SP SP+0
        CFI (cfiCond1331) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1332 Using cfiCommon0
        CFI (cfiCond1332) NoFunction
        CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_381
        CFI (cfiCond1332) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1332) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1332) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1332) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1332) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1332) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1332) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1332) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1332) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1332) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1332) CFA_SP SP+0
        CFI (cfiCond1332) CFA_XSP16 add(XSP16, 32)
        CFI Block cfiCond1333 Using cfiCommon0
        CFI (cfiCond1333) NoFunction
        CFI (cfiCond1333) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_382
        CFI (cfiCond1333) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1333) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1333) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1333) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1333) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1333) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1333) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1333) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1333) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1333) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1333) CFA_SP SP+-2
        CFI (cfiCond1333) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1334 Using cfiCommon0
        CFI (cfiCond1334) NoFunction
        CFI (cfiCond1334) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_383
        CFI (cfiCond1334) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1334) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1334) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1334) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1334) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1334) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1334) CFA_SP SP+0
        CFI (cfiCond1334) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1335 Using cfiCommon0
        CFI (cfiCond1335) NoFunction
        CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_384
        CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1335) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1335) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1335) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1335) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1335) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1335) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1335) CFA_SP SP+0
        CFI (cfiCond1335) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1336 Using cfiCommon0
        CFI (cfiCond1336) NoFunction
        CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_385
        CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1336) CFA_SP SP+0
        CFI (cfiCond1336) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1337 Using cfiCommon0
        CFI (cfiCond1337) NoFunction
        CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_386
        CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1337) CFA_SP SP+0
        CFI (cfiCond1337) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1338 Using cfiCommon0
        CFI (cfiCond1338) NoFunction
        CFI (cfiCond1338) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_387
        CFI (cfiCond1338) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1338) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1338) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1338) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1338) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1338) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1338) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1338) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1338) CFA_SP SP+0
        CFI (cfiCond1338) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1339 Using cfiCommon0
        CFI (cfiCond1339) NoFunction
        CFI (cfiCond1339) Conditional ??CrossCallReturnLabel_535, ??CrossCallReturnLabel_97
        CFI (cfiCond1339) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1339) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1339) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1339) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1339) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1339) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1339) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1339) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1339) CFA_SP SP+0
        CFI (cfiCond1339) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1340 Using cfiCommon0
        CFI (cfiCond1340) NoFunction
        CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_535, ??CrossCallReturnLabel_98
        CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1340) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1340) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1340) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1340) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1340) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1340) CFA_SP SP+0
        CFI (cfiCond1340) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1341 Using cfiCommon0
        CFI (cfiCond1341) NoFunction
        CFI (cfiCond1341) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_69
        CFI (cfiCond1341) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1341) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1341) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1341) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1341) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1341) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1341) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1341) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1341) CFA_SP SP+0
        CFI (cfiCond1341) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1342 Using cfiCommon0
        CFI (cfiCond1342) NoFunction
        CFI (cfiCond1342) Conditional ??CrossCallReturnLabel_534, ??CrossCallReturnLabel_70
        CFI (cfiCond1342) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1342) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1342) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1342) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1342) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1342) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1342) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1342) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1342) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1342) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1342) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1342) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1342) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1342) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1342) CFA_SP SP+0
        CFI (cfiCond1342) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1343 Using cfiCommon0
        CFI (cfiCond1343) NoFunction
        CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_101
        CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1343) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1343) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1343) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1343) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1343) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1343) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1343) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1343) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1343) CFA_SP SP+0
        CFI (cfiCond1343) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1344 Using cfiCommon0
        CFI (cfiCond1344) NoFunction
        CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_102
        CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1344) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1344) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1344) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1344) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1344) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1344) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1344) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1344) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1344) CFA_SP SP+0
        CFI (cfiCond1344) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1345 Using cfiCommon0
        CFI (cfiCond1345) NoFunction
        CFI (cfiCond1345) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_363
        CFI (cfiCond1345) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1345) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1345) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1345) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1345) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1345) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1345) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1345) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1345) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1345) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1345) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1345) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1345) CFA_SP SP+0
        CFI (cfiCond1345) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1346 Using cfiCommon0
        CFI (cfiCond1346) NoFunction
        CFI (cfiCond1346) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_364
        CFI (cfiCond1346) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1346) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1346) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1346) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1346) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1346) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1346) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1346) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1346) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1346) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1346) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1346) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1346) CFA_SP SP+0
        CFI (cfiCond1346) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1347 Using cfiCommon0
        CFI (cfiCond1347) NoFunction
        CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_361
        CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1347) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1347) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1347) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1347) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1347) CFA_SP SP+0
        CFI (cfiCond1347) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1348 Using cfiCommon0
        CFI (cfiCond1348) NoFunction
        CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_362
        CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1348) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1348) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1348) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1348) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1348) CFA_SP SP+0
        CFI (cfiCond1348) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1349 Using cfiCommon0
        CFI (cfiCond1349) NoFunction
        CFI (cfiCond1349) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_26
        CFI (cfiCond1349) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1349) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1349) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1349) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1349) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1349) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1349) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1349) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1349) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1349) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1349) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1349) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1349) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1349) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1349) CFA_SP SP+0
        CFI (cfiCond1349) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1350 Using cfiCommon0
        CFI (cfiCond1350) NoFunction
        CFI (cfiCond1350) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_27
        CFI (cfiCond1350) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1350) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1350) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1350) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1350) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1350) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1350) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1350) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1350) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1350) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1350) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1350) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1350) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1350) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1350) CFA_SP SP+0
        CFI (cfiCond1350) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1351 Using cfiCommon0
        CFI (cfiCond1351) NoFunction
        CFI (cfiCond1351) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_95
        CFI (cfiCond1351) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1351) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1351) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1351) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1351) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1351) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1351) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1351) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1351) CFA_SP SP+0
        CFI (cfiCond1351) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1352 Using cfiCommon0
        CFI (cfiCond1352) NoFunction
        CFI (cfiCond1352) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_96
        CFI (cfiCond1352) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1352) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1352) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1352) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1352) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1352) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1352) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1352) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1352) CFA_SP SP+0
        CFI (cfiCond1352) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiPicker1353 Using cfiCommon1
        CFI (cfiPicker1353) NoFunction
        CFI (cfiPicker1353) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
        CFI EndBlock cfiCond1307
        CFI EndBlock cfiCond1308
        CFI EndBlock cfiCond1309
        CFI EndBlock cfiCond1310
        CFI EndBlock cfiCond1311
        CFI EndBlock cfiCond1312
        CFI EndBlock cfiCond1313
        CFI EndBlock cfiCond1314
        CFI EndBlock cfiCond1315
        CFI EndBlock cfiCond1316
        CFI EndBlock cfiCond1317
        CFI EndBlock cfiCond1318
        CFI EndBlock cfiCond1319
        CFI EndBlock cfiCond1320
        CFI EndBlock cfiCond1321
        CFI EndBlock cfiCond1322
        CFI EndBlock cfiCond1323
        CFI EndBlock cfiCond1324
        CFI EndBlock cfiCond1325
        CFI EndBlock cfiCond1326
        CFI EndBlock cfiCond1327
        CFI EndBlock cfiCond1328
        CFI EndBlock cfiCond1329
        CFI EndBlock cfiCond1330
        CFI EndBlock cfiCond1331
        CFI EndBlock cfiCond1332
        CFI EndBlock cfiCond1333
        CFI EndBlock cfiCond1334
        CFI EndBlock cfiCond1335
        CFI EndBlock cfiCond1336
        CFI EndBlock cfiCond1337
        CFI EndBlock cfiCond1338
        CFI EndBlock cfiCond1339
        CFI EndBlock cfiCond1340
        CFI EndBlock cfiCond1341
        CFI EndBlock cfiCond1342
        CFI EndBlock cfiCond1343
        CFI EndBlock cfiCond1344
        CFI EndBlock cfiCond1345
        CFI EndBlock cfiCond1346
        CFI EndBlock cfiCond1347
        CFI EndBlock cfiCond1348
        CFI EndBlock cfiCond1349
        CFI EndBlock cfiCond1350
        CFI EndBlock cfiCond1351
        CFI EndBlock cfiCond1352
        CFI EndBlock cfiPicker1353

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
        CFI Block cfiCond1354 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_90
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1355 Using cfiCommon0
        CFI (cfiCond1355) NoFunction
        CFI (cfiCond1355) Conditional ??CrossCallReturnLabel_91
        CFI (cfiCond1355) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1355) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1355) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1355) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1355) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1355) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1355) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1355) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1355) CFA_SP SP+0
        CFI (cfiCond1355) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1356 Using cfiCommon0
        CFI (cfiCond1356) NoFunction
        CFI (cfiCond1356) Conditional ??CrossCallReturnLabel_92
        CFI (cfiCond1356) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1356) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1356) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1356) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1356) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1356) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1356) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1356) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1356) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1356) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1356) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1356) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1356) CFA_SP SP+0
        CFI (cfiCond1356) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1357 Using cfiCommon1
        CFI (cfiPicker1357) NoFunction
        CFI (cfiPicker1357) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond1354
        CFI EndBlock cfiCond1355
        CFI EndBlock cfiCond1356
        CFI EndBlock cfiPicker1357
// 2364 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2365 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInObject(cJSON *object, const char *string, cJSON *newitem)
cJSON_ReplaceItemInObject:
        CFI Block cfiBlock1358 Using cfiCommon0
        CFI Function cJSON_ReplaceItemInObject
        CODE
// 2366 {
        FUNCALL cJSON_ReplaceItemInObject, replace_item_in_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine48 & 0xFFFF
        CFI EndBlock cfiBlock1358
// 2367     return replace_item_in_object(object, string, newitem, false);
??CrossCallReturnLabel_72:
        REQUIRE ?Subroutine13
        ; // Fall through to label ?Subroutine13

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
        CFI Block cfiBlock1359 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??replace_item_in_object?relay
        MOV     A,#0x4
        LJMP    ??Subroutine181_0 & 0xFFFF
        CFI EndBlock cfiBlock1359

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
        CFI Block cfiCond1360 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_71
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1361 Using cfiCommon0
        CFI (cfiCond1361) NoFunction
        CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_72
        CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1361) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1361) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1361) CFA_SP SP+0
        CFI (cfiCond1361) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1362 Using cfiCommon1
        CFI (cfiPicker1362) NoFunction
        CFI (cfiPicker1362) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_520:
        ; Setup parameters for call to function add_item_to_object
        ; Setup parameters for call to function replace_item_in_object
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        RET
        CFI EndBlock cfiCond1360
        CFI EndBlock cfiCond1361
        CFI EndBlock cfiPicker1362
// 2368 }
// 2369 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2370 CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInObjectCaseSensitive(cJSON *object, const char *string, cJSON *newitem)
cJSON_ReplaceItemInObjectCaseSensitive:
        CFI Block cfiBlock1363 Using cfiCommon0
        CFI Function cJSON_ReplaceItemInObjectCaseSensitive
        CODE
// 2371 {
        FUNCALL cJSON_ReplaceItemInObjectCaseSensitive, replace_item_in_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
// 2372     return replace_item_in_object(object, string, newitem, true);
??CrossCallReturnLabel_64:
        SJMP    ?Subroutine13
        CFI EndBlock cfiBlock1363

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
        CFI Block cfiCond1364 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_63
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1365 Using cfiCommon0
        CFI (cfiCond1365) NoFunction
        CFI (cfiCond1365) Conditional ??CrossCallReturnLabel_64
        CFI (cfiCond1365) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1365) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1365) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1365) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1365) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1365) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1365) CFA_SP SP+0
        CFI (cfiCond1365) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1366 Using cfiCommon1
        CFI (cfiPicker1366) NoFunction
        CFI (cfiPicker1366) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_519:
        ; Setup parameters for call to function add_item_to_object
        ; Setup parameters for call to function replace_item_in_object
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        RET
        CFI EndBlock cfiCond1364
        CFI EndBlock cfiCond1365
        CFI EndBlock cfiPicker1366
// 2373 }
// 2374 
// 2375 /* Create basic types: */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2376 CJSON_PUBLIC(cJSON *) cJSON_CreateNull(void)
cJSON_CreateNull:
        CFI Block cfiBlock1367 Using cfiCommon0
        CFI Function cJSON_CreateNull
        CODE
// 2377 {
        FUNCALL cJSON_CreateNull, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2378     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2379     if(item)
??CrossCallReturnLabel_560:
        JZ      ??CrossCallReturnLabel_545
// 2380     {
// 2381         item->type = cJSON_NULL;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x4
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2382     }
// 2383 
// 2384     return item;
??CrossCallReturnLabel_545:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1367
// 2385 }
// 2386 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2387 CJSON_PUBLIC(cJSON *) cJSON_CreateTrue(void)
cJSON_CreateTrue:
        CFI Block cfiBlock1368 Using cfiCommon0
        CFI Function cJSON_CreateTrue
        CODE
// 2388 {
        FUNCALL cJSON_CreateTrue, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2389     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2390     if(item)
??CrossCallReturnLabel_561:
        JZ      ??CrossCallReturnLabel_546
// 2391     {
// 2392         item->type = cJSON_True;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2393     }
// 2394 
// 2395     return item;
??CrossCallReturnLabel_546:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1368
// 2396 }
// 2397 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2398 CJSON_PUBLIC(cJSON *) cJSON_CreateFalse(void)
cJSON_CreateFalse:
        CFI Block cfiBlock1369 Using cfiCommon0
        CFI Function cJSON_CreateFalse
        CODE
// 2399 {
        FUNCALL cJSON_CreateFalse, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2400     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2401     if(item)
??CrossCallReturnLabel_562:
        JZ      ??CrossCallReturnLabel_547
// 2402     {
// 2403         item->type = cJSON_False;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2404     }
// 2405 
// 2406     return item;
??CrossCallReturnLabel_547:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1369
// 2407 }
// 2408 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2409 CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool boolean)
cJSON_CreateBool:
        CFI Block cfiBlock1370 Using cfiCommon0
        CFI Function cJSON_CreateBool
        CODE
// 2410 {
        FUNCALL cJSON_CreateBool, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine116 & 0xFFFF
// 2411     cJSON *item = cJSON_New_Item(&global_hooks);
// 2412     if(item)
??CrossCallReturnLabel_556:
        JZ      ??CrossCallReturnLabel_548
// 2413     {
// 2414         item->type = boolean ? cJSON_True : cJSON_False;
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_CreateBool_0
        MOV     R0,#0x2
        SJMP    ??cJSON_CreateBool_1
??cJSON_CreateBool_0:
        MOV     R0,#0x1
??cJSON_CreateBool_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R0
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2415     }
// 2416 
// 2417     return item;
??CrossCallReturnLabel_548:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1370
// 2418 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
        CFI Block cfiCond1371 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_551
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1372 Using cfiCommon0
        CFI (cfiCond1372) NoFunction
        CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_552
        CFI (cfiCond1372) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1372) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1372) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1372) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1372) CFA_SP SP+0
        CFI (cfiCond1372) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1373 Using cfiCommon1
        CFI (cfiPicker1373) NoFunction
        CFI (cfiPicker1373) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x20
        CFI EndBlock cfiCond1371
        CFI EndBlock cfiCond1372
        CFI EndBlock cfiPicker1373
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine212_0:
        CFI Block cfiCond1374 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_543
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1375 Using cfiCommon0
        CFI (cfiCond1375) NoFunction
        CFI (cfiCond1375) Conditional ??CrossCallReturnLabel_544
        CFI (cfiCond1375) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1375) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1375) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1375) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1375) CFA_SP SP+0
        CFI (cfiCond1375) CFA_XSP16 add(XSP16, 28)
        CFI Block cfiCond1376 Using cfiCommon0
        CFI (cfiCond1376) NoFunction
        CFI (cfiCond1376) Conditional ??CrossCallReturnLabel_545
        CFI (cfiCond1376) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1376) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1376) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1376) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1376) CFA_SP SP+0
        CFI (cfiCond1376) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1377 Using cfiCommon0
        CFI (cfiCond1377) NoFunction
        CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_546
        CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1377) CFA_SP SP+0
        CFI (cfiCond1377) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1378 Using cfiCommon0
        CFI (cfiCond1378) NoFunction
        CFI (cfiCond1378) Conditional ??CrossCallReturnLabel_547
        CFI (cfiCond1378) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1378) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1378) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1378) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1378) CFA_SP SP+0
        CFI (cfiCond1378) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1379 Using cfiCommon0
        CFI (cfiCond1379) NoFunction
        CFI (cfiCond1379) Conditional ??CrossCallReturnLabel_548
        CFI (cfiCond1379) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1379) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1379) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1379) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1379) CFA_SP SP+0
        CFI (cfiCond1379) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1380 Using cfiCommon0
        CFI (cfiCond1380) NoFunction
        CFI (cfiCond1380) Conditional ??CrossCallReturnLabel_549
        CFI (cfiCond1380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1380) CFA_SP SP+0
        CFI (cfiCond1380) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1381 Using cfiCommon0
        CFI (cfiCond1381) NoFunction
        CFI (cfiCond1381) Conditional ??CrossCallReturnLabel_550
        CFI (cfiCond1381) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1381) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1381) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1381) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1381) CFA_SP SP+0
        CFI (cfiCond1381) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1382 Using cfiCommon0
        CFI (cfiCond1382) NoFunction
        CFI (cfiCond1382) Conditional ??CrossCallReturnLabel_551
        CFI (cfiCond1382) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1382) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1382) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1382) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1382) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1382) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1382) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1382) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1382) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1382) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1382) CFA_SP SP+0
        CFI (cfiCond1382) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1383 Using cfiCommon0
        CFI (cfiCond1383) NoFunction
        CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_552
        CFI (cfiCond1383) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1383) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1383) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1383) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1383) CFA_SP SP+0
        CFI (cfiCond1383) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1384 Using cfiCommon1
        CFI (cfiPicker1384) NoFunction
        CFI (cfiPicker1384) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1374
        CFI EndBlock cfiCond1375
        CFI EndBlock cfiCond1376
        CFI EndBlock cfiCond1377
        CFI EndBlock cfiCond1378
        CFI EndBlock cfiCond1379
        CFI EndBlock cfiCond1380
        CFI EndBlock cfiCond1381
        CFI EndBlock cfiCond1382
        CFI EndBlock cfiCond1383
        CFI EndBlock cfiPicker1384
// 2419 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2420 CJSON_PUBLIC(cJSON *) cJSON_CreateNumber(double num)
cJSON_CreateNumber:
        CFI Block cfiBlock1385 Using cfiCommon0
        CFI Function cJSON_CreateNumber
        CODE
// 2421 {
        FUNCALL cJSON_CreateNumber, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
// 2422     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2423     if(item)
??CrossCallReturnLabel_563:
        JZ      ??cJSON_CreateNumber_0
// 2424     {
// 2425         item->type = cJSON_Number;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x8
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2426         item->valuedouble = num;
??CrossCallReturnLabel_549:
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_139:
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
// 2427 
// 2428         /* use saturation in case of overflow */
// 2429         if (num >= INT_MAX)
        MOV     DPTR,#__Constant_46fffe00
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_GE
        JNC     ??cJSON_CreateNumber_1
// 2430         {
// 2431             item->valueint = INT_MAX;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x7f
        SJMP    ??cJSON_CreateNumber_2
// 2432         }
// 2433         else if (num <= (double)INT_MIN)
??cJSON_CreateNumber_1:
        MOV     DPTR,#__Constant_c6fffffe
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_LT
        JNC     ??cJSON_CreateNumber_3
// 2434         {
// 2435             item->valueint = INT_MIN;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x80
        SJMP    ??cJSON_CreateNumber_2
// 2436         }
// 2437         else
// 2438         {
// 2439             item->valueint = (int)num;
??cJSON_CreateNumber_3:
        MOV     R0,#?V0 + 0
        LCALL   ?FLT_TO_L
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
??cJSON_CreateNumber_2:
        MOVX    @DPTR,A
// 2440         }
// 2441     }
// 2442 
// 2443     return item;
??cJSON_CreateNumber_0:
        LJMP    ??Subroutine151_0 & 0xFFFF
        CFI EndBlock cfiBlock1385
// 2444 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
        CFI Block cfiCond1386 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_138
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 46)
        CFI Block cfiCond1387 Using cfiCommon0
        CFI (cfiCond1387) NoFunction
        CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_139
        CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1387) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1387) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1387) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1387) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1387) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1387) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1387) CFA_SP SP+0
        CFI (cfiCond1387) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1388 Using cfiCommon0
        CFI (cfiCond1388) NoFunction
        CFI (cfiCond1388) Conditional ??CrossCallReturnLabel_140
        CFI (cfiCond1388) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1388) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1388) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1388) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1388) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1388) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1388) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1388) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1388) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1388) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1388) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1388) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1388) CFA_SP SP+0
        CFI (cfiCond1388) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiPicker1389 Using cfiCommon1
        CFI (cfiPicker1389) NoFunction
        CFI (cfiPicker1389) Picker
        MOV     A,R2
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_646:
        RET
        CFI EndBlock cfiCond1386
        CFI EndBlock cfiCond1387
        CFI EndBlock cfiCond1388
        CFI EndBlock cfiPicker1389
// 2445 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2446 CJSON_PUBLIC(cJSON *) cJSON_CreateString(const char *string)
cJSON_CreateString:
        CFI Block cfiBlock1390 Using cfiCommon0
        CFI Function cJSON_CreateString
        CODE
// 2447 {
        FUNCALL cJSON_CreateString, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateString, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateString, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine115 & 0xFFFF
// 2448     cJSON *item = cJSON_New_Item(&global_hooks);
// 2449     if(item)
??CrossCallReturnLabel_553:
        JZ      ??cJSON_CreateString_0
// 2450     {
// 2451         item->type = cJSON_String;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x10
        LCALL   ?Subroutine84 & 0xFFFF
// 2452         item->valuestring = (char*)cJSON_strdup((const unsigned char*)string, &global_hooks);
// 2453         if(!item->valuestring)
??CrossCallReturnLabel_141:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_465:
        JNZ     ??cJSON_CreateString_0
// 2454         {
// 2455             cJSON_Delete(item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ?Subroutine107 & 0xFFFF
// 2456             return NULL;
// 2457         }
// 2458     }
??CrossCallReturnLabel_403:
        SJMP    ??cJSON_CreateString_1
// 2459 
// 2460     return item;
??cJSON_CreateString_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateString_1:
        LJMP    ??Subroutine182_0 & 0xFFFF
        CFI EndBlock cfiBlock1390
// 2461 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
        CFI Block cfiCond1391 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_553
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1392 Using cfiCommon0
        CFI (cfiCond1392) NoFunction
        CFI (cfiCond1392) Conditional ??CrossCallReturnLabel_554
        CFI (cfiCond1392) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1392) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1392) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1392) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1392) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1392) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1392) CFA_SP SP+0
        CFI (cfiCond1392) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1393 Using cfiCommon1
        CFI (cfiPicker1393) NoFunction
        CFI (cfiPicker1393) Picker
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        CFI EndBlock cfiCond1391
        CFI EndBlock cfiCond1392
        CFI EndBlock cfiPicker1393
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine213_0:
        CFI Block cfiCond1394 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_555
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1395 Using cfiCommon0
        CFI (cfiCond1395) NoFunction
        CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_553
        CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1395) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1395) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1395) CFA_SP SP+0
        CFI (cfiCond1395) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1396 Using cfiCommon0
        CFI (cfiCond1396) NoFunction
        CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_554
        CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1396) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1396) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1396) CFA_SP SP+0
        CFI (cfiCond1396) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1397 Using cfiCommon1
        CFI (cfiPicker1397) NoFunction
        CFI (cfiPicker1397) Picker
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        RET
        CFI EndBlock cfiCond1394
        CFI EndBlock cfiCond1395
        CFI EndBlock cfiCond1396
        CFI EndBlock cfiPicker1397
// 2462 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2463 CJSON_PUBLIC(cJSON *) cJSON_CreateStringReference(const char *string)
cJSON_CreateStringReference:
        CFI Block cfiBlock1398 Using cfiCommon0
        CFI Function cJSON_CreateStringReference
        CODE
// 2464 {
        FUNCALL cJSON_CreateStringReference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine116 & 0xFFFF
// 2465     cJSON *item = cJSON_New_Item(&global_hooks);
// 2466     if (item != NULL)
??CrossCallReturnLabel_557:
        JZ      ??cJSON_CreateStringReference_0
// 2467     {
// 2468         item->type = cJSON_String | cJSON_IsReference;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x10
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1
        LCALL   ?Subroutine101 & 0xFFFF
// 2469         item->valuestring = (char*)cast_away_const(string);
// 2470     }
??CrossCallReturnLabel_158:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
// 2471 
// 2472     return item;
??cJSON_CreateStringReference_0:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1398
// 2473 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
        CFI Block cfiCond1399 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_156
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1400 Using cfiCommon0
        CFI (cfiCond1400) NoFunction
        CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_157
        CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1400) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1400) CFA_SP SP+0
        CFI (cfiCond1400) CFA_XSP16 add(XSP16, 11)
        CFI Block cfiCond1401 Using cfiCommon0
        CFI (cfiCond1401) NoFunction
        CFI (cfiCond1401) Conditional ??CrossCallReturnLabel_158
        CFI (cfiCond1401) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1401) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1401) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1401) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1401) CFA_SP SP+0
        CFI (cfiCond1401) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1402 Using cfiCommon1
        CFI (cfiPicker1402) NoFunction
        CFI (cfiPicker1402) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond1399
        CFI EndBlock cfiCond1400
        CFI EndBlock cfiCond1401
        CFI EndBlock cfiPicker1402
// 2474 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2475 CJSON_PUBLIC(cJSON *) cJSON_CreateObjectReference(const cJSON *child)
cJSON_CreateObjectReference:
        CFI Block cfiBlock1403 Using cfiCommon0
        CFI Function cJSON_CreateObjectReference
        CODE
// 2476 {
        FUNCALL cJSON_CreateObjectReference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine116 & 0xFFFF
// 2477     cJSON *item = cJSON_New_Item(&global_hooks);
// 2478     if (item != NULL) {
??CrossCallReturnLabel_558:
        JZ      ??CrossCallReturnLabel_150
// 2479         item->type = cJSON_Object | cJSON_IsReference;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        LCALL   ?Subroutine93 & 0xFFFF
// 2480         item->child = (cJSON*)cast_away_const(child);
// 2481     }
// 2482 
// 2483     return item;
??CrossCallReturnLabel_150:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1403
// 2484 }
// 2485 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2486 CJSON_PUBLIC(cJSON *) cJSON_CreateArrayReference(const cJSON *child) {
cJSON_CreateArrayReference:
        CFI Block cfiBlock1404 Using cfiCommon0
        CFI Function cJSON_CreateArrayReference
        CODE
        FUNCALL cJSON_CreateArrayReference, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine116 & 0xFFFF
// 2487     cJSON *item = cJSON_New_Item(&global_hooks);
// 2488     if (item != NULL) {
??CrossCallReturnLabel_559:
        JZ      ??CrossCallReturnLabel_151
// 2489         item->type = cJSON_Array | cJSON_IsReference;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x20
        LCALL   ?Subroutine93 & 0xFFFF
// 2490         item->child = (cJSON*)cast_away_const(child);
// 2491     }
// 2492 
// 2493     return item;
??CrossCallReturnLabel_151:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1404
// 2494 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
        CFI Block cfiCond1405 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_150
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1406 Using cfiCommon0
        CFI (cfiCond1406) NoFunction
        CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_151
        CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1406) CFA_SP SP+0
        CFI (cfiCond1406) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1407 Using cfiCommon1
        CFI (cfiPicker1407) NoFunction
        CFI (cfiPicker1407) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#0x1
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1405
        CFI EndBlock cfiCond1406
        CFI EndBlock cfiPicker1407
// 2495 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2496 CJSON_PUBLIC(cJSON *) cJSON_CreateRaw(const char *raw)
cJSON_CreateRaw:
        CFI Block cfiBlock1408 Using cfiCommon0
        CFI Function cJSON_CreateRaw
        CODE
// 2497 {
        FUNCALL cJSON_CreateRaw, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateRaw, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateRaw, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine115 & 0xFFFF
// 2498     cJSON *item = cJSON_New_Item(&global_hooks);
// 2499     if(item)
??CrossCallReturnLabel_554:
        JZ      ??cJSON_CreateRaw_0
// 2500     {
// 2501         item->type = cJSON_Raw;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x80
        LCALL   ?Subroutine84 & 0xFFFF
// 2502         item->valuestring = (char*)cJSON_strdup((const unsigned char*)raw, &global_hooks);
// 2503         if(!item->valuestring)
??CrossCallReturnLabel_142:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_466:
        JNZ     ??cJSON_CreateRaw_0
// 2504         {
// 2505             cJSON_Delete(item);
        ; Setup parameters for call to function cJSON_Delete
        LCALL   ?Subroutine107 & 0xFFFF
// 2506             return NULL;
// 2507         }
// 2508     }
??CrossCallReturnLabel_404:
        SJMP    ??cJSON_CreateRaw_1
// 2509 
// 2510     return item;
??cJSON_CreateRaw_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateRaw_1:
        LJMP    ??Subroutine182_0 & 0xFFFF
        CFI EndBlock cfiBlock1408
// 2511 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
        CFI Block cfiCond1409 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_141
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1410 Using cfiCommon0
        CFI (cfiCond1410) NoFunction
        CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_142
        CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1410) CFA_SP SP+0
        CFI (cfiCond1410) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1411 Using cfiCommon1
        CFI (cfiPicker1411) NoFunction
        CFI (cfiPicker1411) Picker
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x8
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        ; Setup parameters for call to function cJSON_strdup
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_strdup?relay
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        RET
        CFI EndBlock cfiCond1409
        CFI EndBlock cfiCond1410
        CFI EndBlock cfiPicker1411
// 2512 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2513 CJSON_PUBLIC(cJSON *) cJSON_CreateArray(void)
cJSON_CreateArray:
        CFI Block cfiBlock1412 Using cfiCommon0
        CFI Function cJSON_CreateArray
        CODE
// 2514 {
        FUNCALL cJSON_CreateArray, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2515     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2516     if(item)
??CrossCallReturnLabel_564:
        JZ      ??CrossCallReturnLabel_552
// 2517     {
// 2518         item->type=cJSON_Array;
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine98 & 0xFFFF
// 2519     }
// 2520 
// 2521     return item;
??CrossCallReturnLabel_552:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1412
// 2522 }
// 2523 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2524 CJSON_PUBLIC(cJSON *) cJSON_CreateObject(void)
cJSON_CreateObject:
        CFI Block cfiBlock1413 Using cfiCommon0
        CFI Function cJSON_CreateObject
        CODE
// 2525 {
        FUNCALL cJSON_CreateObject, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2526     cJSON *item = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        LCALL   ??Subroutine214_0 & 0xFFFF
// 2527     if (item)
??CrossCallReturnLabel_565:
        JZ      ??CrossCallReturnLabel_550
// 2528     {
// 2529         item->type = cJSON_Object;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x40
        LCALL   ??Subroutine212_0 & 0xFFFF
// 2530     }
// 2531 
// 2532     return item;
??CrossCallReturnLabel_550:
        LJMP    ??Subroutine160_0 & 0xFFFF
        CFI EndBlock cfiBlock1413
// 2533 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
        CFI Block cfiCond1414 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_556
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1415 Using cfiCommon0
        CFI (cfiCond1415) NoFunction
        CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_557
        CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1415) CFA_SP SP+0
        CFI (cfiCond1415) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1416 Using cfiCommon0
        CFI (cfiCond1416) NoFunction
        CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_558
        CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1416) CFA_SP SP+0
        CFI (cfiCond1416) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1417 Using cfiCommon0
        CFI (cfiCond1417) NoFunction
        CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_559
        CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1417) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1417) CFA_SP SP+0
        CFI (cfiCond1417) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1418 Using cfiCommon1
        CFI (cfiPicker1418) NoFunction
        CFI (cfiPicker1418) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        CFI EndBlock cfiCond1414
        CFI EndBlock cfiCond1415
        CFI EndBlock cfiCond1416
        CFI EndBlock cfiCond1417
        CFI EndBlock cfiPicker1418
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        ; Setup parameters for call to function cJSON_New_Item
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine214_0:
        CFI Block cfiCond1419 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_560
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1420 Using cfiCommon0
        CFI (cfiCond1420) NoFunction
        CFI (cfiCond1420) Conditional ??CrossCallReturnLabel_561
        CFI (cfiCond1420) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1420) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1420) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1420) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1420) CFA_SP SP+0
        CFI (cfiCond1420) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1421 Using cfiCommon0
        CFI (cfiCond1421) NoFunction
        CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_562
        CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1421) CFA_SP SP+0
        CFI (cfiCond1421) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1422 Using cfiCommon0
        CFI (cfiCond1422) NoFunction
        CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_563
        CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1422) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1422) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1422) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1422) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1422) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1422) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1422) CFA_SP SP+0
        CFI (cfiCond1422) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1423 Using cfiCommon0
        CFI (cfiCond1423) NoFunction
        CFI (cfiCond1423) Conditional ??CrossCallReturnLabel_564
        CFI (cfiCond1423) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1423) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1423) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1423) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1423) CFA_SP SP+0
        CFI (cfiCond1423) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1424 Using cfiCommon0
        CFI (cfiCond1424) NoFunction
        CFI (cfiCond1424) Conditional ??CrossCallReturnLabel_565
        CFI (cfiCond1424) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1424) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1424) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1424) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1424) CFA_SP SP+0
        CFI (cfiCond1424) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1425 Using cfiCommon0
        CFI (cfiCond1425) NoFunction
        CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_556
        CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1425) CFA_SP SP+0
        CFI (cfiCond1425) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1426 Using cfiCommon0
        CFI (cfiCond1426) NoFunction
        CFI (cfiCond1426) Conditional ??CrossCallReturnLabel_557
        CFI (cfiCond1426) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1426) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1426) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1426) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1426) CFA_SP SP+0
        CFI (cfiCond1426) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1427 Using cfiCommon0
        CFI (cfiCond1427) NoFunction
        CFI (cfiCond1427) Conditional ??CrossCallReturnLabel_558
        CFI (cfiCond1427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1427) CFA_SP SP+0
        CFI (cfiCond1427) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1428 Using cfiCommon0
        CFI (cfiCond1428) NoFunction
        CFI (cfiCond1428) Conditional ??CrossCallReturnLabel_559
        CFI (cfiCond1428) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1428) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1428) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1428) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1428) CFA_SP SP+0
        CFI (cfiCond1428) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiPicker1429 Using cfiCommon1
        CFI (cfiPicker1429) NoFunction
        CFI (cfiPicker1429) Picker
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        LCALL   ??cJSON_New_Item?relay
        MOV     A,R2
        ORL     A,R3
        RET
        CFI EndBlock cfiCond1419
        CFI EndBlock cfiCond1420
        CFI EndBlock cfiCond1421
        CFI EndBlock cfiCond1422
        CFI EndBlock cfiCond1423
        CFI EndBlock cfiCond1424
        CFI EndBlock cfiCond1425
        CFI EndBlock cfiCond1426
        CFI EndBlock cfiCond1427
        CFI EndBlock cfiCond1428
        CFI EndBlock cfiPicker1429
// 2534 
// 2535 /* Create Arrays: */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2536 CJSON_PUBLIC(cJSON *) cJSON_CreateIntArray(const int *numbers, int count)
cJSON_CreateIntArray:
        CFI Block cfiBlock1430 Using cfiCommon0
        CFI Function cJSON_CreateIntArray
        CODE
// 2537 {
        FUNCALL cJSON_CreateIntArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateIntArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateIntArray, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateIntArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
// 2538     size_t i = 0;
// 2539     cJSON *n = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 2540     cJSON *p = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2541     cJSON *a = NULL;
// 2542 
// 2543     if ((count < 0) || (numbers == NULL))
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_497:
        JC      ??cJSON_CreateIntArray_0
        MOV     A,R2
        ORL     A,?V0 + 13
        JNZ     ??cJSON_CreateIntArray_1
// 2544     {
// 2545         return NULL;
??cJSON_CreateIntArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateIntArray_2
// 2546     }
// 2547 
// 2548     a = cJSON_CreateArray();
??cJSON_CreateIntArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine124 & 0xFFFF
// 2549 
// 2550     for(i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_193:
        JZ      ??CrossCallReturnLabel_30
        SJMP    ??CrossCallReturnLabel_566
// 2551     {
// 2552         n = cJSON_CreateNumber(numbers[i]);
// 2553         if (!n)
// 2554         {
// 2555             cJSON_Delete(a);
// 2556             return NULL;
// 2557         }
// 2558         if(!i)
// 2559         {
// 2560             a->child = n;
// 2561         }
// 2562         else
// 2563         {
// 2564             suffix_object(p, n);
??cJSON_CreateIntArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??suffix_object?relay
// 2565         }
// 2566         p = n;
??cJSON_CreateIntArray_4:
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_566:
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_181:
        JNC     ??cJSON_CreateIntArray_5
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,?V0 + 1
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 12
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V0 + 13
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 9,A
        RLC     A
        SUBB    A,0xE0 /* A   */
        MOV     ?V0 + 10,A
        MOV     ?V0 + 11,A
        MOV     R0,#?V0 + 8
        LCALL   ?L_TO_FLT
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        MOV     R4,?V0 + 10
        MOV     R5,?V0 + 11
        LCALL   ??cJSON_CreateNumber?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??cJSON_CreateIntArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateIntArray_0
??cJSON_CreateIntArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateIntArray_3
        LCALL   ?Subroutine104 & 0xFFFF
// 2567     }
??CrossCallReturnLabel_579:
        SJMP    ??cJSON_CreateIntArray_4
??cJSON_CreateIntArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_475:
        JZ      ??CrossCallReturnLabel_30
// 2568 
// 2569     if (a && a->child) {
// 2570         a->child->prev = n;
        LCALL   ?Subroutine27 & 0xFFFF
// 2571     }
// 2572 
// 2573     return a;
??CrossCallReturnLabel_30:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateIntArray_2:
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1430
// 2574 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
        CFI Block cfiCond1431 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_566
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1432 Using cfiCommon0
        CFI (cfiCond1432) NoFunction
        CFI (cfiCond1432) Conditional ??CrossCallReturnLabel_567
        CFI (cfiCond1432) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1432) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1432) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1432) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1432) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1432) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1432) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1432) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1432) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1432) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1432) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1432) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1432) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1432) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1432) CFA_SP SP+0
        CFI (cfiCond1432) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1433 Using cfiCommon1
        CFI (cfiPicker1433) NoFunction
        CFI (cfiPicker1433) Picker
        MOV     ?V0 + 4,?V0 + 2
        MOV     ?V0 + 5,?V0 + 3
        CFI EndBlock cfiCond1431
        CFI EndBlock cfiCond1432
        CFI EndBlock cfiPicker1433
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine215_0:
        CFI Block cfiCond1434 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_568
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1435 Using cfiCommon0
        CFI (cfiCond1435) NoFunction
        CFI (cfiCond1435) Conditional ??CrossCallReturnLabel_569
        CFI (cfiCond1435) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1435) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1435) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1435) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1435) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1435) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1435) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1435) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1435) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1435) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1435) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1435) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1435) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1435) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1435) CFA_SP SP+0
        CFI (cfiCond1435) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1436 Using cfiCommon0
        CFI (cfiCond1436) NoFunction
        CFI (cfiCond1436) Conditional ??CrossCallReturnLabel_566
        CFI (cfiCond1436) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1436) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1436) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1436) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1436) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1436) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1436) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1436) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1436) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1436) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1436) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1436) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1436) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1436) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1436) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1436) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1436) CFA_SP SP+0
        CFI (cfiCond1436) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1437 Using cfiCommon0
        CFI (cfiCond1437) NoFunction
        CFI (cfiCond1437) Conditional ??CrossCallReturnLabel_567
        CFI (cfiCond1437) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1437) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1437) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1437) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1437) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1437) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1437) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1437) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1437) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1437) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1437) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1437) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1437) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1437) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1437) CFA_SP SP+0
        CFI (cfiCond1437) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1438 Using cfiCommon1
        CFI (cfiPicker1438) NoFunction
        CFI (cfiPicker1438) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x1
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        RET
        CFI EndBlock cfiCond1434
        CFI EndBlock cfiCond1435
        CFI EndBlock cfiCond1436
        CFI EndBlock cfiCond1437
        CFI EndBlock cfiPicker1438
// 2575 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2576 CJSON_PUBLIC(cJSON *) cJSON_CreateFloatArray(const float *numbers, int count)
cJSON_CreateFloatArray:
        CFI Block cfiBlock1439 Using cfiCommon0
        CFI Function cJSON_CreateFloatArray
        CODE
// 2577 {
        FUNCALL cJSON_CreateFloatArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateFloatArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateFloatArray, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateFloatArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        LCALL   ?Subroutine108 & 0xFFFF
// 2578     size_t i = 0;
// 2579     cJSON *n = NULL;
// 2580     cJSON *p = NULL;
// 2581     cJSON *a = NULL;
// 2582 
// 2583     if ((count < 0) || (numbers == NULL))
??CrossCallReturnLabel_488:
        JC      ??cJSON_CreateFloatArray_0
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??cJSON_CreateFloatArray_1
// 2584     {
// 2585         return NULL;
??cJSON_CreateFloatArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateFloatArray_2
// 2586     }
// 2587 
// 2588     a = cJSON_CreateArray();
??cJSON_CreateFloatArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine124 & 0xFFFF
// 2589 
// 2590     for(i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_194:
        JZ      ??CrossCallReturnLabel_59
        SJMP    ??CrossCallReturnLabel_568
// 2591     {
// 2592         n = cJSON_CreateNumber((double)numbers[i]);
// 2593         if(!n)
// 2594         {
// 2595             cJSON_Delete(a);
// 2596             return NULL;
// 2597         }
// 2598         if(!i)
// 2599         {
// 2600             a->child = n;
// 2601         }
// 2602         else
// 2603         {
// 2604             suffix_object(p, n);
??cJSON_CreateFloatArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??suffix_object?relay
// 2605         }
// 2606         p = n;
??cJSON_CreateFloatArray_4:
        MOV     ?V0 + 2,?V0 + 4
        MOV     ?V0 + 3,?V0 + 5
        LCALL   ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_568:
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_182:
        JNC     ??cJSON_CreateFloatArray_5
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     A,#0x2
        MOV     R0,#?V0 + 4
        LCALL   ?S_SHL
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_197:
        JNZ     ??cJSON_CreateFloatArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateFloatArray_0
??cJSON_CreateFloatArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateFloatArray_3
        LCALL   ?Subroutine104 & 0xFFFF
// 2607     }
??CrossCallReturnLabel_580:
        SJMP    ??cJSON_CreateFloatArray_4
??cJSON_CreateFloatArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_476:
        JZ      ??CrossCallReturnLabel_59
// 2608 
// 2609     if (a && a->child) {
// 2610         a->child->prev = n;
        LCALL   ?Subroutine42 & 0xFFFF
// 2611     }
// 2612 
// 2613     return a;
??CrossCallReturnLabel_59:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateFloatArray_2:
        SJMP    ?Subroutine5
        CFI EndBlock cfiBlock1439
// 2614 }
// 2615 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2616 CJSON_PUBLIC(cJSON *) cJSON_CreateDoubleArray(const double *numbers, int count)
cJSON_CreateDoubleArray:
        CFI Block cfiBlock1440 Using cfiCommon0
        CFI Function cJSON_CreateDoubleArray
        CODE
// 2617 {
        FUNCALL cJSON_CreateDoubleArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateDoubleArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateDoubleArray, cJSON_CreateNumber
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateDoubleArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        LCALL   ?Subroutine108 & 0xFFFF
// 2618     size_t i = 0;
// 2619     cJSON *n = NULL;
// 2620     cJSON *p = NULL;
// 2621     cJSON *a = NULL;
// 2622 
// 2623     if ((count < 0) || (numbers == NULL))
??CrossCallReturnLabel_489:
        JC      ??cJSON_CreateDoubleArray_0
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??cJSON_CreateDoubleArray_1
// 2624     {
// 2625         return NULL;
??cJSON_CreateDoubleArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateDoubleArray_2
// 2626     }
// 2627 
// 2628     a = cJSON_CreateArray();
??cJSON_CreateDoubleArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine124 & 0xFFFF
// 2629 
// 2630     for(i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_195:
        JZ      ??CrossCallReturnLabel_60
        SJMP    ??CrossCallReturnLabel_569
// 2631     {
// 2632         n = cJSON_CreateNumber(numbers[i]);
// 2633         if(!n)
// 2634         {
// 2635             cJSON_Delete(a);
// 2636             return NULL;
// 2637         }
// 2638         if(!i)
// 2639         {
// 2640             a->child = n;
// 2641         }
// 2642         else
// 2643         {
// 2644             suffix_object(p, n);
??cJSON_CreateDoubleArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??suffix_object?relay
// 2645         }
// 2646         p = n;
??cJSON_CreateDoubleArray_4:
        MOV     ?V0 + 2,?V0 + 4
        MOV     ?V0 + 3,?V0 + 5
        LCALL   ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_569:
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_183:
        JNC     ??cJSON_CreateDoubleArray_5
        ; Setup parameters for call to function cJSON_CreateNumber
        MOV     ?V0 + 4,?V0 + 0
        MOV     ?V0 + 5,?V0 + 1
        MOV     A,#0x2
        MOV     R0,#?V0 + 4
        LCALL   ?S_SHL
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_186:
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_198:
        JNZ     ??cJSON_CreateDoubleArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateDoubleArray_0
??cJSON_CreateDoubleArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateDoubleArray_3
        LCALL   ?Subroutine104 & 0xFFFF
// 2647     }
??CrossCallReturnLabel_581:
        SJMP    ??cJSON_CreateDoubleArray_4
??cJSON_CreateDoubleArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_477:
        JZ      ??CrossCallReturnLabel_60
// 2648 
// 2649     if (a && a->child) {
// 2650         a->child->prev = n;
        LCALL   ?Subroutine42 & 0xFFFF
// 2651     }
// 2652 
// 2653     return a;
??CrossCallReturnLabel_60:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        CFI EndBlock cfiBlock1440
??cJSON_CreateDoubleArray_2:
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 2654 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
        CFI Block cfiBlock1441 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1441

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
        CFI Block cfiCond1442 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_197
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1443 Using cfiCommon0
        CFI (cfiCond1443) NoFunction
        CFI (cfiCond1443) Conditional ??CrossCallReturnLabel_198
        CFI (cfiCond1443) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1443) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1443) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1443) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1443) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1443) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1443) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1443) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1443) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1443) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1443) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1443) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1443) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1443) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1443) CFA_SP SP+0
        CFI (cfiCond1443) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1444 Using cfiCommon1
        CFI (cfiPicker1444) NoFunction
        CFI (cfiPicker1444) Picker
        LCALL   ??cJSON_CreateNumber?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,R2
        ORL     A,?V0 + 5
        RET
        CFI EndBlock cfiCond1442
        CFI EndBlock cfiCond1443
        CFI EndBlock cfiPicker1444

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
        CFI Block cfiCond1445 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_193
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1446 Using cfiCommon0
        CFI (cfiCond1446) NoFunction
        CFI (cfiCond1446) Conditional ??CrossCallReturnLabel_194
        CFI (cfiCond1446) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1446) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1446) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1446) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1446) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1446) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1446) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1446) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1446) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1446) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1446) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1446) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1446) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1446) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1446) CFA_SP SP+0
        CFI (cfiCond1446) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1447 Using cfiCommon0
        CFI (cfiCond1447) NoFunction
        CFI (cfiCond1447) Conditional ??CrossCallReturnLabel_195
        CFI (cfiCond1447) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1447) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1447) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1447) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1447) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1447) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1447) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1447) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1447) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1447) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1447) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1447) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1447) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1447) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1447) CFA_SP SP+0
        CFI (cfiCond1447) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1448 Using cfiCommon0
        CFI (cfiCond1448) NoFunction
        CFI (cfiCond1448) Conditional ??CrossCallReturnLabel_196
        CFI (cfiCond1448) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1448) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1448) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1448) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1448) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1448) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1448) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1448) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1448) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1448) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1448) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1448) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1448) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1448) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1448) CFA_SP SP+0
        CFI (cfiCond1448) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1449 Using cfiCommon1
        CFI (cfiPicker1449) NoFunction
        CFI (cfiPicker1449) Picker
        LCALL   ??cJSON_CreateArray?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
        MOV     A,R6
        ORL     A,R7
        RET
        CFI EndBlock cfiCond1445
        CFI EndBlock cfiCond1446
        CFI EndBlock cfiCond1447
        CFI EndBlock cfiCond1448
        CFI EndBlock cfiPicker1449

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
        CFI Block cfiCond1450 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_185
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1451 Using cfiCommon0
        CFI (cfiCond1451) NoFunction
        CFI (cfiCond1451) Conditional ??CrossCallReturnLabel_186
        CFI (cfiCond1451) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1451) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1451) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1451) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1451) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1451) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1451) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1451) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1451) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1451) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1451) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1451) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1451) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1451) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1451) CFA_SP SP+0
        CFI (cfiCond1451) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1452 Using cfiCommon1
        CFI (cfiPicker1452) NoFunction
        CFI (cfiPicker1452) Picker
        MOV     A,?V0 + 8
        ADD     A,?V0 + 4
        MOV     DPL,A
        MOV     A,?V0 + 9
        ADDC    A,?V0 + 5
        MOV     DPH,A
        RET
        CFI EndBlock cfiCond1450
        CFI EndBlock cfiCond1451
        CFI EndBlock cfiPicker1452

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
        CFI Block cfiCond1453 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_181
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1454 Using cfiCommon0
        CFI (cfiCond1454) NoFunction
        CFI (cfiCond1454) Conditional ??CrossCallReturnLabel_182
        CFI (cfiCond1454) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1454) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1454) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1454) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1454) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1454) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1454) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1454) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1454) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1454) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1454) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1454) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1454) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1454) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1454) CFA_SP SP+0
        CFI (cfiCond1454) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1455 Using cfiCommon0
        CFI (cfiCond1455) NoFunction
        CFI (cfiCond1455) Conditional ??CrossCallReturnLabel_183
        CFI (cfiCond1455) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1455) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1455) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1455) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1455) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1455) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1455) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1455) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1455) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1455) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1455) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1455) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1455) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1455) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1455) CFA_SP SP+0
        CFI (cfiCond1455) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1456 Using cfiCommon0
        CFI (cfiCond1456) NoFunction
        CFI (cfiCond1456) Conditional ??CrossCallReturnLabel_184
        CFI (cfiCond1456) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1456) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1456) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1456) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1456) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1456) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1456) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1456) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1456) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1456) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1456) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1456) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1456) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1456) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1456) CFA_SP SP+0
        CFI (cfiCond1456) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1457 Using cfiCommon1
        CFI (cfiPicker1457) NoFunction
        CFI (cfiPicker1457) Picker
        CLR     C
        MOV     A,?V0 + 0
        SUBB    A,?V0 + 6
        MOV     A,?V0 + 1
        SUBB    A,?V0 + 7
        RET
        CFI EndBlock cfiCond1453
        CFI EndBlock cfiCond1454
        CFI EndBlock cfiCond1455
        CFI EndBlock cfiCond1456
        CFI EndBlock cfiPicker1457

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
        CFI Block cfiCond1458 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_59
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1459 Using cfiCommon0
        CFI (cfiCond1459) NoFunction
        CFI (cfiCond1459) Conditional ??CrossCallReturnLabel_60
        CFI (cfiCond1459) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1459) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1459) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1459) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1459) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1459) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1459) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1459) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1459) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1459) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1459) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1459) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1459) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1459) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1459) CFA_SP SP+0
        CFI (cfiCond1459) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1460 Using cfiCommon1
        CFI (cfiPicker1460) NoFunction
        CFI (cfiPicker1460) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_589:
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1458
        CFI EndBlock cfiCond1459
        CFI EndBlock cfiPicker1460

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
        CFI Block cfiCond1461 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_59
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1462 Using cfiCommon0
        CFI (cfiCond1462) NoFunction
        CFI (cfiCond1462) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_60
        CFI (cfiCond1462) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1462) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1462) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1462) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1462) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1462) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1462) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1462) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1462) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1462) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1462) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1462) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1462) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1462) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1462) CFA_SP SP+0
        CFI (cfiCond1462) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1463 Using cfiCommon0
        CFI (cfiCond1463) NoFunction
        CFI (cfiCond1463) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_30
        CFI (cfiCond1463) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1463) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1463) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1463) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1463) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1463) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1463) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1463) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1463) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1463) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1463) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1463) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1463) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1463) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1463) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1463) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1463) CFA_SP SP+0
        CFI (cfiCond1463) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1464 Using cfiCommon0
        CFI (cfiCond1464) NoFunction
        CFI (cfiCond1464) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_31
        CFI (cfiCond1464) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1464) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1464) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1464) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1464) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1464) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1464) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1464) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1464) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1464) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1464) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1464) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1464) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1464) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1464) CFA_SP SP+0
        CFI (cfiCond1464) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1465 Using cfiCommon0
        CFI (cfiCond1465) NoFunction
        CFI (cfiCond1465) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_32
        CFI (cfiCond1465) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1465) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1465) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1465) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1465) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1465) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1465) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1465) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1465) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1465) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1465) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1465) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1465) CFA_SP SP+0
        CFI (cfiCond1465) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1466 Using cfiCommon1
        CFI (cfiPicker1466) NoFunction
        CFI (cfiPicker1466) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1461
        CFI EndBlock cfiCond1462
        CFI EndBlock cfiCond1463
        CFI EndBlock cfiCond1464
        CFI EndBlock cfiCond1465
        CFI EndBlock cfiPicker1466
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine216_0:
        CFI Block cfiCond1467 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_585
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1468 Using cfiCommon0
        CFI (cfiCond1468) NoFunction
        CFI (cfiCond1468) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_586
        CFI (cfiCond1468) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1468) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1468) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1468) CFA_SP SP+0
        CFI (cfiCond1468) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1469 Using cfiCommon0
        CFI (cfiCond1469) NoFunction
        CFI (cfiCond1469) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_584
        CFI (cfiCond1469) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1469) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1469) CFA_SP SP+-5
        CFI (cfiCond1469) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1470 Using cfiCommon0
        CFI (cfiCond1470) NoFunction
        CFI (cfiCond1470) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_59
        CFI (cfiCond1470) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1470) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1470) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1470) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1470) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1470) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1470) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1470) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1470) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1470) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1470) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1470) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1470) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1470) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1470) CFA_SP SP+0
        CFI (cfiCond1470) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1471 Using cfiCommon0
        CFI (cfiCond1471) NoFunction
        CFI (cfiCond1471) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_60
        CFI (cfiCond1471) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1471) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1471) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1471) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1471) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1471) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1471) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1471) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1471) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1471) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1471) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1471) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1471) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1471) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1471) CFA_SP SP+0
        CFI (cfiCond1471) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1472 Using cfiCommon0
        CFI (cfiCond1472) NoFunction
        CFI (cfiCond1472) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_30
        CFI (cfiCond1472) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1472) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1472) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1472) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1472) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1472) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1472) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1472) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1472) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1472) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1472) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1472) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1472) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1472) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1472) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1472) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1472) CFA_SP SP+0
        CFI (cfiCond1472) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1473 Using cfiCommon0
        CFI (cfiCond1473) NoFunction
        CFI (cfiCond1473) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_31
        CFI (cfiCond1473) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1473) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1473) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1473) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1473) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1473) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1473) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1473) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1473) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1473) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1473) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1473) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1473) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1473) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1473) CFA_SP SP+0
        CFI (cfiCond1473) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1474 Using cfiCommon0
        CFI (cfiCond1474) NoFunction
        CFI (cfiCond1474) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_32
        CFI (cfiCond1474) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1474) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1474) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1474) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1474) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1474) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1474) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1474) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1474) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1474) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1474) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1474) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1474) CFA_SP SP+0
        CFI (cfiCond1474) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1475 Using cfiCommon1
        CFI (cfiPicker1475) NoFunction
        CFI (cfiPicker1475) Picker
        INC     DPTR
        CFI EndBlock cfiCond1467
        CFI EndBlock cfiCond1468
        CFI EndBlock cfiCond1469
        CFI EndBlock cfiCond1470
        CFI EndBlock cfiCond1471
        CFI EndBlock cfiCond1472
        CFI EndBlock cfiCond1473
        CFI EndBlock cfiCond1474
        CFI EndBlock cfiPicker1475
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine217_0:
        CFI Block cfiCond1476 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_105
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1477 Using cfiCommon0
        CFI (cfiCond1477) NoFunction
        CFI (cfiCond1477) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_106
        CFI (cfiCond1477) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1477) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1477) CFA_SP SP+-5
        CFI (cfiCond1477) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1478 Using cfiCommon0
        CFI (cfiCond1478) NoFunction
        CFI (cfiCond1478) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_585
        CFI (cfiCond1478) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1478) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1478) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1478) CFA_SP SP+0
        CFI (cfiCond1478) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1479 Using cfiCommon0
        CFI (cfiCond1479) NoFunction
        CFI (cfiCond1479) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_586
        CFI (cfiCond1479) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1479) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1479) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1479) CFA_SP SP+0
        CFI (cfiCond1479) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1480 Using cfiCommon0
        CFI (cfiCond1480) NoFunction
        CFI (cfiCond1480) Conditional ??CrossCallReturnLabel_590, ??CrossCallReturnLabel_584
        CFI (cfiCond1480) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1480) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1480) CFA_SP SP+-5
        CFI (cfiCond1480) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1481 Using cfiCommon0
        CFI (cfiCond1481) NoFunction
        CFI (cfiCond1481) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_59
        CFI (cfiCond1481) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1481) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1481) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1481) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1481) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1481) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1481) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1481) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1481) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1481) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1481) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1481) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1481) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1481) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1481) CFA_SP SP+0
        CFI (cfiCond1481) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1482 Using cfiCommon0
        CFI (cfiCond1482) NoFunction
        CFI (cfiCond1482) Conditional ??CrossCallReturnLabel_589, ??CrossCallReturnLabel_60
        CFI (cfiCond1482) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1482) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1482) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1482) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1482) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1482) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1482) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1482) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1482) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1482) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1482) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1482) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1482) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1482) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1482) CFA_SP SP+0
        CFI (cfiCond1482) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1483 Using cfiCommon0
        CFI (cfiCond1483) NoFunction
        CFI (cfiCond1483) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_30
        CFI (cfiCond1483) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1483) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1483) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1483) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1483) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1483) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1483) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1483) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1483) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1483) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1483) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1483) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1483) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1483) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1483) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1483) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1483) CFA_SP SP+0
        CFI (cfiCond1483) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1484 Using cfiCommon0
        CFI (cfiCond1484) NoFunction
        CFI (cfiCond1484) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_31
        CFI (cfiCond1484) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1484) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1484) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1484) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1484) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1484) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1484) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1484) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1484) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1484) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1484) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1484) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1484) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1484) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1484) CFA_SP SP+0
        CFI (cfiCond1484) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1485 Using cfiCommon0
        CFI (cfiCond1485) NoFunction
        CFI (cfiCond1485) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_32
        CFI (cfiCond1485) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1485) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1485) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1485) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1485) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1485) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1485) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1485) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1485) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1485) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1485) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1485) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1485) CFA_SP SP+0
        CFI (cfiCond1485) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1486 Using cfiCommon1
        CFI (cfiPicker1486) NoFunction
        CFI (cfiPicker1486) Picker
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_606:
        INC     DPTR
        RET
        CFI EndBlock cfiCond1476
        CFI EndBlock cfiCond1477
        CFI EndBlock cfiCond1478
        CFI EndBlock cfiCond1479
        CFI EndBlock cfiCond1480
        CFI EndBlock cfiCond1481
        CFI EndBlock cfiCond1482
        CFI EndBlock cfiCond1483
        CFI EndBlock cfiCond1484
        CFI EndBlock cfiCond1485
        CFI EndBlock cfiPicker1486
// 2655 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2656 CJSON_PUBLIC(cJSON *) cJSON_CreateStringArray(const char *const *strings, int count)
cJSON_CreateStringArray:
        CFI Block cfiBlock1487 Using cfiCommon0
        CFI Function cJSON_CreateStringArray
        CODE
// 2657 {
        FUNCALL cJSON_CreateStringArray, cJSON_CreateArray
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateStringArray, suffix_object
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateStringArray, cJSON_CreateString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_CreateStringArray, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
// 2658     size_t i = 0;
// 2659     cJSON *n = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 2660     cJSON *p = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2661     cJSON *a = NULL;
// 2662 
// 2663     if ((count < 0) || (strings == NULL))
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_498:
        JC      ??cJSON_CreateStringArray_0
        MOV     A,R2
        ORL     A,?V0 + 9
        JNZ     ??cJSON_CreateStringArray_1
// 2664     {
// 2665         return NULL;
??cJSON_CreateStringArray_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
        SJMP    ??cJSON_CreateStringArray_2
// 2666     }
// 2667 
// 2668     a = cJSON_CreateArray();
??cJSON_CreateStringArray_1:
        ; Setup parameters for call to function cJSON_CreateArray
        LCALL   ?Subroutine124 & 0xFFFF
// 2669 
// 2670     for (i = 0; a && (i < (size_t)count); i++)
??CrossCallReturnLabel_196:
        JZ      ??CrossCallReturnLabel_31
        SJMP    ??CrossCallReturnLabel_567
// 2671     {
// 2672         n = cJSON_CreateString(strings[i]);
// 2673         if(!n)
// 2674         {
// 2675             cJSON_Delete(a);
// 2676             return NULL;
// 2677         }
// 2678         if(!i)
// 2679         {
// 2680             a->child = n;
// 2681         }
// 2682         else
// 2683         {
// 2684             suffix_object(p,n);
??cJSON_CreateStringArray_3:
        ; Setup parameters for call to function suffix_object
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??suffix_object?relay
// 2685         }
// 2686         p = n;
??cJSON_CreateStringArray_4:
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_567:
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_184:
        JNC     ??cJSON_CreateStringArray_5
        ; Setup parameters for call to function cJSON_CreateString
        MOV     A,?V0 + 0
        CLR     C
        RLC     A
        MOV     R0,A
        MOV     A,?V0 + 1
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 8
        ADD     A,R0
        MOV     DPL,A
        MOV     A,?V0 + 9
        ADDC    A,R1
        MOV     DPH,A
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_70:
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     ??cJSON_CreateStringArray_6
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
        SJMP    ??cJSON_CreateStringArray_0
??cJSON_CreateStringArray_6:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_CreateStringArray_3
        LCALL   ?Subroutine104 & 0xFFFF
// 2687     }
??CrossCallReturnLabel_582:
        SJMP    ??cJSON_CreateStringArray_4
??cJSON_CreateStringArray_5:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_478:
        JZ      ??CrossCallReturnLabel_31
// 2688 
// 2689     if (a && a->child) {
// 2690         a->child->prev = n;
        LCALL   ?Subroutine27 & 0xFFFF
// 2691     }
// 2692     
// 2693     return a;
??CrossCallReturnLabel_31:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
??cJSON_CreateStringArray_2:
        LJMP    ?Subroutine5 & 0xFFFF
        CFI EndBlock cfiBlock1487
// 2694 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
        CFI Block cfiCond1488 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_69
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1489 Using cfiCommon0
        CFI (cfiCond1489) NoFunction
        CFI (cfiCond1489) Conditional ??CrossCallReturnLabel_70
        CFI (cfiCond1489) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1489) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1489) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1489) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1489) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1489) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1489) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1489) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1489) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1489) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1489) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1489) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1489) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1489) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1489) CFA_SP SP+0
        CFI (cfiCond1489) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiPicker1490 Using cfiCommon1
        CFI (cfiPicker1490) NoFunction
        CFI (cfiPicker1490) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_534:
        ; Setup parameters for call to function cJSON_CreateString
        LCALL   ??cJSON_CreateString?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        RET
        CFI EndBlock cfiCond1488
        CFI EndBlock cfiCond1489
        CFI EndBlock cfiPicker1490

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
        CFI Block cfiCond1491 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_30
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1492 Using cfiCommon0
        CFI (cfiCond1492) NoFunction
        CFI (cfiCond1492) Conditional ??CrossCallReturnLabel_31
        CFI (cfiCond1492) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1492) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1492) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1492) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1492) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1492) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1492) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1492) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1492) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1492) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1492) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1492) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1492) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1492) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1492) CFA_SP SP+0
        CFI (cfiCond1492) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1493 Using cfiCommon0
        CFI (cfiCond1493) NoFunction
        CFI (cfiCond1493) Conditional ??CrossCallReturnLabel_32
        CFI (cfiCond1493) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1493) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1493) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1493) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1493) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1493) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1493) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1493) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1493) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1493) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1493) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1493) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1493) CFA_SP SP+0
        CFI (cfiCond1493) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1494 Using cfiCommon1
        CFI (cfiPicker1494) NoFunction
        CFI (cfiPicker1494) Picker
        LCALL   ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_588:
        INC     DPTR
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1491
        CFI EndBlock cfiCond1492
        CFI EndBlock cfiCond1493
        CFI EndBlock cfiPicker1494
// 2695 
// 2696 /* Duplication */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2697 CJSON_PUBLIC(cJSON *) cJSON_Duplicate(const cJSON *item, cJSON_bool recurse)
cJSON_Duplicate:
        CFI Block cfiBlock1495 Using cfiCommon0
        CFI Function cJSON_Duplicate
        CODE
// 2698 {
        FUNCALL cJSON_Duplicate, cJSON_New_Item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_strdup
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_Duplicate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Duplicate, cJSON_Delete
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 8,R4
        MOV     ?V0 + 9,R5
// 2699     cJSON *newitem = NULL;
// 2700     cJSON *child = NULL;
// 2701     cJSON *next = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2702     cJSON *newchild = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 2703 
// 2704     /* Bail on bad ptr */
// 2705     if (!item)
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_Duplicate_0 & 0xFFFF
// 2706     {
// 2707         goto fail;
// 2708     }
// 2709     /* Create new item */
// 2710     newitem = cJSON_New_Item(&global_hooks);
        ; Setup parameters for call to function cJSON_New_Item
        MOV     R2,#global_hooks & 0xff
        MOV     R3,#(global_hooks >> 8) & 0xff
        LCALL   ??cJSON_New_Item?relay
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R6,?V0 + 6
        MOV     R7,?V0 + 7
// 2711     if (!newitem)
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??cJSON_Duplicate_0 & 0xFFFF
// 2712     {
// 2713         goto fail;
// 2714     }
// 2715     /* Copy over all vars */
// 2716     newitem->type = item->type & (~cJSON_IsReference);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xfe
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2717     newitem->valueint = item->valueint;
??CrossCallReturnLabel_435:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_62:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine192_0 & 0xFFFF
// 2718     newitem->valuedouble = item->valuedouble;
??CrossCallReturnLabel_436:
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_134:
        LCALL   ?XLOAD_R2345
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_136:
        LCALL   ?XSTORE_R2345
// 2719     if (item->valuestring)
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_483:
        JZ      ??cJSON_Duplicate_1
// 2720     {
// 2721         newitem->valuestring = (char*)cJSON_strdup((unsigned char*)item->valuestring, &global_hooks);
        MOV     A,R6
        ADD     A,#0x8
        MOV     ?V0 + 6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_101:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine219_0 & 0xFFFF
// 2722         if (!newitem->valuestring)
??CrossCallReturnLabel_576:
        MOV     DPL,?V0 + 6
        MOV     DPH,?V0 + 7
        LCALL   ??Subroutine200_0 & 0xFFFF
// 2723         {
// 2724             goto fail;
// 2725         }
// 2726     }
??CrossCallReturnLabel_467:
        JNZ     $+5
        LJMP    ??cJSON_Duplicate_2 & 0xFFFF
// 2727     if (item->string)
??cJSON_Duplicate_1:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_358:
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_468:
        JZ      ??cJSON_Duplicate_3
// 2728     {
// 2729         newitem->string = (item->type&cJSON_StringIsConst) ? item->string : (char*)cJSON_strdup((unsigned char*)item->string, &global_hooks);
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x2
        JNZ     ??cJSON_Duplicate_4
        ; Setup parameters for call to function cJSON_strdup
        MOV     R4,#global_hooks & 0xff
        MOV     R5,#(global_hooks >> 8) & 0xff
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_359:
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_102:
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
        MOV     R0,?V0 + 6
        MOV     R1,?V0 + 7
??cJSON_Duplicate_4:
        MOV     A,R6
        ADD     A,#0x10
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2730         if (!newitem->string)
??CrossCallReturnLabel_425:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ORL     A,R1
        JZ      ??cJSON_Duplicate_2
// 2731         {
// 2732             goto fail;
// 2733         }
// 2734     }
// 2735     /* If non-recursive, then we're done! */
// 2736     if (!recurse)
??cJSON_Duplicate_3:
        MOV     A,?V0 + 8
        ORL     A,?V0 + 9
        JNZ     ??cJSON_Duplicate_5
// 2737     {
// 2738         return newitem;
??cJSON_Duplicate_6:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        SJMP    ??cJSON_Duplicate_7
// 2739     }
// 2740     /* Walk the ->next chain for the child. */
// 2741     child = item->child;
??cJSON_Duplicate_5:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??cJSON_Duplicate_8
// 2742     while (child != NULL)
// 2743     {
// 2744         newchild = cJSON_Duplicate(child, true); /* Duplicate (with recurse) each item in the ->next chain */
// 2745         if (!newchild)
// 2746         {
// 2747             goto fail;
// 2748         }
// 2749         if (next != NULL)
// 2750         {
// 2751             /* If newitem->child already set, then crosswire ->prev and ->next and move on */
// 2752             next->next = newchild;
// 2753             newchild->prev = next;
// 2754             next = newchild;
// 2755         }
// 2756         else
// 2757         {
// 2758             /* Set newitem->child and move to it */
// 2759             newitem->child = newchild;
??cJSON_Duplicate_9:
        LCALL   ?Subroutine104 & 0xFFFF
// 2760             next = newchild;
??CrossCallReturnLabel_583:
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,A
// 2761         }
// 2762         child = child->next;
??cJSON_Duplicate_10:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
??cJSON_Duplicate_8:
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_88:
        JZ      ??cJSON_Duplicate_11
        ; Setup parameters for call to function cJSON_Duplicate
        MOV     R4,#0x1
        MOV     R5,#0x0
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Duplicate?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??cJSON_Duplicate_2
        MOV     A,?V0 + 4
        ORL     A,?V0 + 5
        JZ      ??cJSON_Duplicate_9
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_577:
        MOV     DPL,R2
        MOV     DPH,A
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        SJMP    ??cJSON_Duplicate_10
// 2763     }
??cJSON_Duplicate_11:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_479:
        JZ      ??cJSON_Duplicate_6
// 2764     if (newitem && newitem->child)
// 2765     {
// 2766         newitem->child->prev = newchild;
        LCALL   ?Subroutine27 & 0xFFFF
// 2767     }
??CrossCallReturnLabel_32:
        SJMP    ??cJSON_Duplicate_6
// 2768 
// 2769     return newitem;
// 2770 
// 2771 fail:
// 2772     if (newitem != NULL)
// 2773     {
// 2774         cJSON_Delete(newitem);
??cJSON_Duplicate_2:
        ; Setup parameters for call to function cJSON_Delete
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??cJSON_Delete?relay
// 2775     }
// 2776 
// 2777     return NULL;
??cJSON_Duplicate_0:
        MOV     R2,#0x0
        MOV     R3,#0x0
??cJSON_Duplicate_7:
        LJMP    ?Subroutine6 & 0xFFFF
        CFI EndBlock cfiBlock1495
// 2778 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
        CFI Block cfiCond1496 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_579
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1497 Using cfiCommon0
        CFI (cfiCond1497) NoFunction
        CFI (cfiCond1497) Conditional ??CrossCallReturnLabel_580
        CFI (cfiCond1497) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1497) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1497) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1497) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1497) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1497) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1497) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1497) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1497) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1497) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1497) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1497) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1497) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1497) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1497) CFA_SP SP+0
        CFI (cfiCond1497) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1498 Using cfiCommon0
        CFI (cfiCond1498) NoFunction
        CFI (cfiCond1498) Conditional ??CrossCallReturnLabel_581
        CFI (cfiCond1498) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1498) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1498) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1498) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1498) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1498) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1498) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1498) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1498) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1498) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1498) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1498) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1498) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1498) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1498) CFA_SP SP+0
        CFI (cfiCond1498) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1499 Using cfiCommon0
        CFI (cfiCond1499) NoFunction
        CFI (cfiCond1499) Conditional ??CrossCallReturnLabel_582
        CFI (cfiCond1499) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1499) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1499) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1499) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1499) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1499) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1499) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1499) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1499) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1499) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1499) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1499) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1499) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1499) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1499) CFA_SP SP+0
        CFI (cfiCond1499) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1500 Using cfiCommon0
        CFI (cfiCond1500) NoFunction
        CFI (cfiCond1500) Conditional ??CrossCallReturnLabel_583
        CFI (cfiCond1500) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1500) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1500) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1500) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1500) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1500) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1500) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1500) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1500) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1500) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1500) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1500) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1500) CFA_SP SP+0
        CFI (cfiCond1500) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1501 Using cfiCommon1
        CFI (cfiPicker1501) NoFunction
        CFI (cfiPicker1501) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1496
        CFI EndBlock cfiCond1497
        CFI EndBlock cfiCond1498
        CFI EndBlock cfiCond1499
        CFI EndBlock cfiCond1500
        CFI EndBlock cfiPicker1501
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine218_0:
        CFI Block cfiCond1502 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_578
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1503 Using cfiCommon0
        CFI (cfiCond1503) NoFunction
        CFI (cfiCond1503) Conditional ??CrossCallReturnLabel_579
        CFI (cfiCond1503) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1503) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1503) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1503) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1503) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1503) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1503) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1503) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1503) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1503) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1503) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1503) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1503) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1503) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1503) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1503) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1503) CFA_SP SP+0
        CFI (cfiCond1503) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1504 Using cfiCommon0
        CFI (cfiCond1504) NoFunction
        CFI (cfiCond1504) Conditional ??CrossCallReturnLabel_580
        CFI (cfiCond1504) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1504) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1504) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1504) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1504) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1504) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1504) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1504) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1504) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1504) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1504) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1504) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1504) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1504) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1504) CFA_SP SP+0
        CFI (cfiCond1504) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1505 Using cfiCommon0
        CFI (cfiCond1505) NoFunction
        CFI (cfiCond1505) Conditional ??CrossCallReturnLabel_581
        CFI (cfiCond1505) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1505) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1505) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1505) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1505) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1505) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1505) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1505) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1505) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1505) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1505) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1505) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1505) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1505) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1505) CFA_SP SP+0
        CFI (cfiCond1505) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1506 Using cfiCommon0
        CFI (cfiCond1506) NoFunction
        CFI (cfiCond1506) Conditional ??CrossCallReturnLabel_582
        CFI (cfiCond1506) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1506) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1506) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1506) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1506) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1506) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1506) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1506) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1506) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1506) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1506) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1506) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1506) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1506) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1506) CFA_SP SP+0
        CFI (cfiCond1506) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1507 Using cfiCommon0
        CFI (cfiCond1507) NoFunction
        CFI (cfiCond1507) Conditional ??CrossCallReturnLabel_583
        CFI (cfiCond1507) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1507) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1507) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1507) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1507) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1507) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1507) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1507) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1507) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1507) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1507) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1507) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1507) CFA_SP SP+0
        CFI (cfiCond1507) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1508 Using cfiCommon1
        CFI (cfiPicker1508) NoFunction
        CFI (cfiPicker1508) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1502
        CFI EndBlock cfiCond1503
        CFI EndBlock cfiCond1504
        CFI EndBlock cfiCond1505
        CFI EndBlock cfiCond1506
        CFI EndBlock cfiCond1507
        CFI EndBlock cfiPicker1508
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine219_0:
        CFI Block cfiCond1509 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_570
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1510 Using cfiCommon0
        CFI (cfiCond1510) NoFunction
        CFI (cfiCond1510) Conditional ??CrossCallReturnLabel_571
        CFI (cfiCond1510) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1510) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1510) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1510) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1510) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1510) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1510) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1510) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1510) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1510) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1510) CFA_SP SP+0
        CFI (cfiCond1510) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1511 Using cfiCommon0
        CFI (cfiCond1511) NoFunction
        CFI (cfiCond1511) Conditional ??CrossCallReturnLabel_572
        CFI (cfiCond1511) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1511) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1511) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1511) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1511) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1511) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1511) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1511) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1511) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1511) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1511) CFA_SP SP+0
        CFI (cfiCond1511) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1512 Using cfiCommon0
        CFI (cfiCond1512) NoFunction
        CFI (cfiCond1512) Conditional ??CrossCallReturnLabel_573
        CFI (cfiCond1512) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1512) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1512) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1512) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1512) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1512) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1512) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1512) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1512) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1512) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1512) CFA_SP SP+0
        CFI (cfiCond1512) CFA_XSP16 add(XSP16, 34)
        CFI Block cfiCond1513 Using cfiCommon0
        CFI (cfiCond1513) NoFunction
        CFI (cfiCond1513) Conditional ??CrossCallReturnLabel_574
        CFI (cfiCond1513) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1513) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1513) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1513) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1513) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1513) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1513) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1513) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1513) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1513) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1513) CFA_SP SP+0
        CFI (cfiCond1513) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1514 Using cfiCommon0
        CFI (cfiCond1514) NoFunction
        CFI (cfiCond1514) Conditional ??CrossCallReturnLabel_575
        CFI (cfiCond1514) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1514) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1514) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1514) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1514) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1514) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1514) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1514) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1514) CFA_SP SP+0
        CFI (cfiCond1514) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1515 Using cfiCommon0
        CFI (cfiCond1515) NoFunction
        CFI (cfiCond1515) Conditional ??CrossCallReturnLabel_576
        CFI (cfiCond1515) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1515) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1515) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1515) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1515) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1515) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1515) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1515) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1515) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1515) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1515) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1515) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1515) CFA_SP SP+0
        CFI (cfiCond1515) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1516 Using cfiCommon0
        CFI (cfiCond1516) NoFunction
        CFI (cfiCond1516) Conditional ??CrossCallReturnLabel_577
        CFI (cfiCond1516) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1516) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1516) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1516) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1516) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1516) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1516) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1516) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1516) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1516) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1516) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1516) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1516) CFA_SP SP+0
        CFI (cfiCond1516) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1517 Using cfiCommon0
        CFI (cfiCond1517) NoFunction
        CFI (cfiCond1517) Conditional ??CrossCallReturnLabel_578
        CFI (cfiCond1517) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1517) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1517) CFA_SP SP+-5
        CFI Block cfiCond1518 Using cfiCommon0
        CFI (cfiCond1518) NoFunction
        CFI (cfiCond1518) Conditional ??CrossCallReturnLabel_579
        CFI (cfiCond1518) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
        CFI (cfiCond1518) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI (cfiCond1518) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1518) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1518) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1518) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1518) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1518) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1518) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1518) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1518) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1518) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1518) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1518) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1518) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1518) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1518) CFA_SP SP+0
        CFI (cfiCond1518) CFA_XSP16 add(XSP16, 22)
        CFI Block cfiCond1519 Using cfiCommon0
        CFI (cfiCond1519) NoFunction
        CFI (cfiCond1519) Conditional ??CrossCallReturnLabel_580
        CFI (cfiCond1519) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1519) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1519) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1519) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1519) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1519) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1519) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1519) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1519) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1519) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1519) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1519) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1519) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1519) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1519) CFA_SP SP+0
        CFI (cfiCond1519) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1520 Using cfiCommon0
        CFI (cfiCond1520) NoFunction
        CFI (cfiCond1520) Conditional ??CrossCallReturnLabel_581
        CFI (cfiCond1520) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1520) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1520) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1520) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1520) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1520) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1520) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1520) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1520) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1520) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1520) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1520) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1520) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1520) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1520) CFA_SP SP+0
        CFI (cfiCond1520) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1521 Using cfiCommon0
        CFI (cfiCond1521) NoFunction
        CFI (cfiCond1521) Conditional ??CrossCallReturnLabel_582
        CFI (cfiCond1521) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1521) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1521) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1521) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1521) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1521) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1521) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1521) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1521) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1521) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1521) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1521) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1521) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1521) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1521) CFA_SP SP+0
        CFI (cfiCond1521) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1522 Using cfiCommon0
        CFI (cfiCond1522) NoFunction
        CFI (cfiCond1522) Conditional ??CrossCallReturnLabel_583
        CFI (cfiCond1522) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1522) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1522) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1522) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1522) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1522) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1522) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1522) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1522) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1522) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1522) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1522) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1522) CFA_SP SP+0
        CFI (cfiCond1522) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1523 Using cfiCommon1
        CFI (cfiPicker1523) NoFunction
        CFI (cfiPicker1523) Picker
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1509
        CFI EndBlock cfiCond1510
        CFI EndBlock cfiCond1511
        CFI EndBlock cfiCond1512
        CFI EndBlock cfiCond1513
        CFI EndBlock cfiCond1514
        CFI EndBlock cfiCond1515
        CFI EndBlock cfiCond1516
        CFI EndBlock cfiCond1517
        CFI EndBlock cfiCond1518
        CFI EndBlock cfiCond1519
        CFI EndBlock cfiCond1520
        CFI EndBlock cfiCond1521
        CFI EndBlock cfiCond1522
        CFI EndBlock cfiPicker1523

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
        CFI Block cfiCond1524 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_135
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1525 Using cfiCommon0
        CFI (cfiCond1525) NoFunction
        CFI (cfiCond1525) Conditional ??CrossCallReturnLabel_136
        CFI (cfiCond1525) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1525) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1525) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1525) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1525) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1525) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1525) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1525) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1525) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1525) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1525) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1525) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1525) CFA_SP SP+0
        CFI (cfiCond1525) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1526 Using cfiCommon0
        CFI (cfiCond1526) NoFunction
        CFI (cfiCond1526) Conditional ??CrossCallReturnLabel_137
        CFI (cfiCond1526) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1526) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1526) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1526) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1526) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1526) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1526) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1526) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1526) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1526) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1526) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1526) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1526) CFA_SP SP+0
        CFI (cfiCond1526) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1527 Using cfiCommon1
        CFI (cfiPicker1527) NoFunction
        CFI (cfiPicker1527) Picker
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine176_0 & 0xFFFF
??CrossCallReturnLabel_645:
        RET
        CFI EndBlock cfiCond1524
        CFI EndBlock cfiCond1525
        CFI EndBlock cfiCond1526
        CFI EndBlock cfiPicker1527

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
        CFI Block cfiCond1528 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_101
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1529 Using cfiCommon0
        CFI (cfiCond1529) NoFunction
        CFI (cfiCond1529) Conditional ??CrossCallReturnLabel_102
        CFI (cfiCond1529) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1529) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1529) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1529) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1529) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1529) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1529) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1529) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1529) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1529) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1529) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1529) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1529) CFA_SP SP+0
        CFI (cfiCond1529) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1530 Using cfiCommon1
        CFI (cfiPicker1530) NoFunction
        CFI (cfiPicker1530) Picker
        LCALL   ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_537:
        LCALL   ??cJSON_strdup?relay
        RET
        CFI EndBlock cfiCond1528
        CFI EndBlock cfiCond1529
        CFI EndBlock cfiPicker1530

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
        CFI Block cfiCond1531 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_61
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1532 Using cfiCommon0
        CFI (cfiCond1532) NoFunction
        CFI (cfiCond1532) Conditional ??CrossCallReturnLabel_62
        CFI (cfiCond1532) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1532) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1532) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1532) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1532) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1532) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1532) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1532) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1532) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1532) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1532) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1532) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1532) CFA_SP SP+0
        CFI (cfiCond1532) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1533 Using cfiCommon1
        CFI (cfiPicker1533) NoFunction
        CFI (cfiPicker1533) Picker
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_632:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond1531
        CFI EndBlock cfiCond1532
        CFI EndBlock cfiPicker1533
// 2779 
// 2780 static void skip_oneline_comment(char **input)
// 2781 {
// 2782     *input += static_strlen("//");
// 2783 
// 2784     for (; (*input)[0] != '\0'; ++(*input))
// 2785     {
// 2786         if ((*input)[0] == '\n') {
// 2787             *input += static_strlen("\n");
// 2788             return;
// 2789         }
// 2790     }
// 2791 }
// 2792 
// 2793 static void skip_multiline_comment(char **input)
// 2794 {
// 2795     *input += static_strlen("/*");
// 2796 
// 2797     for (; (*input)[0] != '\0'; ++(*input))
// 2798     {
// 2799         if (((*input)[0] == '*') && ((*input)[1] == '/'))
// 2800         {
// 2801             *input += static_strlen("*/");
// 2802             return;
// 2803         }
// 2804     }
// 2805 }
// 2806 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2807 static void minify_string(char **input, char **output) {
minify_string:
        CFI Block cfiBlock1534 Using cfiCommon0
        CFI Function minify_string
        CODE
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2808     (*output)[0] = (*input)[0];
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_597:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_262:
        POP     A
        CFI CFA_SP SP+0
        SJMP    ??minify_string_0
// 2809     *input += static_strlen("\"");
// 2810     *output += static_strlen("\"");
// 2811 
// 2812 
// 2813     for (; (*input)[0] != '\0'; (void)++(*input), ++(*output)) {
// 2814         (*output)[0] = (*input)[0];
// 2815 
// 2816         if ((*input)[0] == '\"') {
// 2817             (*output)[0] = '\"';
// 2818             *input += static_strlen("\"");
// 2819             *output += static_strlen("\"");
// 2820             return;
// 2821         } else if (((*input)[0] == '\\') && ((*input)[1] == '\"')) {
??minify_string_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_592:
        XRL     A,#0x5c
        JNZ     ??minify_string_2
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_585:
        XRL     A,#0x22
        JNZ     ??minify_string_2
// 2822             (*output)[1] = (*input)[1];
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_586:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_104:
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine102 & 0xFFFF
// 2823             *input += static_strlen("\"");
??CrossCallReturnLabel_162:
        LCALL   ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_42:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2824             *output += static_strlen("\"");
??CrossCallReturnLabel_426:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine33 & 0xFFFF
// 2825         }
??CrossCallReturnLabel_43:
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??minify_string_0:
        MOVX    @DPTR,A
??minify_string_2:
        LCALL   ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_598:
        JZ      ??CrossCallReturnLabel_0
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_593:
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_263:
        POP     A
        CFI CFA_SP SP+0
        LCALL   ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_599:
        XRL     A,#0x22
        JNZ     ??minify_string_1
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_264:
        MOV     A,#0x22
        MOVX    @DPTR,A
        LCALL   ?Subroutine16 & 0xFFFF
// 2826     }
??CrossCallReturnLabel_0:
        LJMP    ??Subroutine186_0 & 0xFFFF
        CFI EndBlock cfiBlock1534
// 2827 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
        CFI Block cfiCond1535 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_585
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1536 Using cfiCommon0
        CFI (cfiCond1536) NoFunction
        CFI (cfiCond1536) Conditional ??CrossCallReturnLabel_586
        CFI (cfiCond1536) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1536) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1536) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1536) CFA_SP SP+0
        CFI (cfiCond1536) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1537 Using cfiCommon1
        CFI (cfiPicker1537) NoFunction
        CFI (cfiPicker1537) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        CFI EndBlock cfiCond1535
        CFI EndBlock cfiCond1536
        CFI EndBlock cfiPicker1537
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine220_0:
        CFI Block cfiCond1538 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_584
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1539 Using cfiCommon0
        CFI (cfiCond1539) NoFunction
        CFI (cfiCond1539) Conditional ??CrossCallReturnLabel_585
        CFI (cfiCond1539) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1539) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1539) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1539) CFA_SP SP+0
        CFI (cfiCond1539) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1540 Using cfiCommon0
        CFI (cfiCond1540) NoFunction
        CFI (cfiCond1540) Conditional ??CrossCallReturnLabel_586
        CFI (cfiCond1540) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1540) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1540) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1540) CFA_SP SP+0
        CFI (cfiCond1540) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1541 Using cfiCommon1
        CFI (cfiPicker1541) NoFunction
        CFI (cfiPicker1541) Picker
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_590:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond1538
        CFI EndBlock cfiCond1539
        CFI EndBlock cfiCond1540
        CFI EndBlock cfiPicker1541

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
        CFI Block cfiCond1542 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_103
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1543 Using cfiCommon0
        CFI (cfiCond1543) NoFunction
        CFI (cfiCond1543) Conditional ??CrossCallReturnLabel_104
        CFI (cfiCond1543) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1543) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1543) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1543) CFA_SP SP+-1
        CFI (cfiCond1543) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1544 Using cfiCommon1
        CFI (cfiPicker1544) NoFunction
        CFI (cfiPicker1544) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_278:
        INC     DPTR
        RET
        CFI EndBlock cfiCond1542
        CFI EndBlock cfiCond1543
        CFI EndBlock cfiPicker1544
// 2828 

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
        CFI Block cfiCond1545 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_601
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1546 Using cfiCommon0
        CFI (cfiCond1546) NoFunction
        CFI (cfiCond1546) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1546) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1546) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1546) CFA_SP SP+-5
        CFI (cfiCond1546) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1547 Using cfiCommon1
        CFI (cfiPicker1547) NoFunction
        CFI (cfiPicker1547) Picker
        INC     R0
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        CFI EndBlock cfiCond1545
        CFI EndBlock cfiCond1546
        CFI EndBlock cfiPicker1547
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine221_0:
        CFI Block cfiCond1548 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_600
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1549 Using cfiCommon0
        CFI (cfiCond1549) NoFunction
        CFI (cfiCond1549) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1549) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1549) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1549) CFA_SP SP+-5
        CFI (cfiCond1549) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1550 Using cfiCommon0
        CFI (cfiCond1550) NoFunction
        CFI (cfiCond1550) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1550) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1550) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1550) CFA_SP SP+-5
        CFI (cfiCond1550) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1551 Using cfiCommon1
        CFI (cfiPicker1551) NoFunction
        CFI (cfiPicker1551) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CFI EndBlock cfiCond1548
        CFI EndBlock cfiCond1549
        CFI EndBlock cfiCond1550
        CFI EndBlock cfiPicker1551
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine222_0:
        CFI Block cfiCond1552 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_597
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1553 Using cfiCommon0
        CFI (cfiCond1553) NoFunction
        CFI (cfiCond1553) Conditional ??CrossCallReturnLabel_598
        CFI (cfiCond1553) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1553) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1553) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1553) CFA_SP SP+0
        CFI (cfiCond1553) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1554 Using cfiCommon0
        CFI (cfiCond1554) NoFunction
        CFI (cfiCond1554) Conditional ??CrossCallReturnLabel_599
        CFI (cfiCond1554) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1554) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1554) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1554) CFA_SP SP+0
        CFI (cfiCond1554) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1555 Using cfiCommon0
        CFI (cfiCond1555) NoFunction
        CFI (cfiCond1555) Conditional ??CrossCallReturnLabel_600
        CFI (cfiCond1555) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1555) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1555) CFA_SP SP+-5
        CFI (cfiCond1555) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1556 Using cfiCommon0
        CFI (cfiCond1556) NoFunction
        CFI (cfiCond1556) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1556) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1556) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1556) CFA_SP SP+-5
        CFI (cfiCond1556) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1557 Using cfiCommon0
        CFI (cfiCond1557) NoFunction
        CFI (cfiCond1557) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1557) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1557) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1557) CFA_SP SP+-5
        CFI (cfiCond1557) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1558 Using cfiCommon1
        CFI (cfiPicker1558) NoFunction
        CFI (cfiPicker1558) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        CFI EndBlock cfiCond1552
        CFI EndBlock cfiCond1553
        CFI EndBlock cfiCond1554
        CFI EndBlock cfiCond1555
        CFI EndBlock cfiCond1556
        CFI EndBlock cfiCond1557
        CFI EndBlock cfiPicker1558
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine223_0:
        CFI Block cfiCond1559 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_592
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1560 Using cfiCommon0
        CFI (cfiCond1560) NoFunction
        CFI (cfiCond1560) Conditional ??CrossCallReturnLabel_593
        CFI (cfiCond1560) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1560) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1560) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1560) CFA_SP SP+0
        CFI (cfiCond1560) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1561 Using cfiCommon0
        CFI (cfiCond1561) NoFunction
        CFI (cfiCond1561) Conditional ??CrossCallReturnLabel_594
        CFI (cfiCond1561) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1561) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1561) CFA_SP SP+-5
        CFI (cfiCond1561) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1562 Using cfiCommon0
        CFI (cfiCond1562) NoFunction
        CFI (cfiCond1562) Conditional ??CrossCallReturnLabel_595
        CFI (cfiCond1562) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1562) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1562) CFA_SP SP+-5
        CFI (cfiCond1562) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1563 Using cfiCommon0
        CFI (cfiCond1563) NoFunction
        CFI (cfiCond1563) Conditional ??CrossCallReturnLabel_596
        CFI (cfiCond1563) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1563) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1563) CFA_SP SP+-5
        CFI (cfiCond1563) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1564 Using cfiCommon0
        CFI (cfiCond1564) NoFunction
        CFI (cfiCond1564) Conditional ??CrossCallReturnLabel_597
        CFI (cfiCond1564) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1564) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1564) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1564) CFA_SP SP+0
        CFI (cfiCond1564) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1565 Using cfiCommon0
        CFI (cfiCond1565) NoFunction
        CFI (cfiCond1565) Conditional ??CrossCallReturnLabel_598
        CFI (cfiCond1565) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1565) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1565) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1565) CFA_SP SP+0
        CFI (cfiCond1565) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1566 Using cfiCommon0
        CFI (cfiCond1566) NoFunction
        CFI (cfiCond1566) Conditional ??CrossCallReturnLabel_599
        CFI (cfiCond1566) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1566) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1566) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1566) CFA_SP SP+0
        CFI (cfiCond1566) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1567 Using cfiCommon0
        CFI (cfiCond1567) NoFunction
        CFI (cfiCond1567) Conditional ??CrossCallReturnLabel_600
        CFI (cfiCond1567) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1567) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1567) CFA_SP SP+-5
        CFI (cfiCond1567) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1568 Using cfiCommon0
        CFI (cfiCond1568) NoFunction
        CFI (cfiCond1568) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1568) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1568) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1568) CFA_SP SP+-5
        CFI (cfiCond1568) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1569 Using cfiCommon0
        CFI (cfiCond1569) NoFunction
        CFI (cfiCond1569) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1569) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1569) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1569) CFA_SP SP+-5
        CFI (cfiCond1569) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1570 Using cfiCommon1
        CFI (cfiPicker1570) NoFunction
        CFI (cfiPicker1570) Picker
        INC     DPTR
        CFI EndBlock cfiCond1559
        CFI EndBlock cfiCond1560
        CFI EndBlock cfiCond1561
        CFI EndBlock cfiCond1562
        CFI EndBlock cfiCond1563
        CFI EndBlock cfiCond1564
        CFI EndBlock cfiCond1565
        CFI EndBlock cfiCond1566
        CFI EndBlock cfiCond1567
        CFI EndBlock cfiCond1568
        CFI EndBlock cfiCond1569
        CFI EndBlock cfiPicker1570
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine224_0:
        CFI Block cfiCond1571 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_591
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1572 Using cfiCommon0
        CFI (cfiCond1572) NoFunction
        CFI (cfiCond1572) Conditional ??CrossCallReturnLabel_592
        CFI (cfiCond1572) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1572) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1572) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1572) CFA_SP SP+0
        CFI (cfiCond1572) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1573 Using cfiCommon0
        CFI (cfiCond1573) NoFunction
        CFI (cfiCond1573) Conditional ??CrossCallReturnLabel_593
        CFI (cfiCond1573) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1573) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1573) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1573) CFA_SP SP+0
        CFI (cfiCond1573) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1574 Using cfiCommon0
        CFI (cfiCond1574) NoFunction
        CFI (cfiCond1574) Conditional ??CrossCallReturnLabel_594
        CFI (cfiCond1574) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1574) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1574) CFA_SP SP+-5
        CFI (cfiCond1574) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1575 Using cfiCommon0
        CFI (cfiCond1575) NoFunction
        CFI (cfiCond1575) Conditional ??CrossCallReturnLabel_595
        CFI (cfiCond1575) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1575) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1575) CFA_SP SP+-5
        CFI (cfiCond1575) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1576 Using cfiCommon0
        CFI (cfiCond1576) NoFunction
        CFI (cfiCond1576) Conditional ??CrossCallReturnLabel_596
        CFI (cfiCond1576) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1576) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1576) CFA_SP SP+-5
        CFI (cfiCond1576) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1577 Using cfiCommon0
        CFI (cfiCond1577) NoFunction
        CFI (cfiCond1577) Conditional ??CrossCallReturnLabel_597
        CFI (cfiCond1577) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1577) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1577) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1577) CFA_SP SP+0
        CFI (cfiCond1577) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1578 Using cfiCommon0
        CFI (cfiCond1578) NoFunction
        CFI (cfiCond1578) Conditional ??CrossCallReturnLabel_598
        CFI (cfiCond1578) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1578) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1578) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1578) CFA_SP SP+0
        CFI (cfiCond1578) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1579 Using cfiCommon0
        CFI (cfiCond1579) NoFunction
        CFI (cfiCond1579) Conditional ??CrossCallReturnLabel_599
        CFI (cfiCond1579) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1579) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1579) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1579) CFA_SP SP+0
        CFI (cfiCond1579) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1580 Using cfiCommon0
        CFI (cfiCond1580) NoFunction
        CFI (cfiCond1580) Conditional ??CrossCallReturnLabel_600
        CFI (cfiCond1580) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1580) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1580) CFA_SP SP+-5
        CFI (cfiCond1580) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1581 Using cfiCommon0
        CFI (cfiCond1581) NoFunction
        CFI (cfiCond1581) Conditional ??CrossCallReturnLabel_601
        CFI (cfiCond1581) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1581) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1581) CFA_SP SP+-5
        CFI (cfiCond1581) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1582 Using cfiCommon0
        CFI (cfiCond1582) NoFunction
        CFI (cfiCond1582) Conditional ??CrossCallReturnLabel_602
        CFI (cfiCond1582) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1582) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1582) CFA_SP SP+-5
        CFI (cfiCond1582) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1583 Using cfiCommon1
        CFI (cfiPicker1583) NoFunction
        CFI (cfiPicker1583) Picker
        LCALL   ??Subroutine164_0 & 0xFFFF
??CrossCallReturnLabel_607:
        MOVX    A,@DPTR
        RET
        CFI EndBlock cfiCond1571
        CFI EndBlock cfiCond1572
        CFI EndBlock cfiCond1573
        CFI EndBlock cfiCond1574
        CFI EndBlock cfiCond1575
        CFI EndBlock cfiCond1576
        CFI EndBlock cfiCond1577
        CFI EndBlock cfiCond1578
        CFI EndBlock cfiCond1579
        CFI EndBlock cfiCond1580
        CFI EndBlock cfiCond1581
        CFI EndBlock cfiCond1582
        CFI EndBlock cfiPicker1583

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
        CFI Block cfiCond1584 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_1
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1585 Using cfiCommon0
        CFI (cfiCond1585) NoFunction
        CFI (cfiCond1585) Conditional ??CrossCallReturnLabel_0
        CFI (cfiCond1585) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1585) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1585) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1585) CFA_SP SP+0
        CFI (cfiCond1585) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker1586 Using cfiCommon1
        CFI (cfiPicker1586) NoFunction
        CFI (cfiPicker1586) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_199:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1584
        CFI EndBlock cfiCond1585
        CFI EndBlock cfiPicker1586

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2829 CJSON_PUBLIC(void) cJSON_Minify(char *json)
cJSON_Minify:
        CFI Block cfiBlock1587 Using cfiCommon0
        CFI Function cJSON_Minify
        CODE
// 2830 {
        FUNCALL cJSON_Minify, minify_string
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 4, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 4, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 4
        MOV     A,#-0x4
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 4)
        LCALL   ?Subroutine103 & 0xFFFF
// 2831     char *into = json;
??CrossCallReturnLabel_285:
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_614:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2832 
// 2833     if (json == NULL)
??CrossCallReturnLabel_427:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_469:
        JNZ     ??CrossCallReturnLabel_428
        LJMP    ??CrossCallReturnLabel_94 & 0xFFFF
// 2834     {
// 2835         return;
// 2836     }
// 2837 
// 2838     while (json[0] != '\0')
// 2839     {
// 2840         switch (json[0])
// 2841         {
// 2842             case ' ':
// 2843             case '\t':
// 2844             case '\r':
// 2845             case '\n':
// 2846                 json++;
??cJSON_Minify_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R0,A
??cJSON_Minify_1:
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_211:
        LCALL   ??Subroutine195_0 & 0xFFFF
// 2847                 break;
??CrossCallReturnLabel_428:
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_600:
        JNZ     $+5
        LJMP    ??cJSON_Minify_2 & 0xFFFF
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_594:
        ADD     A,#-0x9
        JZ      ??cJSON_Minify_0
        DEC     A
        JZ      ??cJSON_Minify_0
        ADD     A,#-0x3
        JZ      ??cJSON_Minify_0
        ADD     A,#-0x13
        JZ      ??cJSON_Minify_0
        ADD     A,#-0x2
        JNZ     $+5
        LJMP    ??cJSON_Minify_3 & 0xFFFF
        ADD     A,#-0xd
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        INC     DPTR
        JZ      $+5
        LJMP    ??cJSON_Minify_4 & 0xFFFF
// 2848 
// 2849             case '/':
// 2850                 if (json[1] == '/')
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_105:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JNZ     ??cJSON_Minify_5
// 2851                 {
// 2852                     skip_oneline_comment(&json);
        MOVX    A,@DPTR
        ADD     A,#0x2
        INC     R0
??cJSON_Minify_6:
        LCALL   ?Subroutine19 & 0xFFFF
// 2853                 }
??CrossCallReturnLabel_601:
        JZ      ??CrossCallReturnLabel_428
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_595:
        XRL     A,#0xa
        JZ      ??cJSON_Minify_0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
        SJMP    ??cJSON_Minify_6
// 2854                 else if (json[1] == '*')
??cJSON_Minify_5:
        LCALL   ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_584:
        XRL     A,#0x2a
        JNZ     ??cJSON_Minify_0
// 2855                 {
// 2856                     skip_multiline_comment(&json);
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x2
        INC     R0
        SJMP    ??cJSON_Minify_7
// 2857                 } else {
??cJSON_Minify_8:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x1
??cJSON_Minify_7:
        LCALL   ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_602:
        JNZ     $+5
        LJMP    ??CrossCallReturnLabel_428 & 0xFFFF
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_596:
        XRL     A,#0x2a
        JNZ     ??cJSON_Minify_8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        INC     DPTR
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_106:
        JNZ     ??cJSON_Minify_8
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,#0x2
        INC     R0
        INC     R0
        LJMP    ??cJSON_Minify_1 & 0xFFFF
// 2858                     json++;
// 2859                 }
// 2860                 break;
// 2861 
// 2862             case '\"':
// 2863                 minify_string(&json, (char**)&into);
??cJSON_Minify_3:
        ; Setup parameters for call to function minify_string
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??minify_string?relay
// 2864                 break;
        LJMP    ??CrossCallReturnLabel_428 & 0xFFFF
// 2865 
// 2866             default:
// 2867                 into[0] = json[0];
??cJSON_Minify_4:
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_591:
        PUSH    A
        CFI CFA_SP SP+-6
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine162_0 & 0xFFFF
??CrossCallReturnLabel_265:
        POP     A
        CFI CFA_SP SP+-5
        LCALL   ?Subroutine32 & 0xFFFF
// 2868                 json++;
// 2869                 into++;
??CrossCallReturnLabel_37:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine33 & 0xFFFF
// 2870         }
// 2871     }
??CrossCallReturnLabel_44:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LJMP    ??CrossCallReturnLabel_211 & 0xFFFF
// 2872 
// 2873     /* and null-terminate. */
// 2874     *into = '\0';
??cJSON_Minify_2:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine62 & 0xFFFF
// 2875 }
??CrossCallReturnLabel_94:
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 XSP16+0
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock1587

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
        CFI Block cfiCond1588 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_601
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1589 Using cfiCommon0
        CFI (cfiCond1589) NoFunction
        CFI (cfiCond1589) Conditional ??CrossCallReturnLabel_212, ??CrossCallReturnLabel_602
        CFI (cfiCond1589) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1589) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1589) CFA_SP SP+-5
        CFI (cfiCond1589) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1590 Using cfiCommon0
        CFI (cfiCond1590) NoFunction
        CFI (cfiCond1590) Conditional ??CrossCallReturnLabel_211
        CFI (cfiCond1590) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1590) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1590) CFA_SP SP+-5
        CFI (cfiCond1590) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1591 Using cfiCommon1
        CFI (cfiPicker1591) NoFunction
        CFI (cfiPicker1591) Picker
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
        CFI EndBlock cfiCond1588
        CFI EndBlock cfiCond1589
        CFI EndBlock cfiCond1590
        CFI EndBlock cfiPicker1591

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
        CFI Block cfiCond1592 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_105
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1593 Using cfiCommon0
        CFI (cfiCond1593) NoFunction
        CFI (cfiCond1593) Conditional ??CrossCallReturnLabel_106
        CFI (cfiCond1593) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1593) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1593) CFA_SP SP+-5
        CFI (cfiCond1593) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1594 Using cfiCommon1
        CFI (cfiPicker1594) NoFunction
        CFI (cfiPicker1594) Picker
        LCALL   ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_587:
        MOVX    A,@DPTR
        XRL     A,#0x2f
        RET
        CFI EndBlock cfiCond1592
        CFI EndBlock cfiCond1593
        CFI EndBlock cfiPicker1594

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
        CFI Block cfiCond1595 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_93
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1596 Using cfiCommon0
        CFI (cfiCond1596) NoFunction
        CFI (cfiCond1596) Conditional ??CrossCallReturnLabel_94
        CFI (cfiCond1596) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1596) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1596) CFA_SP SP+-5
        CFI (cfiCond1596) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1597 Using cfiCommon1
        CFI (cfiPicker1597) NoFunction
        CFI (cfiPicker1597) Picker
        LCALL   ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_277:
        CLR     A
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1595
        CFI EndBlock cfiCond1596
        CFI EndBlock cfiPicker1597

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
        CFI Block cfiCond1598 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_623
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+-2
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1599 Using cfiCommon0
        CFI (cfiCond1599) NoFunction
        CFI (cfiCond1599) Conditional ??CrossCallReturnLabel_624
        CFI (cfiCond1599) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1599) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1599) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1599) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1599) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1599) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1599) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1599) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1599) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1599) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1599) CFA_SP SP+-2
        CFI (cfiCond1599) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1600 Using cfiCommon0
        CFI (cfiCond1600) NoFunction
        CFI (cfiCond1600) Conditional ??CrossCallReturnLabel_625
        CFI (cfiCond1600) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1600) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1600) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1600) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1600) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1600) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1600) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1600) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1600) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1600) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1600) CFA_SP SP+-2
        CFI (cfiCond1600) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1601 Using cfiCommon0
        CFI (cfiCond1601) NoFunction
        CFI (cfiCond1601) Conditional ??CrossCallReturnLabel_626
        CFI (cfiCond1601) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1601) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1601) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1601) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1601) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1601) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1601) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1601) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1601) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1601) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1601) CFA_SP SP+-2
        CFI (cfiCond1601) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1602 Using cfiCommon0
        CFI (cfiCond1602) NoFunction
        CFI (cfiCond1602) Conditional ??CrossCallReturnLabel_627
        CFI (cfiCond1602) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1602) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1602) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1602) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1602) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1602) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1602) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1602) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1602) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1602) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1602) CFA_SP SP+-2
        CFI (cfiCond1602) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1603 Using cfiCommon1
        CFI (cfiPicker1603) NoFunction
        CFI (cfiPicker1603) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        CFI EndBlock cfiCond1598
        CFI EndBlock cfiCond1599
        CFI EndBlock cfiCond1600
        CFI EndBlock cfiCond1601
        CFI EndBlock cfiCond1602
        CFI EndBlock cfiPicker1603
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine225_0:
        CFI Block cfiCond1604 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_615
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1605 Using cfiCommon0
        CFI (cfiCond1605) NoFunction
        CFI (cfiCond1605) Conditional ??CrossCallReturnLabel_616
        CFI (cfiCond1605) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1605) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1605) CFA_SP SP+-7
        CFI Block cfiCond1606 Using cfiCommon0
        CFI (cfiCond1606) NoFunction
        CFI (cfiCond1606) Conditional ??CrossCallReturnLabel_617
        CFI (cfiCond1606) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1606) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1606) CFA_SP SP+-7
        CFI Block cfiCond1607 Using cfiCommon0
        CFI (cfiCond1607) NoFunction
        CFI (cfiCond1607) Conditional ??CrossCallReturnLabel_618
        CFI (cfiCond1607) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1607) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1607) CFA_SP SP+-5
        CFI Block cfiCond1608 Using cfiCommon0
        CFI (cfiCond1608) NoFunction
        CFI (cfiCond1608) Conditional ??CrossCallReturnLabel_619
        CFI (cfiCond1608) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1608) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1608) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1608) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1608) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1608) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1608) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1608) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1608) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1608) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1608) CFA_SP SP+-2
        CFI (cfiCond1608) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1609 Using cfiCommon0
        CFI (cfiCond1609) NoFunction
        CFI (cfiCond1609) Conditional ??CrossCallReturnLabel_620
        CFI (cfiCond1609) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1609) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1609) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1609) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1609) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1609) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1609) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1609) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1609) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1609) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1609) CFA_SP SP+-2
        CFI (cfiCond1609) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1610 Using cfiCommon0
        CFI (cfiCond1610) NoFunction
        CFI (cfiCond1610) Conditional ??CrossCallReturnLabel_621
        CFI (cfiCond1610) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1610) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1610) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1610) CFA_SP SP+0
        CFI (cfiCond1610) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1611 Using cfiCommon0
        CFI (cfiCond1611) NoFunction
        CFI (cfiCond1611) Conditional ??CrossCallReturnLabel_622
        CFI (cfiCond1611) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1611) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1611) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1611) CFA_SP SP+0
        CFI (cfiCond1611) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1612 Using cfiCommon0
        CFI (cfiCond1612) NoFunction
        CFI (cfiCond1612) Conditional ??CrossCallReturnLabel_623
        CFI (cfiCond1612) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1612) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1612) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1612) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1612) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1612) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1612) CFA_SP SP+-2
        CFI (cfiCond1612) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1613 Using cfiCommon0
        CFI (cfiCond1613) NoFunction
        CFI (cfiCond1613) Conditional ??CrossCallReturnLabel_624
        CFI (cfiCond1613) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1613) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1613) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1613) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1613) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1613) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1613) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1613) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1613) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1613) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1613) CFA_SP SP+-2
        CFI (cfiCond1613) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1614 Using cfiCommon0
        CFI (cfiCond1614) NoFunction
        CFI (cfiCond1614) Conditional ??CrossCallReturnLabel_625
        CFI (cfiCond1614) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1614) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1614) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1614) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1614) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1614) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1614) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1614) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1614) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1614) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1614) CFA_SP SP+-2
        CFI (cfiCond1614) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1615 Using cfiCommon0
        CFI (cfiCond1615) NoFunction
        CFI (cfiCond1615) Conditional ??CrossCallReturnLabel_626
        CFI (cfiCond1615) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1615) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1615) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1615) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1615) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1615) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1615) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1615) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1615) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1615) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1615) CFA_SP SP+-2
        CFI (cfiCond1615) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1616 Using cfiCommon0
        CFI (cfiCond1616) NoFunction
        CFI (cfiCond1616) Conditional ??CrossCallReturnLabel_627
        CFI (cfiCond1616) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1616) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1616) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1616) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1616) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1616) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1616) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1616) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1616) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1616) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1616) CFA_SP SP+-2
        CFI (cfiCond1616) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1617 Using cfiCommon1
        CFI (cfiPicker1617) NoFunction
        CFI (cfiPicker1617) Picker
        INC     DPTR
        INC     DPTR
        CFI EndBlock cfiCond1604
        CFI EndBlock cfiCond1605
        CFI EndBlock cfiCond1606
        CFI EndBlock cfiCond1607
        CFI EndBlock cfiCond1608
        CFI EndBlock cfiCond1609
        CFI EndBlock cfiCond1610
        CFI EndBlock cfiCond1611
        CFI EndBlock cfiCond1612
        CFI EndBlock cfiCond1613
        CFI EndBlock cfiCond1614
        CFI EndBlock cfiCond1615
        CFI EndBlock cfiCond1616
        CFI EndBlock cfiPicker1617
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine226_0:
        CFI Block cfiCond1618 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_608
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond1619 Using cfiCommon0
        CFI (cfiCond1619) NoFunction
        CFI (cfiCond1619) Conditional ??CrossCallReturnLabel_609
        CFI (cfiCond1619) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI (cfiCond1619) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI (cfiCond1619) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1619) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1619) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1619) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1619) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1619) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1619) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1619) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1619) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1619) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1619) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1619) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1619) CFA_SP SP+-2
        CFI (cfiCond1619) CFA_XSP16 add(XSP16, 86)
        CFI Block cfiCond1620 Using cfiCommon0
        CFI (cfiCond1620) NoFunction
        CFI (cfiCond1620) Conditional ??CrossCallReturnLabel_610
        CFI (cfiCond1620) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1620) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1620) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1620) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1620) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1620) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1620) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1620) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1620) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1620) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1620) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1620) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1620) CFA_SP SP+0
        CFI (cfiCond1620) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1621 Using cfiCommon0
        CFI (cfiCond1621) NoFunction
        CFI (cfiCond1621) Conditional ??CrossCallReturnLabel_611
        CFI (cfiCond1621) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1621) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1621) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1621) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1621) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1621) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1621) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1621) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1621) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1621) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1621) CFA_SP SP+-2
        CFI (cfiCond1621) CFA_XSP16 add(XSP16, 30)
        CFI Block cfiCond1622 Using cfiCommon0
        CFI (cfiCond1622) NoFunction
        CFI (cfiCond1622) Conditional ??CrossCallReturnLabel_612
        CFI (cfiCond1622) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1622) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1622) CFA_SP SP+-5
        CFI Block cfiCond1623 Using cfiCommon0
        CFI (cfiCond1623) NoFunction
        CFI (cfiCond1623) Conditional ??CrossCallReturnLabel_613
        CFI (cfiCond1623) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1623) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1623) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1623) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1623) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1623) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1623) CFA_SP SP+0
        CFI (cfiCond1623) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1624 Using cfiCommon0
        CFI (cfiCond1624) NoFunction
        CFI (cfiCond1624) Conditional ??CrossCallReturnLabel_614
        CFI (cfiCond1624) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1624) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1624) CFA_SP SP+-5
        CFI (cfiCond1624) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiCond1625 Using cfiCommon0
        CFI (cfiCond1625) NoFunction
        CFI (cfiCond1625) Conditional ??CrossCallReturnLabel_615
        CFI (cfiCond1625) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1625) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1625) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1625) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1625) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1625) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1625) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1625) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1625) CFA_SP SP+0
        CFI (cfiCond1625) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1626 Using cfiCommon0
        CFI (cfiCond1626) NoFunction
        CFI (cfiCond1626) Conditional ??CrossCallReturnLabel_616
        CFI (cfiCond1626) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1626) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1626) CFA_SP SP+-7
        CFI Block cfiCond1627 Using cfiCommon0
        CFI (cfiCond1627) NoFunction
        CFI (cfiCond1627) Conditional ??CrossCallReturnLabel_617
        CFI (cfiCond1627) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1627) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1627) CFA_SP SP+-7
        CFI Block cfiCond1628 Using cfiCommon0
        CFI (cfiCond1628) NoFunction
        CFI (cfiCond1628) Conditional ??CrossCallReturnLabel_618
        CFI (cfiCond1628) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1628) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1628) CFA_SP SP+-5
        CFI Block cfiCond1629 Using cfiCommon0
        CFI (cfiCond1629) NoFunction
        CFI (cfiCond1629) Conditional ??CrossCallReturnLabel_619
        CFI (cfiCond1629) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1629) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1629) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1629) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1629) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1629) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1629) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1629) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1629) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1629) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1629) CFA_SP SP+-2
        CFI (cfiCond1629) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1630 Using cfiCommon0
        CFI (cfiCond1630) NoFunction
        CFI (cfiCond1630) Conditional ??CrossCallReturnLabel_620
        CFI (cfiCond1630) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1630) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1630) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1630) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1630) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1630) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1630) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1630) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1630) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1630) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1630) CFA_SP SP+-2
        CFI (cfiCond1630) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1631 Using cfiCommon0
        CFI (cfiCond1631) NoFunction
        CFI (cfiCond1631) Conditional ??CrossCallReturnLabel_621
        CFI (cfiCond1631) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1631) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1631) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1631) CFA_SP SP+0
        CFI (cfiCond1631) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1632 Using cfiCommon0
        CFI (cfiCond1632) NoFunction
        CFI (cfiCond1632) Conditional ??CrossCallReturnLabel_622
        CFI (cfiCond1632) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1632) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1632) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1632) CFA_SP SP+0
        CFI (cfiCond1632) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiCond1633 Using cfiCommon0
        CFI (cfiCond1633) NoFunction
        CFI (cfiCond1633) Conditional ??CrossCallReturnLabel_623
        CFI (cfiCond1633) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1633) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1633) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1633) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1633) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1633) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1633) CFA_SP SP+-2
        CFI (cfiCond1633) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1634 Using cfiCommon0
        CFI (cfiCond1634) NoFunction
        CFI (cfiCond1634) Conditional ??CrossCallReturnLabel_624
        CFI (cfiCond1634) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1634) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1634) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1634) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1634) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1634) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1634) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1634) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1634) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1634) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1634) CFA_SP SP+-2
        CFI (cfiCond1634) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1635 Using cfiCommon0
        CFI (cfiCond1635) NoFunction
        CFI (cfiCond1635) Conditional ??CrossCallReturnLabel_625
        CFI (cfiCond1635) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1635) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1635) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1635) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1635) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1635) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1635) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1635) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1635) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1635) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1635) CFA_SP SP+-2
        CFI (cfiCond1635) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1636 Using cfiCommon0
        CFI (cfiCond1636) NoFunction
        CFI (cfiCond1636) Conditional ??CrossCallReturnLabel_626
        CFI (cfiCond1636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1636) CFA_SP SP+-2
        CFI (cfiCond1636) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1637 Using cfiCommon0
        CFI (cfiCond1637) NoFunction
        CFI (cfiCond1637) Conditional ??CrossCallReturnLabel_627
        CFI (cfiCond1637) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1637) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1637) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1637) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1637) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1637) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1637) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1637) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1637) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1637) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1637) CFA_SP SP+-2
        CFI (cfiCond1637) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiPicker1638 Using cfiCommon1
        CFI (cfiPicker1638) NoFunction
        CFI (cfiPicker1638) Picker
        LCALL   ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_635:
        RET
        CFI EndBlock cfiCond1618
        CFI EndBlock cfiCond1619
        CFI EndBlock cfiCond1620
        CFI EndBlock cfiCond1621
        CFI EndBlock cfiCond1622
        CFI EndBlock cfiCond1623
        CFI EndBlock cfiCond1624
        CFI EndBlock cfiCond1625
        CFI EndBlock cfiCond1626
        CFI EndBlock cfiCond1627
        CFI EndBlock cfiCond1628
        CFI EndBlock cfiCond1629
        CFI EndBlock cfiCond1630
        CFI EndBlock cfiCond1631
        CFI EndBlock cfiCond1632
        CFI EndBlock cfiCond1633
        CFI EndBlock cfiCond1634
        CFI EndBlock cfiCond1635
        CFI EndBlock cfiCond1636
        CFI EndBlock cfiCond1637
        CFI EndBlock cfiPicker1638

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
        CFI Block cfiCond1639 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_38
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1640 Using cfiCommon0
        CFI (cfiCond1640) NoFunction
        CFI (cfiCond1640) Conditional ??CrossCallReturnLabel_37
        CFI (cfiCond1640) DPL0 Frame(CFA_SP, 4)
        CFI (cfiCond1640) DPH0 Frame(CFA_SP, 5)
        CFI (cfiCond1640) CFA_SP SP+-5
        CFI (cfiCond1640) CFA_XSP16 add(XSP16, 4)
        CFI Block cfiPicker1641 Using cfiCommon1
        CFI (cfiPicker1641) NoFunction
        CFI (cfiPicker1641) Picker
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
        CFI EndBlock cfiCond1639
        CFI EndBlock cfiCond1640
        CFI EndBlock cfiPicker1641
// 2876 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2877 CJSON_PUBLIC(cJSON_bool) cJSON_IsInvalid(const cJSON * const item)
cJSON_IsInvalid:
        CFI Block cfiBlock1642 Using cfiCommon0
        CFI Function cJSON_IsInvalid
        CODE
// 2878 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2879     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsInvalid_0
// 2880     {
// 2881         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsInvalid_1
// 2882     }
// 2883 
// 2884     return (item->type & 0xFF) == cJSON_Invalid;
??cJSON_IsInvalid_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??cJSON_IsInvalid_2
        SETB    B.0
        SJMP    ??cJSON_IsInvalid_3
??cJSON_IsInvalid_2:
        CLR     B.0
??cJSON_IsInvalid_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsInvalid_1:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock1642
// 2885 }
// 2886 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2887 CJSON_PUBLIC(cJSON_bool) cJSON_IsFalse(const cJSON * const item)
cJSON_IsFalse:
        CFI Block cfiBlock1643 Using cfiCommon0
        CFI Function cJSON_IsFalse
        CODE
// 2888 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2889     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsFalse_0
// 2890     {
// 2891         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsFalse_1
// 2892     }
// 2893 
// 2894     return (item->type & 0xFF) == cJSON_False;
??cJSON_IsFalse_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??cJSON_IsFalse_2
        SETB    B.0
        SJMP    ??cJSON_IsFalse_3
??cJSON_IsFalse_2:
        CLR     B.0
??cJSON_IsFalse_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsFalse_1:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock1643
// 2895 }
// 2896 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2897 CJSON_PUBLIC(cJSON_bool) cJSON_IsTrue(const cJSON * const item)
cJSON_IsTrue:
        CFI Block cfiBlock1644 Using cfiCommon0
        CFI Function cJSON_IsTrue
        CODE
// 2898 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2899     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsTrue_0
// 2900     {
// 2901         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsTrue_1
// 2902     }
// 2903 
// 2904     return (item->type & 0xff) == cJSON_True;
??cJSON_IsTrue_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??cJSON_IsTrue_2
        SETB    B.0
        SJMP    ??cJSON_IsTrue_3
??cJSON_IsTrue_2:
        CLR     B.0
??cJSON_IsTrue_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsTrue_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1644
// 2905 }
// 2906 
// 2907 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2908 CJSON_PUBLIC(cJSON_bool) cJSON_IsBool(const cJSON * const item)
cJSON_IsBool:
        CFI Block cfiBlock1645 Using cfiCommon0
        CFI Function cJSON_IsBool
        CODE
// 2909 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2910     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsBool_0
// 2911     {
// 2912         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsBool_1
// 2913     }
// 2914 
// 2915     return (item->type & (cJSON_True | cJSON_False)) != 0;
??cJSON_IsBool_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x3
        JZ      ??cJSON_IsBool_2
        SETB    B.0
        SJMP    ??cJSON_IsBool_3
??cJSON_IsBool_2:
        CLR     B.0
??cJSON_IsBool_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsBool_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1645
// 2916 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2917 CJSON_PUBLIC(cJSON_bool) cJSON_IsNull(const cJSON * const item)
cJSON_IsNull:
        CFI Block cfiBlock1646 Using cfiCommon0
        CFI Function cJSON_IsNull
        CODE
// 2918 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2919     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsNull_0
// 2920     {
// 2921         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsNull_1
// 2922     }
// 2923 
// 2924     return (item->type & 0xFF) == cJSON_NULL;
??cJSON_IsNull_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x4
        JNZ     ??cJSON_IsNull_2
        SETB    B.0
        SJMP    ??cJSON_IsNull_3
??cJSON_IsNull_2:
        CLR     B.0
??cJSON_IsNull_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsNull_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1646
// 2925 }
// 2926 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2927 CJSON_PUBLIC(cJSON_bool) cJSON_IsNumber(const cJSON * const item)
cJSON_IsNumber:
        CFI Block cfiBlock1647 Using cfiCommon0
        CFI Function cJSON_IsNumber
        CODE
// 2928 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2929     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsNumber_0
// 2930     {
// 2931         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsNumber_1
// 2932     }
// 2933 
// 2934     return (item->type & 0xFF) == cJSON_Number;
??cJSON_IsNumber_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x8
        JNZ     ??cJSON_IsNumber_2
        SETB    B.0
        SJMP    ??cJSON_IsNumber_3
??cJSON_IsNumber_2:
        CLR     B.0
??cJSON_IsNumber_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
        CFI EndBlock cfiBlock1647
??cJSON_IsNumber_1:
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
// 2935 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
        CFI Block cfiBlock1648 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     R3,#0x0
        LJMP    ??Subroutine204_0 & 0xFFFF
        CFI EndBlock cfiBlock1648
// 2936 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2937 CJSON_PUBLIC(cJSON_bool) cJSON_IsString(const cJSON * const item)
cJSON_IsString:
        CFI Block cfiBlock1649 Using cfiCommon0
        CFI Function cJSON_IsString
        CODE
// 2938 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2939     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsString_0
// 2940     {
// 2941         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsString_1
// 2942     }
// 2943 
// 2944     return (item->type & 0xFF) == cJSON_String;
??cJSON_IsString_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x10
        JNZ     ??cJSON_IsString_2
        SETB    B.0
        SJMP    ??cJSON_IsString_3
??cJSON_IsString_2:
        CLR     B.0
??cJSON_IsString_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsString_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1649
// 2945 }
// 2946 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2947 CJSON_PUBLIC(cJSON_bool) cJSON_IsArray(const cJSON * const item)
cJSON_IsArray:
        CFI Block cfiBlock1650 Using cfiCommon0
        CFI Function cJSON_IsArray
        CODE
// 2948 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2949     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsArray_0
// 2950     {
// 2951         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsArray_1
// 2952     }
// 2953 
// 2954     return (item->type & 0xFF) == cJSON_Array;
??cJSON_IsArray_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x20
        JNZ     ??cJSON_IsArray_2
        SETB    B.0
        SJMP    ??cJSON_IsArray_3
??cJSON_IsArray_2:
        CLR     B.0
??cJSON_IsArray_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsArray_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1650
// 2955 }
// 2956 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2957 CJSON_PUBLIC(cJSON_bool) cJSON_IsObject(const cJSON * const item)
cJSON_IsObject:
        CFI Block cfiBlock1651 Using cfiCommon0
        CFI Function cJSON_IsObject
        CODE
// 2958 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2959     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsObject_0
// 2960     {
// 2961         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsObject_1
// 2962     }
// 2963 
// 2964     return (item->type & 0xFF) == cJSON_Object;
??cJSON_IsObject_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x40
        JNZ     ??cJSON_IsObject_2
        SETB    B.0
        SJMP    ??cJSON_IsObject_3
??cJSON_IsObject_2:
        CLR     B.0
??cJSON_IsObject_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsObject_1:
        SJMP    ?Subroutine9
        CFI EndBlock cfiBlock1651
// 2965 }
// 2966 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2967 CJSON_PUBLIC(cJSON_bool) cJSON_IsRaw(const cJSON * const item)
cJSON_IsRaw:
        CFI Block cfiBlock1652 Using cfiCommon0
        CFI Function cJSON_IsRaw
        CODE
// 2968 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2969     if (item == NULL)
        MOV     A,R2
        ORL     A,R3
        JNZ     ??cJSON_IsRaw_0
// 2970     {
// 2971         return false;
        MOV     R2,#0x0
        SJMP    ??cJSON_IsRaw_1
// 2972     }
// 2973 
// 2974     return (item->type & 0xFF) == cJSON_Raw;
??cJSON_IsRaw_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x80
        JNZ     ??cJSON_IsRaw_2
        SETB    B.0
        SJMP    ??cJSON_IsRaw_3
??cJSON_IsRaw_2:
        CLR     B.0
??cJSON_IsRaw_3:
        MOV     C,B.0
        CLR     A
        RLC     A
        MOV     R2,A
??cJSON_IsRaw_1:
        LJMP    ?Subroutine9 & 0xFFFF
        CFI EndBlock cfiBlock1652
// 2975 }
// 2976 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2977 CJSON_PUBLIC(cJSON_bool) cJSON_Compare(const cJSON * const a, const cJSON * const b, const cJSON_bool case_sensitive)
cJSON_Compare:
        CFI Block cfiBlock1653 Using cfiCommon0
        CFI Function cJSON_Compare
        CODE
// 2978 {
        FUNCALL cJSON_Compare, compare_double
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, strcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, cJSON_Compare
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, cJSON_Compare
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, get_object_item
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL cJSON_Compare, cJSON_Compare
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
// 2979     if ((a == NULL) || (b == NULL) || ((a->type & 0xFF) != (b->type & 0xFF)))
        MOV     A,R2
        ORL     A,?V0 + 5
        JZ      ??cJSON_Compare_0
        MOV     A,R6
        ORL     A,R7
        JZ      ??cJSON_Compare_0
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R0
        JZ      ??cJSON_Compare_1
// 2980     {
// 2981         return false;
??cJSON_Compare_0:
        MOV     R2,#0x0
??cJSON_Compare_2:
        MOV     R3,#0x0
// 2982     }
        LJMP    ?Subroutine6 & 0xFFFF
// 2983 
// 2984     /* check if type is valid */
// 2985     switch (a->type & 0xFF)
??cJSON_Compare_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??cJSON_Compare_3
        DEC     A
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x2
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x4
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x8
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x10
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x20
        JZ      ??cJSON_Compare_3
        ADD     A,#-0x40
        JNZ     ??cJSON_Compare_0
// 2986     {
// 2987         case cJSON_False:
// 2988         case cJSON_True:
// 2989         case cJSON_NULL:
// 2990         case cJSON_Number:
// 2991         case cJSON_String:
// 2992         case cJSON_Raw:
// 2993         case cJSON_Array:
// 2994         case cJSON_Object:
// 2995             break;
// 2996 
// 2997         default:
// 2998             return false;
// 2999     }
// 3000 
// 3001     /* identical objects are equal */
// 3002     if (a == b)
??cJSON_Compare_3:
        MOV     A,R6
        XRL     A,?V0 + 4
        JNZ     ??cJSON_Compare_4
        MOV     A,R7
        XRL     A,?V0 + 5
??cJSON_Compare_4:
        JNZ     ??cJSON_Compare_5
// 3003     {
// 3004         return true;
??cJSON_Compare_6:
        MOV     R2,#0x1
        SJMP    ??cJSON_Compare_2
// 3005     }
// 3006 
// 3007     switch (a->type & 0xFF)
??cJSON_Compare_5:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??cJSON_Compare_6
        DEC     A
        JZ      ??cJSON_Compare_6
        ADD     A,#-0x2
        JZ      ??cJSON_Compare_6
        ADD     A,#-0x4
        JZ      ??cJSON_Compare_7
        ADD     A,#-0x8
        JZ      ??cJSON_Compare_8
        ADD     A,#-0x10
        JZ      ??cJSON_Compare_9
        ADD     A,#-0x20
        JNZ     $+5
        LJMP    ??cJSON_Compare_10 & 0xFFFF
        ADD     A,#-0x40
        JZ      ??cJSON_Compare_8
        SJMP    ??cJSON_Compare_0
// 3008     {
// 3009         /* in these cases and equal type is enough */
// 3010         case cJSON_False:
// 3011         case cJSON_True:
// 3012         case cJSON_NULL:
// 3013             return true;
// 3014 
// 3015         case cJSON_Number:
// 3016             if (compare_double(a->valuedouble, b->valuedouble))
??cJSON_Compare_7:
        ; Setup parameters for call to function compare_double
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_137:
        LCALL   ?PUSH_XSTACK8_X_FOUR
        CFI CFA_XSP16 add(XSP16, 22)
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ?XLOAD_R2345
        LCALL   ??compare_double?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     ??cJSON_Compare_6
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3017             {
// 3018                 return true;
// 3019             }
// 3020             return false;
// 3021 
// 3022         case cJSON_String:
// 3023         case cJSON_Raw:
// 3024             if ((a->valuestring == NULL) || (b->valuestring == NULL))
??cJSON_Compare_8:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_484:
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_485:
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3025             {
// 3026                 return false;
// 3027             }
// 3028             if (strcmp(a->valuestring, b->valuestring) == 0)
        ; Setup parameters for call to function strcmp
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_530:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_391:
        LCALL   ??strcmp?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
        LJMP    ??cJSON_Compare_6 & 0xFFFF
// 3029             {
// 3030                 return true;
// 3031             }
// 3032 
// 3033             return false;
// 3034 
// 3035         case cJSON_Array:
// 3036         {
// 3037             cJSON *a_element = a->child;
??cJSON_Compare_9:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine38 & 0xFFFF
// 3038             cJSON *b_element = b->child;
??CrossCallReturnLabel_55:
        SJMP    ??cJSON_Compare_11
// 3039 
// 3040             for (; (a_element != NULL) && (b_element != NULL);)
??cJSON_Compare_12:
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3041             {
// 3042                 if (!cJSON_Compare(a_element, b_element, case_sensitive))
        ; Setup parameters for call to function cJSON_Compare
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Compare?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3043                 {
// 3044                     return false;
// 3045                 }
// 3046 
// 3047                 a_element = a_element->next;
        LCALL   ?Subroutine60 & 0xFFFF
// 3048                 b_element = b_element->next;
??CrossCallReturnLabel_516:
        MOV     DPL,R6
        MOV     DPH,R7
??cJSON_Compare_11:
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
// 3049             }
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??cJSON_Compare_12
// 3050 
// 3051             /* one of the arrays is longer than the other */
// 3052             if (a_element != b_element) {
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??cJSON_Compare_6 & 0xFFFF
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3053                 return false;
// 3054             }
// 3055 
// 3056             return true;
// 3057         }
// 3058 
// 3059         case cJSON_Object:
// 3060         {
// 3061             cJSON *a_element = NULL;
// 3062             cJSON *b_element = NULL;
// 3063             cJSON_ArrayForEach(a_element, a)
??cJSON_Compare_10:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        SJMP    ??cJSON_Compare_13
// 3064             {
// 3065                 /* TODO This has O(n^2) runtime, which is horrible! */
// 3066                 b_element = get_object_item(b, a_element->string, case_sensitive);
??cJSON_Compare_14:
        ; Setup parameters for call to function get_object_item
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 2
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_637:
        MOV     A,?V0 + 3
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_653:
        LCALL   ??get_object_item?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 3067                 if (b_element == NULL)
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3068                 {
// 3069                     return false;
// 3070                 }
// 3071 
// 3072                 if (!cJSON_Compare(a_element, b_element, case_sensitive))
        ; Setup parameters for call to function cJSON_Compare
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??cJSON_Compare?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3073                 {
// 3074                     return false;
// 3075                 }
// 3076             }
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
??cJSON_Compare_13:
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_92:
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??cJSON_Compare_14
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
??cJSON_Compare_15:
        LCALL   ?Subroutine59 & 0xFFFF
// 3077 
// 3078             /* doing this twice, once on a and b to prevent true comparison if a subset of b
// 3079              * TODO: Do this the proper way, this is just a fix for now */
// 3080             cJSON_ArrayForEach(b_element, b)
??CrossCallReturnLabel_89:
        JNZ     $+5
        LJMP    ??cJSON_Compare_6 & 0xFFFF
// 3081             {
// 3082                 a_element = get_object_item(a, b_element->string, case_sensitive);
        ; Setup parameters for call to function get_object_item
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_360:
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_527:
        MOV     R2,?V0 + 4
        MOV     R3,?V0 + 5
        LCALL   ??get_object_item?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 3083                 if (a_element == NULL)
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3084                 {
// 3085                     return false;
// 3086                 }
// 3087 
// 3088                 if (!cJSON_Compare(b_element, a_element, case_sensitive))
        ; Setup parameters for call to function cJSON_Compare
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 20)
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??cJSON_Compare?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??cJSON_Compare_0 & 0xFFFF
// 3089                 {
// 3090                     return false;
// 3091                 }
// 3092             }
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        SJMP    ??cJSON_Compare_15
        CFI EndBlock cfiBlock1653
// 3093 
// 3094             return true;
// 3095         }
// 3096 
// 3097         default:
// 3098             return false;
// 3099     }
// 3100 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine144:
        CFI Block cfiCond1654 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_641
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1655 Using cfiCommon0
        CFI (cfiCond1655) NoFunction
        CFI (cfiCond1655) Conditional ??CrossCallReturnLabel_642
        CFI (cfiCond1655) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1655) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1655) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1655) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1655) CFA_SP SP+0
        CFI (cfiCond1655) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1656 Using cfiCommon0
        CFI (cfiCond1656) NoFunction
        CFI (cfiCond1656) Conditional ??CrossCallReturnLabel_643
        CFI (cfiCond1656) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1656) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1656) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1656) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1656) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1656) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1656) CFA_SP SP+0
        CFI (cfiCond1656) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1657 Using cfiCommon1
        CFI (cfiPicker1657) NoFunction
        CFI (cfiPicker1657) Picker
        MOV     A,R6
        CFI EndBlock cfiCond1654
        CFI EndBlock cfiCond1655
        CFI EndBlock cfiCond1656
        CFI EndBlock cfiPicker1657
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine227_0:
        CFI Block cfiCond1658 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_636
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1659 Using cfiCommon0
        CFI (cfiCond1659) NoFunction
        CFI (cfiCond1659) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_352
        CFI (cfiCond1659) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1659) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1659) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1659) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1659) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1659) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1659) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1659) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1659) CFA_SP SP+0
        CFI (cfiCond1659) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1660 Using cfiCommon0
        CFI (cfiCond1660) NoFunction
        CFI (cfiCond1660) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_353
        CFI (cfiCond1660) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1660) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1660) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1660) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1660) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1660) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1660) CFA_SP SP+0
        CFI (cfiCond1660) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1661 Using cfiCommon0
        CFI (cfiCond1661) NoFunction
        CFI (cfiCond1661) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_354
        CFI (cfiCond1661) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1661) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1661) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1661) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1661) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1661) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1661) CFA_SP SP+0
        CFI (cfiCond1661) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1662 Using cfiCommon0
        CFI (cfiCond1662) NoFunction
        CFI (cfiCond1662) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_355
        CFI (cfiCond1662) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1662) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1662) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1662) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1662) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1662) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1662) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1662) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1662) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1662) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1662) CFA_SP SP+0
        CFI (cfiCond1662) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1663 Using cfiCommon0
        CFI (cfiCond1663) NoFunction
        CFI (cfiCond1663) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_356
        CFI (cfiCond1663) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1663) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1663) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1663) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1663) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1663) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1663) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1663) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1663) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1663) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1663) CFA_SP SP+0
        CFI (cfiCond1663) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1664 Using cfiCommon0
        CFI (cfiCond1664) NoFunction
        CFI (cfiCond1664) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_357
        CFI (cfiCond1664) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1664) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1664) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1664) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1664) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1664) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1664) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1664) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1664) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1664) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1664) CFA_SP SP+0
        CFI (cfiCond1664) CFA_XSP16 add(XSP16, 16)
        CFI Block cfiCond1665 Using cfiCommon0
        CFI (cfiCond1665) NoFunction
        CFI (cfiCond1665) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_358
        CFI (cfiCond1665) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1665) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1665) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1665) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1665) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1665) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1665) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1665) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1665) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1665) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1665) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1665) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1665) CFA_SP SP+0
        CFI (cfiCond1665) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1666 Using cfiCommon0
        CFI (cfiCond1666) NoFunction
        CFI (cfiCond1666) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_359
        CFI (cfiCond1666) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1666) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1666) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1666) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1666) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1666) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1666) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1666) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1666) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1666) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1666) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1666) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1666) CFA_SP SP+0
        CFI (cfiCond1666) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1667 Using cfiCommon0
        CFI (cfiCond1667) NoFunction
        CFI (cfiCond1667) Conditional ??CrossCallReturnLabel_639, ??CrossCallReturnLabel_360
        CFI (cfiCond1667) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1667) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1667) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1667) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1667) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1667) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1667) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1667) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1667) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1667) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1667) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1667) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1667) CFA_SP SP+0
        CFI (cfiCond1667) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1668 Using cfiCommon0
        CFI (cfiCond1668) NoFunction
        CFI (cfiCond1668) Conditional ??CrossCallReturnLabel_640, ??CrossCallReturnLabel_170
        CFI (cfiCond1668) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1668) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1668) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1668) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1668) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1668) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1668) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1668) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1668) CFA_SP SP+0
        CFI (cfiCond1668) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1669 Using cfiCommon0
        CFI (cfiCond1669) NoFunction
        CFI (cfiCond1669) Conditional ??CrossCallReturnLabel_640, ??CrossCallReturnLabel_171
        CFI (cfiCond1669) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1669) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1669) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1669) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1669) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1669) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1669) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1669) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1669) CFA_SP SP+0
        CFI (cfiCond1669) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1670 Using cfiCommon0
        CFI (cfiCond1670) NoFunction
        CFI (cfiCond1670) Conditional ??CrossCallReturnLabel_640, ??CrossCallReturnLabel_172
        CFI (cfiCond1670) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1670) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1670) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1670) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1670) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1670) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1670) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1670) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1670) CFA_SP SP+0
        CFI (cfiCond1670) CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1671 Using cfiCommon0
        CFI (cfiCond1671) NoFunction
        CFI (cfiCond1671) Conditional ??CrossCallReturnLabel_637
        CFI (cfiCond1671) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1671) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1671) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1671) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1671) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1671) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1671) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1671) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1671) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1671) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1671) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1671) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1671) CFA_SP SP+0
        CFI (cfiCond1671) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1672 Using cfiCommon0
        CFI (cfiCond1672) NoFunction
        CFI (cfiCond1672) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_654
        CFI (cfiCond1672) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1672) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1672) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1672) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1672) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1672) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1672) CFA_SP SP+0
        CFI (cfiCond1672) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1673 Using cfiCommon0
        CFI (cfiCond1673) NoFunction
        CFI (cfiCond1673) Conditional ??CrossCallReturnLabel_638, ??CrossCallReturnLabel_655
        CFI (cfiCond1673) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1673) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1673) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1673) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1673) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1673) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1673) CFA_SP SP+0
        CFI (cfiCond1673) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1674 Using cfiCommon0
        CFI (cfiCond1674) NoFunction
        CFI (cfiCond1674) Conditional ??CrossCallReturnLabel_641
        CFI (cfiCond1674) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1674) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1674) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1674) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1674) CFA_SP SP+0
        CFI (cfiCond1674) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1675 Using cfiCommon0
        CFI (cfiCond1675) NoFunction
        CFI (cfiCond1675) Conditional ??CrossCallReturnLabel_642
        CFI (cfiCond1675) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1675) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1675) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1675) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1675) CFA_SP SP+0
        CFI (cfiCond1675) CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1676 Using cfiCommon0
        CFI (cfiCond1676) NoFunction
        CFI (cfiCond1676) Conditional ??CrossCallReturnLabel_643
        CFI (cfiCond1676) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1676) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1676) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1676) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1676) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1676) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1676) CFA_SP SP+0
        CFI (cfiCond1676) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1677 Using cfiCommon1
        CFI (cfiPicker1677) NoFunction
        CFI (cfiPicker1677) Picker
        ADD     A,#0x10
        MOV     DPL,A
        RET
        CFI EndBlock cfiCond1658
        CFI EndBlock cfiCond1659
        CFI EndBlock cfiCond1660
        CFI EndBlock cfiCond1661
        CFI EndBlock cfiCond1662
        CFI EndBlock cfiCond1663
        CFI EndBlock cfiCond1664
        CFI EndBlock cfiCond1665
        CFI EndBlock cfiCond1666
        CFI EndBlock cfiCond1667
        CFI EndBlock cfiCond1668
        CFI EndBlock cfiCond1669
        CFI EndBlock cfiCond1670
        CFI EndBlock cfiCond1671
        CFI EndBlock cfiCond1672
        CFI EndBlock cfiCond1673
        CFI EndBlock cfiCond1674
        CFI EndBlock cfiCond1675
        CFI EndBlock cfiCond1676
        CFI EndBlock cfiPicker1677

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
        CFI Block cfiCond1678 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_88
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 18)
        CFI Block cfiCond1679 Using cfiCommon0
        CFI (cfiCond1679) NoFunction
        CFI (cfiCond1679) Conditional ??CrossCallReturnLabel_89
        CFI (cfiCond1679) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1679) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1679) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1679) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1679) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1679) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1679) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1679) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1679) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1679) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1679) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1679) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1679) CFA_SP SP+0
        CFI (cfiCond1679) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1680 Using cfiCommon1
        CFI (cfiPicker1680) NoFunction
        CFI (cfiPicker1680) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_521:
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        RET
        CFI EndBlock cfiCond1678
        CFI EndBlock cfiCond1679
        CFI EndBlock cfiPicker1680

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
        CFI Block cfiCond1681 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_54
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        CFI Block cfiCond1682 Using cfiCommon0
        CFI (cfiCond1682) NoFunction
        CFI (cfiCond1682) Conditional ??CrossCallReturnLabel_55
        CFI (cfiCond1682) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1682) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1682) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1682) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1682) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1682) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1682) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1682) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1682) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1682) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1682) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1682) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1682) CFA_SP SP+0
        CFI (cfiCond1682) CFA_XSP16 add(XSP16, 18)
        CFI Block cfiPicker1683 Using cfiCommon1
        CFI (cfiPicker1683) NoFunction
        CFI (cfiPicker1683) Picker
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_518:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
        CFI EndBlock cfiCond1681
        CFI EndBlock cfiCond1682
        CFI EndBlock cfiPicker1683

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
        CFI Block cfiCond1684 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_654
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1685 Using cfiCommon0
        CFI (cfiCond1685) NoFunction
        CFI (cfiCond1685) Conditional ??CrossCallReturnLabel_655
        CFI (cfiCond1685) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1685) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1685) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1685) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1685) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1685) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1685) CFA_SP SP+0
        CFI (cfiCond1685) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1686 Using cfiCommon1
        CFI (cfiPicker1686) NoFunction
        CFI (cfiPicker1686) Picker
        MOV     A,?V0 + 0
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_638:
        MOV     A,?V0 + 1
        CFI EndBlock cfiCond1684
        CFI EndBlock cfiCond1685
        CFI EndBlock cfiPicker1686
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine228_0:
        CFI Block cfiCond1687 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_653
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1688 Using cfiCommon0
        CFI (cfiCond1688) NoFunction
        CFI (cfiCond1688) Conditional ??CrossCallReturnLabel_654
        CFI (cfiCond1688) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1688) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1688) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1688) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1688) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1688) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1688) CFA_SP SP+0
        CFI (cfiCond1688) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1689 Using cfiCommon0
        CFI (cfiCond1689) NoFunction
        CFI (cfiCond1689) Conditional ??CrossCallReturnLabel_655
        CFI (cfiCond1689) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1689) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1689) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1689) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1689) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1689) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1689) CFA_SP SP+0
        CFI (cfiCond1689) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1690 Using cfiCommon1
        CFI (cfiPicker1690) NoFunction
        CFI (cfiPicker1690) Picker
        LCALL   ??Subroutine176_0 & 0xFFFF
        CFI EndBlock cfiCond1687
        CFI EndBlock cfiCond1688
        CFI EndBlock cfiCond1689
        CFI EndBlock cfiPicker1690
??CrossCallReturnLabel_651:
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine229_0:
        CFI Block cfiCond1691 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_652
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 14)
        CFI Block cfiCond1692 Using cfiCommon0
        CFI (cfiCond1692) NoFunction
        CFI (cfiCond1692) Conditional ??CrossCallReturnLabel_653
        CFI (cfiCond1692) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI (cfiCond1692) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI (cfiCond1692) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI (cfiCond1692) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI (cfiCond1692) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI (cfiCond1692) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI (cfiCond1692) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1692) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1692) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1692) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1692) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1692) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1692) CFA_SP SP+0
        CFI (cfiCond1692) CFA_XSP16 add(XSP16, 20)
        CFI Block cfiCond1693 Using cfiCommon0
        CFI (cfiCond1693) NoFunction
        CFI (cfiCond1693) Conditional ??CrossCallReturnLabel_654
        CFI (cfiCond1693) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1693) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1693) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1693) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1693) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1693) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1693) CFA_SP SP+0
        CFI (cfiCond1693) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiCond1694 Using cfiCommon0
        CFI (cfiCond1694) NoFunction
        CFI (cfiCond1694) Conditional ??CrossCallReturnLabel_655
        CFI (cfiCond1694) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI (cfiCond1694) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI (cfiCond1694) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI (cfiCond1694) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond1694) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond1694) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond1694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond1694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond1694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond1694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond1694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond1694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond1694) CFA_SP SP+0
        CFI (cfiCond1694) CFA_XSP16 add(XSP16, 12)
        CFI Block cfiPicker1695 Using cfiCommon1
        CFI (cfiPicker1695) NoFunction
        CFI (cfiPicker1695) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
        CFI EndBlock cfiCond1691
        CFI EndBlock cfiCond1692
        CFI EndBlock cfiCond1693
        CFI EndBlock cfiCond1694
        CFI EndBlock cfiPicker1695
// 3101 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3102 CJSON_PUBLIC(void *) cJSON_malloc(size_t size)
cJSON_malloc:
        CFI Block cfiBlock1696 Using cfiCommon0
        CFI Function cJSON_malloc
        CODE
// 3103 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3104     return global_hooks.allocate(size);
        ; Setup parameters for indirect call
        MOV     DPTR,#global_hooks
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock1696
// 3105 }
// 3106 

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3107 CJSON_PUBLIC(void) cJSON_free(void *object)
cJSON_free:
        CFI Block cfiBlock1697 Using cfiCommon0
        CFI Function cJSON_free
        CODE
// 3108 {
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 3109     global_hooks.deallocate(object);
        ; Setup parameters for indirect call
        MOV     DPTR,#global_hooks + 2
        LJMP    ?Subroutine0 & 0xFFFF
        CFI EndBlock cfiBlock1697
// 3110 }

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for global_hooks>`:
        DATA16
        DW ??malloc?relay
        DW ??free?relay
        DW ??realloc?relay

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??malloc?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    malloc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??realloc?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    realloc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??free?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    free

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetErrorPtr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetErrorPtr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetStringValue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetStringValue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetNumberValue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetNumberValue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Version?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Version

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??case_insensitive_strcmp?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    case_insensitive_strcmp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_strdup?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_strdup

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_InitHooks?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_InitHooks

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_New_Item?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_New_Item

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Delete?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Delete

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_number?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_number

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_SetNumberHelper?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_SetNumberHelper

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_SetValuestring?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_SetValuestring

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ensure?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    ensure

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??update_offset?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    update_offset

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??compare_double?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    compare_double

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_number?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_number

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_hex4?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_hex4

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??utf16_literal_to_utf8?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    utf16_literal_to_utf8

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_string?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_string

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_string_ptr?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_string_ptr

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??buffer_skip_whitespace?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    buffer_skip_whitespace

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ParseWithOpts?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ParseWithOpts

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ParseWithLengthOpts?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ParseWithLengthOpts

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Parse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Parse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ParseWithLength?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ParseWithLength

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Print?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Print

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_PrintUnformatted?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_PrintUnformatted

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_PrintBuffered?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_PrintBuffered

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_PrintPreallocated?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_PrintPreallocated

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_value?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_value

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_value?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_value

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_array?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_array

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_array?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_array

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??parse_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    parse_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??print_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    print_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetArraySize?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetArraySize

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_array_item?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_array_item

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetArrayItem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetArrayItem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??get_object_item?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    get_object_item

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetObjectItem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetObjectItem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_GetObjectItemCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_GetObjectItemCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_HasObjectItem?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_HasObjectItem

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??suffix_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    suffix_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??create_reference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    create_reference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??add_item_to_array?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    add_item_to_array

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemToArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemToArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??add_item_to_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    add_item_to_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemToObjectCS?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemToObjectCS

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemReferenceToArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemReferenceToArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddItemReferenceToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddItemReferenceToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddNullToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddNullToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddTrueToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddTrueToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddFalseToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddFalseToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddBoolToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddBoolToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddNumberToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddNumberToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddStringToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddStringToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddRawToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddRawToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddObjectToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddObjectToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_AddArrayToObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_AddArrayToObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemViaPointer?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemViaPointer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemFromArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemFromArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DeleteItemFromArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DeleteItemFromArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemFromObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemFromObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DetachItemFromObjectCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DetachItemFromObjectCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DeleteItemFromObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DeleteItemFromObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_DeleteItemFromObjectCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_DeleteItemFromObjectCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_InsertItemInArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_InsertItemInArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemViaPointer?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemViaPointer

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemInArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemInArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??replace_item_in_object?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    replace_item_in_object

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemInObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemInObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_ReplaceItemInObjectCaseSensitive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_ReplaceItemInObjectCaseSensitive

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateNull?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateNull

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateTrue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateTrue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateFalse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateFalse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateBool?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateBool

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateNumber?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateNumber

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateString?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateString

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateStringReference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateStringReference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateObjectReference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateObjectReference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateArrayReference?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateArrayReference

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateRaw?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateRaw

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateIntArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateIntArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateFloatArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateFloatArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateDoubleArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateDoubleArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_CreateStringArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_CreateStringArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Duplicate?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Duplicate

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??minify_string?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    minify_string

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Minify?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Minify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsInvalid?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsInvalid

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsFalse?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsFalse

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsTrue?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsTrue

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsBool?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsBool

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsNull?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsNull

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsNumber?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsNumber

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsString?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsString

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsArray?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsArray

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsObject?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsObject

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_IsRaw?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_IsRaw

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_Compare?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_Compare

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_malloc?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_malloc

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??cJSON_free?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    cJSON_free

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%i.%i.%i">`:
        DB "%i.%i.%i"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {0}>`:
        DB 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0, 0, 0, 0, 0, 0, 0, 0
        DB 0

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "null">`:
        DB "null"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%1.15g">`:
        DB "%1.15g"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "%lg">`:
        DB "%lg"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "%1.17g">`:
        DB "%1.17g"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\"\\"">`:
        DB "\"\""

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "u%04x">`:
        DB "u%04x"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "\\357\\273\\277">`:
        DB "\357\273\277"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {(unsigned char const *)0, 0, 0, 0,`:
        DATA16
        DW 0H
        DW 0
        DW 0
        DW 0
        DW 0H
        DW 0H
        DW 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,`:
        DATA16
        DW 0H
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0H
        DW 0H
        DW 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {(unsigned char *)0, 0, 0, 0, 0, 0,_1`:
        DATA16
        DW 0H
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0
        DW 0H
        DW 0H
        DW 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "false">`:
        DB "false"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "true">`:
        DB "true"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_0:
        DD 0H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_46fffe00:
        DD 46FFFE00H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_c6fffffe:
        DD 0C6FFFFFEH

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_34000000:
        DD 34000000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_10000:
        DD 65536

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_80:
        DD 128

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_800:
        DD 2048

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_110000:
        DD 1114112

        END
// 
// 14 237 bytes in segment BANKED_CODE
//    654 bytes in segment BANK_RELAYS
//      6 bytes in segment XDATA_I
//      6 bytes in segment XDATA_ID
//    164 bytes in segment XDATA_ROM_C
//     19 bytes in segment XDATA_Z
// 
// 14 837 bytes of CODE  memory (+ 60 bytes shared)
//    132 bytes of CONST memory (+ 32 bytes shared)
//     25 bytes of XDATA memory
//
//Errors: none
//Warnings: 2
